@page "/ConsultingList"

@inherits BlazorBaseComponent

@attribute [AuthorizeAttribute(Policy = "ManageConsultingList")]

@{
    base.CheckUserActionPermission("ManageConsultingList", true);
}

<div class="content-wrapper">
    <div class="content-header">
        <div class="container-fluid">
            <h6 class="page-title-left">Консултирани лица</h6>
            <div class="card">
                <div class="card-header">
                    <nav class="navbar navbar-expand  ">
                        <!-- Left navbar links -->
                        <ul class="navbar-nav">
                            <li class="nav-item d-none d-sm-inline-block">
                                <SfTooltip Content="Създаване на ново консултиране" Position="TooltipPosition.BottomCenter" OpensOn="Hover" CssClass="toolTip-zindex">
                                    <button type="button" class="btn btn-primary btn-outline-primary waves-effect md-trigger" @onclick="AddConsultingClientBtn">Ново лице</button>
                                </SfTooltip>
                            </li>
                            <li class="nav-item d-none d-sm-inline-block">
                                &nbsp;
                            </li>
                            <li class="nav-item d-none d-sm-inline-block">
                                <button type="button" class="btn btn-primary btn-outline-primary waves-effect md-trigger" @onclick="FilterGrid">Филтър</button>
                            </li>
                            <li class="nav-item d-none d-sm-inline-block">
                                &nbsp;
                            </li>
                        </ul>
                    </nav>
                </div>
                <div class="card-body">
                    <SfGrid DataSource="consultingClientsSource" AllowSorting="true" AllowFiltering="true" EnableAltRow="true" EnableHover="false"
                            AllowTextWrap="true" @ref="consultingClientsGrid" AllowSelection="false" AllowPaging="true"
                            Toolbar="@(new List<string>() { "ExcelExport", "PdfExport" })" AllowExcelExport="true" AllowPdfExport="true">
                        <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Excel"></GridFilterSettings>
                        <GridPageSettings PageCount="5" PageSize=20 PageSizes="true"></GridPageSettings>
                        <GridEvents TValue="ConsultingClientVM" OnToolbarClick="ToolbarClick" />
                        <GridColumns>
                            <GridColumn AllowFiltering="false" AllowSorting="false" TextAlign="TextAlign.Left" CustomAttributes="@(new Dictionary<string, object>(){ { "class", "e-removewrap" }})" Width="8">
                                <Template>
                                    @GetRowNumber(consultingClientsGrid, (context as ConsultingClientVM).IdConsultingClient).Result
                                </Template>
                            </GridColumn>
                            <GridColumn Width="13" HeaderText=" ">
                                <Template>
                                    <SfTooltip Position="TooltipPosition.BottomCenter" Content="Редакция" OpensOn="Hover">
                                        <button type="button" class="btn-row" @onclick="(async () => await this.EditConsultingClientBtn(context as ConsultingClientVM))"><i class="fa fa-pencil-square-o"></i></button>
                                    </SfTooltip>
                                </Template>
                            </GridColumn>
                            <GridColumn Width="13" HeaderText=" ">
                                <Template>
                                    <SfTooltip Position="TooltipPosition.BottomCenter" Content="Изтриване" OpensOn="Hover">
                                        <button type="button" class="btn-row" @onclick="(async () => await this.DeleteConsultingClientBtn(context as ConsultingClientVM))"><i class="fa fa-trash-o"></i></button>
                                    </SfTooltip>
                                </Template>
                            </GridColumn>
                            <GridColumn Field="IdConsultingClient" IsPrimaryKey="true" Visible="false"></GridColumn>
                            <GridColumn Field="IndentType" HeaderText="Идентификатор" TextAlign="TextAlign.Left" Width="40"></GridColumn>
                            <GridColumn Field="Indent" HeaderText="ЕГН/ИДН/ЛНЧ" TextAlign="TextAlign.Left" Width="40"></GridColumn>
                            <GridColumn Field="FirstName" HeaderText="Име" TextAlign="TextAlign.Left" Width="40"></GridColumn>
                            <GridColumn Field="SecondName" HeaderText="Презиме" TextAlign="TextAlign.Left" Width="40"></GridColumn>
                            <GridColumn Field="FamilyName" HeaderText="Фамилия" TextAlign="TextAlign.Left" Width="40"></GridColumn>
                            <GridColumn Field="StartDateAsStr" HeaderText="Период на консултиране от" TextAlign="TextAlign.Left" Width="40"></GridColumn>
                            <GridColumn Field="EndDateAsStr" HeaderText="Период на консултиране до" TextAlign="TextAlign.Left" Width="40"></GridColumn>
                            <GridColumn Width="20" HeaderText="Статус">
                                <Template>
                                    @{
                                        var ctx = context as ConsultingClientVM;
                                        if (ctx.IdFinishedType != null)
                                        {
                                            var finishType = this.DataSourceService.GetKeyValueByIdAsync(ctx.IdFinishedType).Result;
                                            if (finishType != null)
                                            {
                                                <a>@(finishType.Name)</a>
                                            }
                                        }
                                    }
                                </Template>
                            </GridColumn>
                            <GridColumn Width="10">
                                <Template>
                                    @{
                                        var ctx = context as ConsultingClientVM;
                                        var openedRow = this.GetAllCurrentlyOpenedModalsConcurrencyInfoValue(ctx.IdConsultingClient, "Consulting");
                                        if (openedRow != null && openedRow.IdPerson != this.UserProps.IdPerson)
                                        {
                                            <SfTooltip Position="TooltipPosition.BottomCenter" Content="Записът е в процес на редакция" OpensOn="Hover">
                                                <button class="btn-row" disabled><i class="fa fa-lock"></i></button>
                                            </SfTooltip>
                                        }
                                    }
                                </Template>
                            </GridColumn>
                        </GridColumns>
                    </SfGrid>
                </div>
            </div>
        </div>
    </div>
</div>

<ConsultingClientModal @ref="consultingClientModal" CallbackAfterSubmit="UpdateAfterConsultingClientModalSubmitAsync" />
<ConsultingListFilterModal @ref="filterModal" CallbackAfterSubmit="Filter"></ConsultingListFilterModal>