@page "/TrainingCourseList"

@inherits BlazorBaseComponent

<div class="content-wrapper">
    <div class="content-header">
        <div class="container-fluid">
            <h6 class="page-title-left">@this.title</h6>
            <div class="card">
                <div class="card-header">
                    <nav class="navbar navbar-expand  ">
                        <!-- Left navbar links -->
                        <ul class="navbar-nav">
                            <li class="nav-item d-none d-sm-inline-block">
                                <button type="button" class="btn btn-primary btn-outline-primary waves-effect md-trigger" @onclick="FilterGrid">Филтър</button>
                            </li>
                            <li class="nav-item d-none d-sm-inline-block">
                                &nbsp;
                            </li>
                            @if (!this.hideAddCourseBtn)
                            {
                                <li class="nav-item d-none d-sm-inline-block">
                                    <SfTooltip Content="Създаване на нов курс" Position="TooltipPosition.BottomCenter" OpensOn="Hover" CssClass="toolTip-zindex">
                                        <button type="button" class="btn btn-primary btn-outline-primary waves-effect md-trigger" @onclick="AddCourseBtn">Нов курс</button>
                                    </SfTooltip>
                                </li>
                                <li class="nav-item d-none d-sm-inline-block">
                                    &nbsp;
                                </li>
                            }
                            @if (!this.hideImportBtn)
                            {
                                <li class="nav-item d-none d-sm-inline-block">
                                    <SfTooltip Content="Импорт на курс от XML файл" Position="TooltipPosition.BottomCenter" OpensOn="Hover" CssClass="toolTip-zindex">
                                        <button type="button" class="btn btn-primary btn-outline-primary waves-effect md-trigger" @onclick="ImportCourseBtn">Импорт курс</button>
                                    </SfTooltip>
                                </li>
                                <li class="nav-item d-none d-sm-inline-block">
                                    &nbsp;
                                </li>
                            }
                        </ul>
                    </nav>
                </div>
                <div class="card-body">
                    <SfGrid DataSource="coursesSource" AllowSorting="true" AllowFiltering="true" EnableAltRow="true" EnableHover="false"
                            AllowTextWrap="true" @ref="coursesGrid" AllowSelection="false" AllowPaging="true"
                            Toolbar="@(new List<string>() { "ExcelExport", "PdfExport" })" AllowExcelExport="true" AllowPdfExport="true">
                        <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Excel"></GridFilterSettings>
                        <GridPageSettings PageCount="5" PageSize=20 PageSizes="true"></GridPageSettings>
                        <GridEvents TValue="CourseVM" OnToolbarClick="ToolbarClick" />
                        <GridColumns>
                            <GridColumn AllowFiltering="false" AllowSorting="false" TextAlign="TextAlign.Left" CustomAttributes="@(new Dictionary<string, object>(){ { "class", "e-removewrap" }})" Width="8">
                                <Template>
                                    @GetRowNumber(coursesGrid, (context as CourseVM).IdCourse).Result
                                </Template>
                            </GridColumn>
                            <GridColumn Width="13" HeaderText=" ">
                                <Template>
                                    <SfTooltip Position="TooltipPosition.BottomCenter" Content="Редакция" OpensOn="Hover">
                                        <button type="button" class="btn-row" @onclick="(async () => await this.EditCourseBtn(context as CourseVM))"><i class="fa fa-pencil-square-o"></i></button>
                                    </SfTooltip>
                                </Template>
                            </GridColumn>
                            <GridColumn Width="13" HeaderText=" " Visible="!this.hideDeleteBtn">
                                <Template>
                                    @if (!(context as CourseVM).IsArchived)
                                    {
                                        <SfTooltip Position="TooltipPosition.BottomCenter" Content="Изтриване" OpensOn="Hover">
                                            <button type="button" class="btn-row" @onclick="(async () => await this.DeleteCourseBtn(context as CourseVM))"><i class="fa fa-trash-o"></i></button>
                                        </SfTooltip>
                                    }
                                </Template>
                            </GridColumn>
                            <GridColumn Field="IdCourse" IsPrimaryKey="true" Visible="false"></GridColumn>
                            <GridColumn Field="CourseName" HeaderText="Курс" TextAlign="TextAlign.Left" Width="70"></GridColumn>
                            <GridColumn Field="Location.LocationName" HeaderText="Населено място" TextAlign="TextAlign.Left" Width="40"></GridColumn>
                            <GridColumn Field="FormEducationName" HeaderText="Форма на обучение" TextAlign="TextAlign.Left" Width="50" Visible="!this.showRIDPKCountColumns"></GridColumn>
                            <GridColumn Field="MandatoryHours" HeaderText="Задължителни уч. часове" TextAlign="TextAlign.Right" Width="40" Visible="!this.showRIDPKCountColumns">
                                <Template>
                                    @{
                                        var ctx = context as CourseVM;
                                        <div class="text-right">
                                            @ctx.MandatoryHours
                                        </div>
                                    }
                                </Template>
                            </GridColumn>
                            <GridColumn Field="SelectableHours" HeaderText="Избираеми уч. часове" TextAlign="TextAlign.Right" Width="40" Visible="!this.showRIDPKCountColumns">
                                <Template>
                                    @{
                                        var ctx = context as CourseVM;
                                        <div class="text-right">
                                            @ctx.SelectableHours
                                        </div>
                                    }
                                </Template>
                            </GridColumn>
                            <GridColumn Field="SubscribeDateAsStr" HeaderText="Крайна дата за записване" TextAlign="TextAlign.Left" Width="40" Visible="!this.showRIDPKCountColumns"></GridColumn>
                            <GridColumn Field="StartDateAsStr" HeaderText="Дата за започване" TextAlign="TextAlign.Left" Width="40"></GridColumn>
                            <GridColumn Field="EndDateAsStr" HeaderText="Дата за завършване" TextAlign="TextAlign.Left" Width="40"></GridColumn>
                            <GridColumn Field="RIDPKCountSubmitted" HeaderText="Подадени" TextAlign="TextAlign.Center" Width="30" Visible="this.showRIDPKCountColumns">
                                <Template>
                                    @{
                                        var ctx = context as CourseVM;
                                        <div class="text-center">
                                            @ctx.RIDPKCountSubmitted
                                        </div>
                                    }
                                </Template>
                            </GridColumn>
                            <GridColumn Field="RIDPKCountReturned" HeaderText="Върнати" TextAlign="TextAlign.Center" Width="30" Visible="this.showRIDPKCountColumns">
                                <Template>
                                    @{
                                        var ctx = context as CourseVM;
                                        <div class="text-center">
                                            @ctx.RIDPKCountReturned
                                        </div>
                                    }
                                </Template>
                            </GridColumn>
                            <GridColumn Field="RIDPKCountEnteredInRegister" HeaderText="Публикувани" TextAlign="TextAlign.Center" Width="30" Visible="this.showRIDPKCountColumns">
                                <Template>
                                    @{
                                        var ctx = context as CourseVM;
                                        <div class="text-center">
                                            @ctx.RIDPKCountEnteredInRegister
                                        </div>
                                    }
                                </Template>
                            </GridColumn>
                            <GridColumn Field="RIDPKCountDeclined" HeaderText="Отказани" TextAlign="TextAlign.Center" Width="30" Visible="this.showRIDPKCountColumns">
                                <Template>
                                    @{
                                        var ctx = context as CourseVM;
                                        <div class="text-center">
                                            @ctx.RIDPKCountDeclined
                                        </div>
                                    }
                                </Template>
                            </GridColumn>
                            <GridColumn Field="RIDPKCountNotSubmitted" HeaderText="Неподадени" TextAlign="TextAlign.Center" Width="30" Visible="this.showRIDPKCountColumns">
                                <Template>
                                    @{
                                        var ctx = context as CourseVM;
                                        <div class="text-center">
                                            @ctx.RIDPKCountNotSubmitted
                                        </div>
                                    }
                                </Template>
                            </GridColumn>
                            <GridColumn Width="10">
                                <Template>
                                    @{
                                        var ctx = context as CourseVM;
                                        var openedRow = this.GetAllCurrentlyOpenedModalsConcurrencyInfoValue(ctx.IdCourse, "TrainingCourse");
                                        if (openedRow != null && openedRow.IdPerson != this.UserProps.IdPerson)
                                        {
                                            <SfTooltip Position="TooltipPosition.BottomCenter" Content="Записът е в процес на редакция" OpensOn="Hover">
                                                <button class="btn-row" disabled><i class="fa fa-lock"></i></button>
                                            </SfTooltip>
                                        }
                                    }
                                </Template>
                            </GridColumn>
                        </GridColumns>
                    </SfGrid>
                </div>
            </div>
        </div>
    </div>
</div>

<UpcomingTrainingCourseModal @ref="upcomingTrainingCourseModal" CallbackAfterSubmit="UpdateTrainingCoursesAfterUpcomingTrainingCoursesModalSubmitAsync" />
<CurrentTrainingCourseModal @ref="currentTrainingCourseModal" CallBackAfterSubmit="UpdateTrainingCoursesAfterCurrentTrainingCoursesModalSubmitAsync" />
<TrainingCourseListFilterModal @ref="filterModal" CallbackAfterSubmit="Filter"></TrainingCourseListFilterModal>
<CourseImportModal @ref="courseImportModal" CallbackAfterSubmit="UpdateTrainingCoursesAfterCurrentTrainingCoursesModalSubmitAsync" />