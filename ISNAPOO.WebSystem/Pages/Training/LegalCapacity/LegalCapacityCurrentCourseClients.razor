@inherits BlazorBaseComponent

<div class="content-wrapper">
    <div class="content-header">
        <div class="container-fluid">
            <div class="card" style="margin-bottom: 0px;">
                <div class="card-header">
                    <nav class="navbar navbar-expand  ">
                        <!-- Left navbar links -->
                        <ul class="navbar-nav">
                            <li class="nav-item d-none d-sm-inline-block">
                                <SfTooltip Content="Добавяне на нов курсист" Position="TooltipPosition.BottomCenter" OpensOn="Hover" CssClass="toolTip-zindex">
                                    <button type="button" class="btn btn-primary btn-outline-primary waves-effect md-trigger" @onclick="AddClientBtn">Добави курсист</button>
                                </SfTooltip>
                            </li>
                            <li class="nav-item d-none d-sm-inline-block">
                                &nbsp;
                            </li>
                            @*@if (this.CourseVM.IdStatus == this.kvCourseFinished.IdKeyValue)
                            {*@
                            <li class="nav-item d-none d-sm-inline-block">
                                <SfTooltip Content="Данни за завършване курсисти" Position="TooltipPosition.BottomCenter" OpensOn="Hover" CssClass="toolTip-zindex">
                                    <button type="button" class="btn btn-primary btn-outline-primary waves-effect md-trigger" @onclick="FinishedDataBtn">Данни за завършване</button>
                                </SfTooltip>
                            </li>
                            <li class="nav-item d-none d-sm-inline-block">
                                &nbsp;
                            </li>
                            @*}*@
                            <li class="nav-item d-none d-sm-inline-block">
                                <SfTooltip Position="TooltipPosition.BottomCenter" CssClass="toolTip-zindex" Content="Изтегляне на бланка за автоматично зареждане на курсисти" OpensOn="Hover">
                                    <button type="button" class="btn btn-primary btn-outline-primary waves-effect md-trigger" style="text-transform: none;" @onclick="CourseClientsTemplateDownloadBtn">Шаблон за импорт</button>
                                </SfTooltip>
                            </li>
                            <label>&nbsp</label>
                            <li class="nav-item d-none d-sm-inline-block">
                                <SfTooltip Position="TooltipPosition.BottomCenter" CssClass="toolTip-zindex" Content="Зареждане на курсисти от файл" OpensOn="Hover">
                                    <button type="button" class="btn btn-primary btn-outline-primary waves-effect md-trigger" style="text-transform: none;" @onclick="CourseClientsImportBtn">Импорт курсисти</button>
                                </SfTooltip>
                            </li>
                            <label>&nbsp</label>
                        </ul>
                    </nav>
                </div>
                <div class="card-body">
                    <SfGrid DataSource="clientsSource" AllowSorting="true" AllowFiltering="true" EnableAltRow="true" EnableHover="false"
                            AllowTextWrap="true" @ref="clientsGrid" AllowSelection="true" AllowPaging="true"
                            Toolbar="@(new List<string>() { "ExcelExport", "PdfExport" })" AllowExcelExport="true" AllowPdfExport="true">
                        <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Excel"></GridFilterSettings>
                        <GridPageSettings PageCount="5" PageSize=20 PageSizes="true"></GridPageSettings>
                        <GridEvents TValue="ClientCourseVM" OnToolbarClick="ToolbarClick" QueryCellInfo="CheckForRequiredDocuments" />
                        <GridSelectionSettings CheckboxOnly="true" />
                        <GridColumns>
                            <GridColumn Type="ColumnType.CheckBox" Width="8"></GridColumn>
                            <GridColumn AllowFiltering="false" AllowSorting="false" TextAlign="TextAlign.Left" CustomAttributes="@(new Dictionary<string, object>(){ { "class", "e-removewrap" }})" Width="5">
                                <Template>
                                    @GetRowNumber(clientsGrid, (context as ClientCourseVM).IdClientCourse).Result
                                </Template>
                            </GridColumn>
                            <GridColumn Width="10" HeaderText=" ">
                                <Template>
                                    <SfTooltip Position="TooltipPosition.BottomCenter" Content="Документи на курсист" OpensOn="Hover">
                                        <button type="button" class="btn-row" @onclick="(async () => await this.EditClientBtn(context as ClientCourseVM))"><i class="fa fa-folder-open"></i></button>
                                    </SfTooltip>
                                </Template>
                            </GridColumn>
                            <GridColumn Width="10" HeaderText=" ">
                                <Template>
                                    <SfTooltip Position="TooltipPosition.BottomCenter" Content="Изтриване" OpensOn="Hover">
                                        <button type="button" class="btn-row" @onclick="(async () => await this.DeleteClientBtn(context as ClientCourseVM))"><i class="fa fa-trash-o"></i></button>
                                    </SfTooltip>
                                </Template>
                            </GridColumn>
                            <GridColumn Field="IdClientCourse" IsPrimaryKey="true" Visible="false"></GridColumn>
                            <GridColumn Field="Indent" HeaderText="ЕГН/ЛНЧ/ИДН" TextAlign="TextAlign.Left" Width="30"></GridColumn>
                            <GridColumn Field="FirstName" HeaderText="Име" TextAlign="TextAlign.Left" Width="30"></GridColumn>
                            <GridColumn Field="SecondName" HeaderText="Презиме" TextAlign="TextAlign.Left" Width="25"></GridColumn>
                            <GridColumn Field="FamilyName" HeaderText="Фамилия" TextAlign="TextAlign.Left" Width="30"></GridColumn>
                            <GridColumn Field="FinishedTypeName" HeaderText="Статус на завършване" TextAlign="TextAlign.Left" Width="50"></GridColumn>
                            <GridColumn Width="8">
                                <Template>
                                    @{
                                        var ctx = context as ClientCourseVM;
                                        var openedRow = this.GetAllCurrentlyOpenedModalsConcurrencyInfoValue(ctx.IdClientCourse, "TrainingClientCourse");
                                        if (openedRow != null && openedRow.IdPerson != this.UserProps.IdPerson)
                                        {
                                            <SfTooltip Position="TooltipPosition.BottomCenter" Content="Записът е в процес на редакция" OpensOn="Hover">
                                                <button class="btn-row" disabled><i class="fa fa-lock"></i></button>
                                            </SfTooltip>
                                        }
                                    }
                                </Template>
                            </GridColumn>
                        </GridColumns>
                    </SfGrid>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .color-elements {
        color: red !important;
    }
</style>

<LegalCapacityCurrentCourseClientModal @ref="currentCourseClientModal" CallbackAfterSubmit="UpdateAfterCourseClientModalSubmitAsync" />
<CourseClientFinishedDataModal @ref="courseClientFinishedDataModal" CallbackAfterSubmit="UpdateAfterCourseClientModalSubmitAsync" />
<CourseClientsImportModal @ref="courseClientsImportModal" CallbackAfterImport="UpdateAfterCourseClientModalSubmitAsync" />