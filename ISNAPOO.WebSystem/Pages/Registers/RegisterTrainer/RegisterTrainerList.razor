@inherits BlazorBaseComponent

@page "/RegisterTrainerList"
@using ISNAPOO.Core.ViewModels.Register;

<div class="content-wrapper">
    <div class="content-header">
        <div class="container-fluid">
            <h6 class="page-title-left">@this.title</h6>
            <div class="card">
                <div class="card-header">
                    <nav class="navbar navbar-expand  ">
                        <!-- Left navbar links -->
                        <ul class="navbar-nav">
                            <li class="nav-item d-none d-sm-inline-block">
                                <button type="button" class="btn btn-primary btn-outline-primary waves-effect md-trigger" @onclick="OpenFilterModal">Филтър</button>
                            </li>
                            <li class="nav-item d-none d-sm-inline-block">
                                &nbsp;
                            </li>
                        </ul>
                    </nav>
                </div>
                <div class="card-body">
                    <SfGrid DataSource="trainersSource" AllowSorting="true" AllowFiltering="true" EnableAltRow="true" EnableHover="false"
                            AllowTextWrap="true" @ref="trainersGrid" AllowSelection="true" AllowPaging="true" Toolbar="@(new List<string>() { "ExcelExport","CsvExport" , "PdfExport" })"
                            AllowExcelExport="true" AllowPdfExport="true">
                        <GridEvents PdfQueryCellInfoEvent="PdfQueryCellInfoHandler" OnToolbarClick="ToolbarClick" TValue="RegisterTrainerVM"></GridEvents>
                        <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Excel"></GridFilterSettings>
                        <GridPageSettings PageCount="5" PageSize=20 PageSizes="true" Context="contex"></GridPageSettings>
                        <GridColumns>
                            <GridColumn HeaderText=" " AllowFiltering="false" AllowSorting="false" TextAlign="TextAlign.Left" CustomAttributes="@(new Dictionary<string, object>(){ { "class", "e-removewrap" }})" Width="3%">
                                <Template>
                                    @GetRowNumber(trainersGrid, (context as RegisterTrainerVM).IdEntity).Result
                                </Template>
                            </GridColumn>
                            <GridColumn Field="IdEntity" IsPrimaryKey="true" Visible="false"></GridColumn>
                            <GridColumn Width="4%" TextAlign="TextAlign.Left">
                                <Template>
                                    <SfTooltip Position="TooltipPosition.BottomCenter" Content="Преглед" OpensOn="Hover">
                                        <button @onclick="(async () => await this.ViewTrainerBtn((context as RegisterTrainerVM).IdEntity))" class="btn-row"> <i class="fa fa-search-plus"></i> </button>
                                    </SfTooltip>
                                </Template>
                            </GridColumn>
                            <GridColumn Width="4%" TextAlign="TextAlign.Left">
                                <Template>
                                    <SfTooltip Position="TooltipPosition.BottomCenter" Content="Информация за проверка НАПОО" OpensOn="Hover">
                                        <button @onclick="(async () => await this.OpenChecking(context as RegisterTrainerVM))" class="btn-row"><i class="fa fa-check-square-o"></i></button>
                                    </SfTooltip>
                                </Template>
                            </GridColumn>
                            <GridColumn Field="LicenseNumber" HeaderText="Лицензия" TextAlign="TextAlign.Left" Width="14%"></GridColumn>
                            <GridColumn Field="OwnerAndProvider" HeaderText="@cpoOrCipo" TextAlign="TextAlign.Left" Width="25%"></GridColumn>
                            <GridColumn Field="FirstName" HeaderText="Име" TextAlign="TextAlign.Left" Width="10%"></GridColumn>
                            <GridColumn Field="SecondName" HeaderText="Презиме" TextAlign="TextAlign.Left" Width="14%"></GridColumn>
                            <GridColumn Field="FamilyName" HeaderText="Фамилия" TextAlign="TextAlign.Left" Width="14%"></GridColumn>
                            <GridColumn Field="ProfessionalDirections" HeaderText="Професионални направления" Visible="@isVisibleProfessionalDirectionsInfo" DisableHtmlEncode="false" TextAlign="TextAlign.Left" Width="30%">
                                <Template>
                                    @{
                                        var profDir = context as RegisterTrainerVM;                        
                                        string newString = string.Empty;
                                        if (profDir.ProfessionalDirections != null)
                                        {
                                            @foreach (var item in profDir.ProfessionalDirections.Split("; "))
                                            {
                                                <p style="margin-bottom: -3px;">@item</p>
                                            }
                                        }                                    
                                    }
                                </Template>
                            </GridColumn>
                            
                            <GridColumn HeaderText="Статус" TextAlign="TextAlign.Center" Width="12%">
                                <Template>
                                    @{
                                        var premises = context as RegisterTrainerVM;
                                        if (premises.StatusValue != "Активен")
                                        {
                                            <label class="form-label-status label label-danger">Неактивен</label>
                                        }
                                        else
                                        {
                                            <label class="form-label-status label label-success">Активен</label>
                                        }
                                    }
                                </Template>
                            </GridColumn>
                            <GridColumn HeaderText=" " TextAlign="TextAlign.Left" Width="3%">
                                <Template>
                                    <SfTooltip Position="TooltipPosition.BottomCenter" Content="Преглед на история" OpensOn="Hover">
                                        <button @onclick="(async () => await this.OpenTrainerHistoryModalBtn(context as RegisterTrainerVM))" class="btn-row"><i class="fa fa-history" style="font-size: 18px"></i></button>
                                    </SfTooltip>
                                </Template>
                            </GridColumn>
                        </GridColumns>
                    </SfGrid>
                </div>
            </div>
        </div>
    </div>
</div>

<TrainerInformationModal @ref="trainerInformationModal"></TrainerInformationModal>
<TrainerStatusModal @ref="trainerStatusModal" />
<TrainerChecking @ref="trainerChecking" LicensingType="@licensingType" />
<FilterTrainerModal @ref="filterTrainerModal" CallbackAfterSave="UpdateAfterFilterAsync" />