@page "/CPODocumentRequestList"
@attribute [Authorize(Policy = "ShowCPODocumentRequestList")]

@inherits BlazorBaseComponent

<div class="content-wrapper">
    <div class="content-header">
        <div class="container-fluid">
            <h6 class="page-title-left">Подаване на заявки за документация към НАПОО</h6>
            <div class="card">
                <div class="card-header">
                    <nav class="navbar navbar-expand  ">
                        <!-- Left navbar links -->
                        <ul class="navbar-nav">
                            <li class="nav-item d-none d-sm-inline-block">
                                <button type="button" class="btn btn-primary btn-outline-primary waves-effect md-trigger" @onclick="OpenAddNewModal">Нов</button>
                            </li>
                            <li class="nav-item d-none d-sm-inline-block">
                                &nbsp;
                            </li>
                        </ul>
                    </nav>
                </div>

                <div class="card-body">
                    <SfGrid ID="sfGrid" DataSource="providerRequestSource" AllowSorting="true" AllowFiltering="true" EnableAltRow="true" EnableHover="false"
                            AllowTextWrap="true" @ref="sfGrid" AllowSelection="false" AllowPaging="true" Toolbar="@(new List<string>() { "ExcelExport", "PdfExport" })"
                            AllowExcelExport="true" AllowPdfExport="true">
                        <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Excel"></GridFilterSettings>
                        <GridPageSettings PageCount="5" PageSize=20 PageSizes="true"></GridPageSettings>
                        <GridEvents TValue="ProviderRequestDocumentVM" PdfQueryCellInfoEvent="PdfQueryCellInfoHandler" OnToolbarClick="ToolbarClick" />
                        <GridColumns>
                            <GridColumn HeaderText=" " AllowFiltering="false" AllowSorting="false" TextAlign="TextAlign.Left" CustomAttributes="@(new Dictionary<string, object>(){ { "class", "e-removewrap" }})" Width="10px">
                                <Template>
                                    @GetRowNumber(sfGrid, (context as ProviderRequestDocumentVM).IdProviderRequestDocument).Result
                                </Template>
                            </GridColumn>
                            <GridColumn Width="10">
                                <Template>
                                    <SfTooltip Position="TooltipPosition.BottomCenter" Content="Редакция" OpensOn="Hover">
                                        <button @onclick="(async () => await this.EditRequest(context as ProviderRequestDocumentVM))" class="btn-row"><i class="fa fa-edit"></i></button>
                                    </SfTooltip>
                                </Template>
                            </GridColumn>

                            <GridColumn Width="10">
                                <Template>

                                    @{
                                        var providerRequestDoc = context as ProviderRequestDocumentVM;
                                        if (providerRequestDoc.IdStatus == this.idCreatedKv)
                                        {
                                            <SfTooltip Position="TooltipPosition.BottomCenter" Content="Изтриване" OpensOn="Hover">
                                                <button @onclick="(async () => await this.DeleteRequest(providerRequestDoc))" class="btn-row"><i class="fa fa-trash-o"></i></button>
                                            </SfTooltip>
                                        }
                                    }
                                </Template>
                            </GridColumn>
                            <GridColumn Field="IdProviderRequestDocument" IsPrimaryKey="true" Visible="false"></GridColumn>
                            <GridColumn Field="RequestNumber" HeaderText="Заявка №" TextAlign="TextAlign.Right" Width="30"></GridColumn>
                            <GridColumn Field="RequestDate" HeaderText="Дата" TextAlign="TextAlign.Left" Width="30" Format="dd.MM.yyyy"></GridColumn>
                            <GridColumn Field="Name" HeaderText="Отговорно лице" TextAlign="TextAlign.Left" Width="60"></GridColumn>
                            <GridColumn Field="Position" HeaderText="Длъжност" TextAlign="TextAlign.Left" Width="60"></GridColumn>
                            <GridColumn Field="CandidateProvider.CPONameOwnerGrid" HeaderText="ЦПО" TextAlign="TextAlign.Left" Width="60"></GridColumn>
                            <GridColumn Field="CurrentYear" HeaderText="Година" TextAlign="TextAlign.Left" Width="30"></GridColumn>
                            <GridColumn Field="RequestStatus" HeaderText="Статус" TextAlign="TextAlign.Center" Width="40">
                                <Template>
                                    <div class="text-center">
                                        @{
                                            var providerReqDoc = context as ProviderRequestDocumentVM;

                                            switch (providerReqDoc.RequestStatus)
                                            {
                                                case "Създадена":
                                                    <label class="form-label-status label label-warning">@providerReqDoc.RequestStatus</label>
                                                    break;
                                                case "Подадена":
                                                    <label class="form-label-status label label-danger">@providerReqDoc.RequestStatus</label>
                                                    break;
                                                case "Обработена":
                                                    <label class="form-label-status label label-primary">@providerReqDoc.RequestStatus</label>
                                                    break;
                                                case "Обобщена":
                                                    <label class="form-label-status label label-success">@providerReqDoc.RequestStatus</label>
                                                    break;
                                            }
                                        }
                                    </div>
                                </Template>
                            </GridColumn>
                        </GridColumns>
                    </SfGrid>
                </div>
            </div>
        </div>
    </div>
</div>

<CPODocumentRequestModal @ref="documentRequestModal" CallbackAfterSave="OnAfterRequestModalSave" />
