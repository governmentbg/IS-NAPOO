@page "/DocumentFabricNumbersSearch"
@attribute [Authorize(Policy = "ShowDocumentFabricNumbersSearchList")]

@inherits BlazorBaseComponent

<div class="content-wrapper">
    <div class="content-header">
        <div class="container-fluid">
            <h6 class="page-title-left">Търсене на фабричен номер</h6>
            <div class="card">
                <div class="card-header">
                    <nav class="navbar navbar-expand  ">
                        <!-- Left navbar links -->
                        <ul class="navbar-nav">
                            <li class="nav-item d-none d-sm-inline-block">
                                <button type="button" class="btn btn-primary btn-outline-primary waves-effect md-trigger" @onclick="FilterBtn">Филтър</button>
                            </li>
                            <li class="nav-item d-none d-sm-inline-block">
                                &nbsp;
                            </li>
                        </ul>
                    </nav>
                </div>
                <div class="card-body">
                    <SfGrid DataSource="documentSerialNumbersSource" AllowSorting="true" AllowFiltering="true" EnableAltRow="true" EnableHover="false"
                            AllowTextWrap="true" @ref="documentSerialNumbersGrid" AllowSelection="true" AllowPaging="true" Toolbar="@(new List<string>() { "ExcelExport", "PdfExport" })"
                            AllowExcelExport="true" AllowPdfExport="true">
                        <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Excel"></GridFilterSettings>
                        <GridEvents TValue="DocumentSerialNumberVM" PdfQueryCellInfoEvent="PdfQueryCellInfoHandler" OnToolbarClick="ToolbarClick" />
                        <GridSelectionSettings CheckboxOnly="true" />
                        <GridPageSettings PageCount="5" PageSize=20 PageSizes="true"></GridPageSettings>
                        <GridColumns>
                            <GridColumn HeaderText=" " AllowFiltering="false" AllowSorting="false" TextAlign="TextAlign.Left" CustomAttributes="@(new Dictionary<string, object>(){ { "class", "e-removewrap" }})" Width="10px">
                                <Template>
                                    @GetRowNumber(documentSerialNumbersGrid, (context as DocumentSerialNumberVM).IdDocumentSerialNumber).Result
                                </Template>
                            </GridColumn>
                            <GridColumn Field="IdDocumentSerialNumber" IsPrimaryKey="true" Visible="false"></GridColumn>
                            <GridColumn Field="TypeOfRequestedDocument.NumberWithName" HeaderText="Вид на документа" TextAlign="TextAlign.Left" Width="100"></GridColumn>
                            <GridColumn Field="DocumentSeriesName" HeaderText="Серия" TextAlign="TextAlign.Left" Width="20"></GridColumn>
                            <GridColumn Field="SerialNumber" HeaderText="Фабричен номер" TextAlign="TextAlign.Left" Width="30" Format="dd.MM.yyyy"></GridColumn>
                            <GridColumn Field="ReceiveDocumentYear" HeaderText="Година" TextAlign="TextAlign.Left" Width="30"></GridColumn>
                            <GridColumn Field="DocumentDate" HeaderText="Дата" TextAlign="TextAlign.Left" Width="20" Format="dd.MM.yyyy">
                                <Template>
                                        @{
                                        var ctx = context as DocumentSerialNumberVM;
                                        var date = ctx.DocumentDate != null ? $"{ctx.DocumentDate.ToString("dd.MM.yyyy")} г." : string.Empty;
                                            @date
                                        }
                                </Template>
                            </GridColumn>
                            <GridColumn Field="CandidateProvider.CPONameOwnerGrid" HeaderText="ЦПО" TextAlign="TextAlign.Left" Width="40"></GridColumn>
                            <GridColumn Field="DocumentOperationName" HeaderText="Операция" TextAlign="TextAlign.Left" Width="30"></GridColumn>
                            <GridColumn Field="DocumentReceivedFrom" HeaderText="от/на" TextAlign="TextAlign.Left" Width="30"></GridColumn>
                            <GridColumn HeaderText="" TextAlign="TextAlign.Center" Width="20">
                                <Template Context="docCtx">
                                    @if ((docCtx as DocumentSerialNumberVM).HasUploadedFile)
                                    {
                                        <SfTooltip Position="TooltipPosition.BottomCenter" Content="Отвори прикачен файл" OpensOn="Hover">
                                            <button type="button" class="btn-row" @onclick="(async () => await this.DownloadUploadedFileBtn(docCtx as DocumentSerialNumberVM))"><i class="fa fa-file-o"></i></button>
                                        </SfTooltip>
                                    }
                                </Template>
                            </GridColumn>
                        </GridColumns>
                    </SfGrid>
                </div>
            </div>
        </div>
    </div>
</div>

<NAPOODocumentFabricNumbersSearchModal @ref="napooDocumentFabricNumbersSearchModal" CallbackAfterSubmit="UpdateAfterFilterSubmit" />
