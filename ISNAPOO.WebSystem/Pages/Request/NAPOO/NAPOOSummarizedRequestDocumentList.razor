@page "/SummarizedRequestDocumentList"
@attribute [Authorize(Policy = "ShowSummarizedRequestDocumentList")]

@inherits BlazorBaseComponent

<div class="content-wrapper">
    <div class="content-header">
        <div class="container-fluid">
            <h6 class="page-title-left">Обобщаване на заявки</h6>
            <div class="card">
               @* <div class="card-header">
                    <nav class="navbar navbar-expand  ">
                        <!-- Left navbar links -->
                        <ul class="navbar-nav">
                        </ul>
                    </nav>
				</div>*@
                <div class="card-body">
                    <SfGrid ID="sfGrid" DataSource="napooRequestDocumentsSource" AllowSorting="true" AllowFiltering="true" EnableAltRow="true" EnableHover="false"
                            AllowTextWrap="true" @ref="napooRequestDocumentsGrid" AllowSelection="true" AllowPaging="true" Toolbar="@(new List<string>() { "ExcelExport", "PdfExport" })"
                            AllowExcelExport="true" AllowPdfExport="true">
                        <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Excel"></GridFilterSettings>
                        <GridEvents TValue="NAPOORequestDocVM" PdfQueryCellInfoEvent="PdfQueryCellInfoHandler" OnToolbarClick="ToolbarClick" />
                        <GridSelectionSettings CheckboxOnly="true" />
                        <GridPageSettings PageCount="5" PageSize=20 PageSizes="true"></GridPageSettings>
                       
                        <GridColumns>
                            <GridColumn HeaderText=" " AllowFiltering="false" AllowSorting="false" TextAlign="TextAlign.Left" CustomAttributes="@(new Dictionary<string, object>(){ { "class", "e-removewrap" }})" Width="10px">
                                <Template>
                                    @GetRowNumber(napooRequestDocumentsGrid, (context as NAPOORequestDocVM).IdNAPOORequestDoc).Result
                                </Template>
                            </GridColumn>
                            <GridColumn Width="20">
                                <Template>
                                     <SfTooltip Position="TooltipPosition.BottomCenter" Content="Редакция" OpensOn="Hover">
                                    <button @onclick="(async () => await this.EditRequest(context as NAPOORequestDocVM))" class="btn-row"><i class="fa fa-edit"></i></button>
                                    </SfTooltip>
                                </Template>
                            </GridColumn>
                            <GridColumn Field="IdNAPOORequestDoc" IsPrimaryKey="true" Visible="false"></GridColumn>
                            <GridColumn Field="NAPOORequestNumber" HeaderText="№ на обобщена заявка" TextAlign="TextAlign.Left" Width="30">
                                <Template>
                                    <div class="text-center">
                                        @{
                                            var ctx = context as NAPOORequestDocVM;
                                            <span>@ctx.NAPOORequestNumber</span>
                                        }
                                    </div>
                                </Template>
                            </GridColumn>
                            <GridColumn Field="RequestDate" HeaderText="Дата" TextAlign="TextAlign.Left" Width="30" Type="ColumnType.Date" Format="dd.MM.yyyy">
                                <Template>
                                        @{
                                        var ctx = context as NAPOORequestDocVM;
                                        var date = ctx.RequestDate.HasValue ? $"{ctx.RequestDate.Value.ToString("dd.MM.yyyy")} г." : string.Empty;
                                            @date
                                        }
                                </Template>
                            </GridColumn>
                            <GridColumn Field="RequestYear" HeaderText="Година" TextAlign="TextAlign.Left" Width="30"></GridColumn>
                            <GridColumn Field="RequestStatus" HeaderText="Статус" TextAlign="TextAlign.Center" Width="40">
                                <Template>
                                    <div class="text-center">
                                        @{
                                            var reqDoc = context as NAPOORequestDocVM;
                                            if (reqDoc.IsSent)
                                            {
                                                <label class="form-label-status label label-primary">@reqDoc.ReqStatus</label>
                                            }
                                            else
                                            {
                                                <label class="form-label-status label label-warning">@reqDoc.ReqStatus</label>
                                            }
                                        }
                                    </div>
                                </Template>
                            </GridColumn>
                            <GridColumn Field="IsSentAsStr" HeaderText="Изпратена към печатница" TextAlign="TextAlign.Left" Width="30">
                                <Template>
                                    <div class="text-center" style="text-transform: none !important;">
                                        @{
                                            var ctx = context as NAPOORequestDocVM;
                                             switch (ctx.IsSentAsStr)
                                                {
                                                    case "Да":
                                                        <label class="form-label-status label label-success" style="text-transform: none !important; width: 40px;">@ctx.IsSentAsStr</label>
                                                        break;
                                                    case "Не":
                                                    <label class="form-label-status label label-danger" style="text-transform: none !important; width: 40px;">@ctx.IsSentAsStr</label>
                                                        break;
                                                }
                                            
                                        }
                                    </div>
                                </Template>
                            </GridColumn>
                            <GridColumn Field="IsNotificationSentAsStr" HeaderText="Изпратени писма" TextAlign="TextAlign.Left" Width="30">
                                <Template>
                                    <div class="text-center">
                                        @{
                                            var ctx = context as NAPOORequestDocVM;
                                            switch (ctx.IsNotificationSentAsStr)
                                                {
                                                    case "Да":
                                                        <label class="form-label-status label label-success" style="width: 40px;">@ctx.IsNotificationSentAsStr</label>
                                                        break;
                                                    case "Не":
                                                        <label class="form-label-status label label-danger" style="width: 40px;">@ctx.IsNotificationSentAsStr</label>
                                                        break;
                                                }
                                            
                                        }
                                    </div>
                                </Template>
                            </GridColumn>
                        </GridColumns>
                    </SfGrid>
                </div>
            </div>
        </div>
    </div>
</div>

<NAPOOSummarizeRequestsModal @ref="napooSummarizeRequestsModal" CallbackAfterSummarizeSubmit="UpdateAfterSummarizeSubmit" />
<ToastMsg @ref="toast" />
<ConfirmDialog CallbackCancel="ConfirmDialogCallback" @ref="ConfirmDialog"></ConfirmDialog>
