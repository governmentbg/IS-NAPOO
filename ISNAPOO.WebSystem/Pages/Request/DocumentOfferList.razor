@page "/DocumentOfferList"
@attribute [Authorize(Policy = "ShowDocumentOfferList")]

@inherits BlazorBaseComponent


<div class="content-wrapper">
	<div class="content-header">
		<div class="container-fluid">
			<h6 class="page-title-left">@this.Header</h6>
			<div class="card">
				@{
					if (this.DocumentType == GlobalConstants.TOKEN_BORSA_DOCUMENTS_CPO_VALUE)
					{
						<div class="card-header">
							<nav class="navbar navbar-expand  ">
								<!-- Left navbar links -->
								<ul class="navbar-nav">

									<li class="nav-item d-none d-sm-inline-block">
                                        <SfTooltip Position="TooltipPosition.BottomCenter" Content="Публикуване на нова оферта за документ" OpensOn="Hover">
										    <button type="button" class="btn btn-primary btn-outline-primary waves-effect md-trigger" @onclick="OpenAddNewModal">Нов</button>
                                        </SfTooltip>
									</li>


								</ul>
							</nav>
						</div>
					}
				}
				<div class="card-body">
					<SfGrid ID="sfGrid" DataSource="documentOfferSource" AllowSorting="true" AllowFiltering="true" EnableAltRow="true" EnableHover="false"
							AllowTextWrap="true" @ref="sfGridDocumentOfferGrid" AllowSelection="false" AllowPaging="true" Toolbar="@(new List<string>() { "ExcelExport", "PdfExport" })"
							AllowExcelExport="true" AllowPdfExport="true">
						<GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Excel"></GridFilterSettings>
						<GridEvents TValue="ProviderDocumentOfferVM" PdfQueryCellInfoEvent="PdfQueryCellInfoHandler" OnToolbarClick="ToolbarClick" />
						<GridPageSettings PageCount="5" PageSize=20 PageSizes="true"></GridPageSettings>
                         <GridSortSettings>
                            <GridSortColumns>
                                <GridSortColumn Field="OfferStartDate" Direction="SortDirection.Descending" />
                            </GridSortColumns>
                        </GridSortSettings>
						<GridColumns>
							<GridColumn HeaderText=" " AllowFiltering="false" AllowSorting="false" TextAlign="TextAlign.Left" CustomAttributes="@(new Dictionary<string, object>(){ { "class", "e-removewrap" }})" Width="10px">
								<Template>
									@GetRowNumber(sfGridDocumentOfferGrid, (context as ProviderDocumentOfferVM).IdProviderDocumentOffer).Result
								</Template>
							</GridColumn>
							<GridColumn Width="20px">
								<Template>
									@{
										if (this.DocumentType == GlobalConstants.TOKEN_BORSA_DOCUMENTS_CPO_VALUE)
										{
									        <SfTooltip Position="TooltipPosition.BottomCenter" Content="Редакция" OpensOn="Hover">
											<button  @onclick="(async () => await SelectedRow(context as ProviderDocumentOfferVM))" class="btn-row"><i class="fa fa-pencil-square-o"></i></button>
										    </SfTooltip>
											}
									}
								</Template>
							</GridColumn>
							<GridColumn Field="IdProviderDocumentOffer" IsPrimaryKey="true" Visible="false"></GridColumn>
                            <GridColumn Field="CandidateProvider.LicenceNumber" HeaderText="Лицензия" TextAlign="TextAlign.Left" Width="30px"></GridColumn>
                            <GridColumn Field="CandidateProvider.CPONameOwnerGrid" HeaderText="ЦПО" TextAlign="TextAlign.Left" Width="50px"></GridColumn>
                            <GridColumn Field="CandidateProvider.LocationCorrespondence.LocationName" HeaderText="Населено място" TextAlign="TextAlign.Left" Width="50px"></GridColumn>
                            <GridColumn Field="CandidateProvider.ProviderPhoneCorrespondence" HeaderText="Телефон" TextAlign="TextAlign.Left" Width="40px"></GridColumn>
                            <GridColumn Field="CandidateProvider.ProviderEmailCorrespondence" HeaderText="E-mail" TextAlign="TextAlign.Left" Width="50px"></GridColumn>
							<GridColumn Field="TypeOfRequestedDocument.NumberWithName" HeaderText="Вид на документ" TextAlign="TextAlign.Left" Width="80px"></GridColumn>
							<GridColumn Field="CountOffered" HeaderText="Брой" TextAlign="TextAlign.Left" Width="30px">
                                <Template>
                                <div class="text-right">
                                    @{
                                        var ctx = context as ProviderDocumentOfferVM;

                                            @($"{ctx.CountOffered} бр.")
                                    }
                                 </div>
                                </Template>
                            </GridColumn>
							<GridColumn Field="OfferStartDate" HeaderText="Начална дата" TextAlign="TextAlign.Left" Width="40px" Type="ColumnType.Date" Format="dd.MM.yyyy">
                                <Template>
                                        @{
                                        var ctx = context as ProviderDocumentOfferVM;
                                        var date = ctx.OfferStartDate.HasValue ? $"{ctx.OfferStartDate.Value.ToString("dd.MM.yyyy")} г." : string.Empty;
                                            @date
                                        }
                                </Template>
                            </GridColumn>
                            <GridColumn Field="OfferEndDate" HeaderText="Крайна дата" TextAlign="TextAlign.Left" Width="40px" Type="ColumnType.Date" Format="dd.MM.yyyy">
                                <Template>
                                    @{
                                        var ctx = context as ProviderDocumentOfferVM;
                                        var date = ctx.OfferEndDate.HasValue ? $"{ctx.OfferEndDate.Value.ToString("dd.MM.yyyy")} г." : string.Empty;
                                        @date
                                    }
                                </Template>
                            </GridColumn>																												
							<GridColumn Field="OfferTypeName" HeaderText="Оферта" TextAlign="TextAlign.Left" Width="50px">
                                <Template>
                                    <div class="text-center">
                                        @{
                                            var ctx = context as ProviderDocumentOfferVM;
                                            if (ctx.OfferTypeName != null)
                                            {
                                                switch (ctx.OfferTypeName)
                                                {
                                                    case "Търся":
                                                        <label class="form-label-status label label-success" style="font-size: 12px">@ctx.OfferTypeName</label>
                                                        break;
                                                    case "Предлагам":
                                                        <label class="form-label-status label label-warning" style="font-size: 12px">@ctx.OfferTypeName</label>
                                                        break;
                                                }
                                            }

                                        }
                                    </div>
                                </Template>
                            </GridColumn>
						</GridColumns>
					</SfGrid>
				</div>
			</div>
		</div>
	</div>
</div>

<DocumentOfferModal @ref="documentOfferModal" CallbackAfterSubmit="OnApplicationSubmit" />
<ToastMsg @ref="toast" />
<ConfirmDialog CallbackCancel="ConfirmDialogCallback" @ref="ConfirmDialog"></ConfirmDialog>