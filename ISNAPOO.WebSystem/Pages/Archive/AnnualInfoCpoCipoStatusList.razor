@using ISNAPOO.Core.ViewModels.Archive
@inherits BlazorBaseComponent

<SfDialog ID="application" @ref="sfDialog" @bind-Visible="isVisible" Width="98%" EnableResize="true" AllowDragging="true" Height="98%" IsModal="true" ZIndex="2000" CloseOnEscape="false" ShowCloseIcon="true">
    <DialogAnimationSettings Effect="AnimationEffect" Duration="500" />
    <DialogEvents OnClose="OnXClickHandler" />
    <DialogTemplates>
        <Header>Данни за отчета</Header>
        <Content>
            <SfGrid DataSource="this.annualInfo.AnnualInfoStatuses" EnableAltRow="true" EnableHover="false" AllowTextWrap="true" @ref="statusesGrid">
                <GridColumns>
                    <GridColumn AllowFiltering="false" AllowSorting="false" TextAlign="TextAlign.Left" CustomAttributes="@(new Dictionary<string, object>(){ { "class", "e-removewrap" }})" Width="8%">
                        <Template>
                            @GetRowNumber(statusesGrid, (context as AnnualInfoStatusVM).IdAnnualInfoStatus).Result
                        </Template>
                    </GridColumn>
                    <GridColumn Field="IdAnnualInfoStatus" IsPrimaryKey="true" Visible="false"></GridColumn>
                    <GridColumn Field="PersonName" HeaderText="Потребител" TextAlign="TextAlign.Left" Width="25%"></GridColumn>
                    <GridColumn Field="StatusDate" HeaderText="Дата на промяна" TextAlign="TextAlign.Left" Width="25%"></GridColumn>
                    <GridColumn Field="StatusValue" HeaderText="Статус" TextAlign="TextAlign.Center" Width="20%">
                        <Template>
                            <div class="text-center">
                                @{
                                    var doc = context as AnnualInfoStatusVM;
                                    switch (doc.StatusValueIntCode)
                                    {
                                        case "Working":
                                            <label class="form-label-status label label-warning">@doc.StatusValue</label>
                                            break;
                                        case "Submitted":
                                            <label class="form-label-status label label-primary">@doc.StatusValue</label>
                                            break;
                                        case "Returned":
                                            <label class="form-label-status label label-danger">@doc.StatusValue</label>
                                            break;
                                        case "Approved":
                                            <label class="form-label-status label label-success">@doc.StatusValue</label>
                                            break;
                                    }
                                }
                            </div>
                        </Template>
                    </GridColumn>
                    <GridColumn Field="Comment" HeaderText="Коментар" TextAlign="TextAlign.Left" Width="50%"></GridColumn>
                    @if (this.showFileName == true)
                    {
                        <GridColumn Field="UploadedFileName" HeaderText="Прикачен файл" TextAlign="TextAlign.Left" Width="25%">
                            <Template Context="docContext">
                                @{
                                    var entry = (docContext as AnnualInfoStatusVM);

                                    if (!string.IsNullOrEmpty(entry.UploadedFileName))
                                    {
                                        if (entry.FileName is not null)
                                        {
                                            <a href="#" @onclick="(() => OnDownloadClick(entry))">@entry.FileName</a>
                                            <br />
                                        }
                                    }
                                    else
                                    {
                                        @entry.FileName
                                    }
                                }
                            </Template>
                        </GridColumn>
                    }
                  
                </GridColumns>
            </SfGrid>
        </Content>
    </DialogTemplates>
</SfDialog>