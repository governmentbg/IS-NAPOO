@inherits BlazorBaseComponent

<div class="content-wrapper">
    <div class="content-header">
        <div class="container-fluid">
            <div class="card">
                <div class="card-body">


                    @if (ifSelfAssessmentSurveyForCPO)
                    {
                        <div>
                            <h5 class="card-title">Крайна оценка на постигнатото качество: <b>@TotalPoint брой точки</b></h5>
                            <h5 class="card-title">Равнище на постигнатото качество: <span class="@QualitativeAssessmentCSS"><b>@QualitativeAssessment</b></span>  </h5>
                            <p class="card-text">
                                (отлично - при крайна оценка от @ExcellentPoint до @MaxPoint точки; добро - при крайна оценка от @GoodPoint до @(ExcellentPoint - 1) точки;
                                задоволително - при крайна оценка от @SatisfactoryPoint до @(GoodPoint - 1) точки; незадоволително - при крайна оценка до @(SatisfactoryPoint - 1)
                                точки включително)
                            </p>
                        </div>
                    }
                    @{
                        var questionCounter = 1;
                        @if (this.surveyResultVM.Survey != null)
                        {
                            questionCounter = 1;
                            @foreach (var areaSelfAssessment in this.surveyResultVM.Survey.Questions.GroupBy(x => x.AreaSelfAssessment).OrderBy(x => x.Key.Order))
                            {
                                foreach (var question in this.surveyResultVM.Survey.Questions.Where(q => q.IdAreaSelfAssessment == areaSelfAssessment.Key.IdKeyValue))
                                {
                                    question.CurrentNumber = questionCounter;
                                    questionCounter++;
                                }

                            }
                            <SfAccordion>
                                <AccordionItems>
                                    @foreach (var areaSelfAssessment in this.surveyResultVM.Survey.Questions.GroupBy(x => x.AreaSelfAssessment).OrderBy(x => x.Key.Order))
                                    {
                                        <AccordionItem>
                                            <HeaderTemplate>
                                                <div class="row">
                                                    <div class="col-sm-8">@areaSelfAssessment.Key.Name</div>


                                                    <div class="col-sm-2">
                                                        @{
                                                            var areaSelfAssessmentPointText = string.Empty;


                                                            var points = Decimal.Zero;
                                                            var areaMaxPoints = Decimal.Zero;
                                                            @foreach (var question in this.surveyResultVM.Survey.Questions.Where(q => q.IdAreaSelfAssessment == areaSelfAssessment.Key.IdKeyValue))
                                                            {
                                                                points = points + this.userAnswerModels.FirstOrDefault(x => x.IdQuestion == question.IdQuestion).Points;

                                                                if (question.Answers.Any(x => x.Points.HasValue))
                                                                {
                                                                    decimal maxPoint = question.Answers.Max(x => x.Points).Value;
                                                                    areaMaxPoints += maxPoint;
                                                                }

                                                            }

                                                            if (points > 0)
                                                            {
                                                                areaSelfAssessmentPointText = "Брой точки " + points;
                                                            }
                                                        }
                                                        @areaSelfAssessmentPointText

                                                    </div>

                                                    <div class="col-sm-2">
                                                        @{
                                                            var maxPointText = areaMaxPoints == decimal.Zero ? "" : "Макс. брой точки " + areaMaxPoints;
                                                        }
                                                        @maxPointText

                                                    </div>
                                                </div>
                                            </HeaderTemplate>

                                            <ContentTemplate>
                                                @foreach (var question in this.surveyResultVM.Survey.Questions.Where(q => q.IdAreaSelfAssessment == areaSelfAssessment.Key.IdKeyValue))
                                                {
                                                    var header = $"{question.CurrentNumber}. {question.Text}";
                                                    var type = this.kvQuestionTypeSource.FirstOrDefault(x => x.IdKeyValue == question.IdQuestType)!.Name;
                                                    string icon = string.Empty;
                                                    if (type.Contains("Единствен"))
                                                    {
                                                        icon = "radio";
                                                    }
                                                    else if (type.Contains("Множествен"))
                                                    {
                                                        icon = "checkbox";
                                                    }

                                                    <div class="row" style="margin-bottom: 20px;">
                                                        <div class="col-sm-12">
                                                            <SfCard CssClass="@(question.IsRequired ? "custom" : string.Empty)">
                                                                <CardHeader Title="@header" SubTitle="@type" />
                                                                <CardContent>
                                                                    @if (question.Answers.Any())
                                                                    {
                                                                        var userAnswerModel = this.userAnswerModels.FirstOrDefault(x => x.IdQuestion == question.IdQuestion);
                                                                        if (question.IdQuestType != this.kvOpenQuestion.IdKeyValue)
                                                                        {
                                                                            var counter = 0;
                                                                            foreach (var answer in question.Answers)
                                                                            {
                                                                                var symbol = this.GetSymbolByOrder(counter++);
                                                                                answer.Symbol = symbol;
                                                                            }

                                                                            var selectionMode = icon == "checkbox" ? Syncfusion.Blazor.DropDowns.SelectionMode.Multiple : Syncfusion.Blazor.DropDowns.SelectionMode.Single;

                                                                            <SfListBox TValue="List<int>" DataSource="@question.Answers" TItem="AnswerVM" @bind-Value="userAnswerModel.AnswerIds" Enabled="@canEditReport">
                                                                                <ListBoxFieldSettings Text="SymbolAndTextPoints" Value="IdAnswer" />
                                                                                <ListBoxSelectionSettings ShowCheckbox="true" Mode="selectionMode" />


                                                                                <ListBoxTemplates TItem="AnswerVM">
                                                                                    <ItemTemplate>
                                                                                        <span>@(context.SymbolAndText)</span>
                                                                                        @{
                                                                                            string pointStr = context.Points.HasValue ? "(" + context.Points + " т.)" : "";
                                                                                        }
                                                                                        <b>@pointStr</b>
                                                                                    </ItemTemplate>
                                                                                </ListBoxTemplates>
                                                                            </SfListBox>

                                                                        }

                                                                        if (question.IdQuestType == this.kvOpenQuestion.IdKeyValue || question.IdQuestType == this.kvSingleOpenQuestion.IdKeyValue || question.IdQuestType == this.kvMultipleOpenQuestion.IdKeyValue)
                                                                        {
                                                                            string style = question.IdQuestType != this.kvOpenQuestion.IdKeyValue ? "margin-top: 15px;" : string.Empty;
                                                                            <EditForm EditContext="this.editContext">
                                                                                <div class="row" style="@style">
                                                                                    <div class="col-sm-12">
                                                                                        <div class="form-group">
                                                                                            <CustomInputTextArea class="form-control" @bind-Value="userAnswerModel.OpenAnswerText" rows="3" disabled="@(!canEditReport)" />
                                                                                        </div>
                                                                                    </div>
                                                                                </div>
                                                                            </EditForm>
                                                                        }

                                                                        <div class="row">
                                                                            <div class="col-sm-12">
                                                                                <p class="text-muted">@question.Description</p>
                                                                            </div>
                                                                        </div>
                                                                    }
                                                                </CardContent>
                                                            </SfCard>
                                                        </div>
                                                    </div>
                                                }
                                            </ContentTemplate>
                                        </AccordionItem>
                                    }
                                </AccordionItems>
                            </SfAccordion>
                        }
                    }

                </div>
            </div>
        </div>
    </div>
</div>




<style>
    .e-card .e-card-header .e-card-header-caption .e-card-sub-title {
        font-size: 12px !important;
        font-style: italic;
    }

    .custom.e-card .e-card-header .e-card-header-caption .e-card-header-title:after {
        color: #d00;
        content: " *";
        position: inherit;
        margin-left: 0px;
        top: 15px;
    }

    .e-acrdn-header-content {
        width: 100% !important;
    }
</style>



<ConfirmDialog @ref="ConfirmDialog" CallbackCancel="ConfirmDialogCallback" />


