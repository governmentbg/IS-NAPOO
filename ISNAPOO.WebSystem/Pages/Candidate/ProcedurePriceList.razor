@page "/ProcedurePriceList"
@attribute [Authorize(Policy = "ShowProcedurePriceList")]

@using ISNAPOO.Core.ViewModels.CPO.ProviderData
@inherits BlazorBaseComponent


<div class="content-wrapper">
    <div class="content-header">
        <div class="container-fluid">
            <h6 class="page-title-left">Такси за лицензиране</h6>
            <div class="card">
                <div class="card-header">
                    <nav class="navbar navbar-expand  ">
                        <!-- Left navbar links -->
                        <ul class="navbar-nav">

                            <li class="nav-item d-none d-sm-inline-block">
                                <button type="button" class="btn btn-primary btn-outline-primary waves-effect md-trigger" @onclick="OpenAddNewModal">Нов</button>
                            </li>

                        </ul>
                    </nav>
                </div>

                <div class="card-body">
                    <SfGrid ID="sfGrid" DataSource="procedurePriceSource" AllowSorting="true" AllowFiltering="true"
                            AllowTextWrap="true" @ref="sfGridPrice" AllowPaging="true" Toolbar="@(new List<string>() { "ExcelExport", "PdfExport" })"
                        AllowExcelExport="true" AllowPdfExport="true">
                        <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Excel"></GridFilterSettings>
                        <GridEvents PdfQueryCellInfoEvent="PdfQueryCellInfoHandler" OnToolbarClick="ToolbarClick" TValue="ProcedurePriceVM"></GridEvents>
                        <GridPageSettings PageCount="5" PageSize=20 PageSizes="true"></GridPageSettings>
                        <GridColumns>
                            <GridColumn AllowFiltering="false" AllowSorting="false" TextAlign="TextAlign.Left" CustomAttributes="@(new Dictionary<string, object>(){ { "class", "e-removewrap" }})" Width="10px">
                                <Template>
                                    @GetRowNumber(sfGridPrice, (context as ProcedurePriceVM).IdProcedurePrice).Result
                                </Template>
                            </GridColumn>
                            <GridColumn Width="15px">
                                <Template>
                                    <SfTooltip Position="TooltipPosition.BottomCenter" Content="Редакция" OpensOn="Hover" Width="100px">
                                        <button @onclick="(async () => await SelectedRow(context as ProcedurePriceVM))" class="btn-row"><i class="fa fa-pencil-square-o"></i></button>
                                    </SfTooltip>
                                </Template>
                            </GridColumn>
                            <GridColumn Field="IdProcedurePrice" IsPrimaryKey="true" Visible="false"></GridColumn>
                            <GridColumn Field="Name" HeaderText="Наименование на услугата" TextAlign="TextAlign.Left" Width="80px"></GridColumn>
                            <GridColumn Field="AdditionalInformation" HeaderText="Допълнителна информация" TextAlign="TextAlign.Left" Width="80px"></GridColumn>
                            <GridColumn Field="Price" HeaderText="Цена (лв.)" TextAlign="TextAlign.Left" Width="30px">
                                <Template>
                                    @{
                                        var ctx = context as ProcedurePriceVM;

                                        <div class="text-right">
                                            @($"{ctx.Price}")
                                        </div>
                                    }
                                </Template>
                            </GridColumn>
                            <GridColumn Field="TypeApplicationName" HeaderText="Вид на заявлението" TextAlign="TextAlign.Left" Width="50px"></GridColumn>
                            <GridColumn Field="CountProfessionsFrom" HeaderText="Брой професии от" TextAlign="TextAlign.Left" Width="30px"></GridColumn>
                            <GridColumn Field="CountProfessionsTo" HeaderText="Брой професии до" TextAlign="TextAlign.Left" Width="30px"></GridColumn>
                            <GridColumn Field="ExpirationDateFrom" HeaderText="Дата на валидност от" TextAlign="TextAlign.Left" Width="40px" Format="dd.MM.yyyy">
                                <Template>
                                        @{
                                        var ctx = context as ProcedurePriceVM;
                                        var date = ctx.ExpirationDateFrom.HasValue ? $"{ctx.ExpirationDateFrom.Value.ToString("dd.MM.yyyy")} г." : string.Empty;
                                            @date
                                        }
                                </Template>
                            </GridColumn>
                            <GridColumn Field="ExpirationDateTo" HeaderText="Дата на валидност до" TextAlign="TextAlign.Left" Width="40px" Format="dd.MM.yyyy">
                                <Template>
                                        @{
                                        var ctx = context as ProcedurePriceVM;
                                        var date = ctx.ExpirationDateTo.HasValue ? $"{ctx.ExpirationDateTo.Value.ToString("dd.MM.yyyy")} г." : string.Empty;
                                            @date
                                        }
                                </Template>
                            </GridColumn>
                            <GridColumn Field="ApplicationStatusName" HeaderText="Статус" TextAlign="TextAlign.Left" Width="40px"></GridColumn>
                        </GridColumns>
                    </SfGrid>
                </div>
            </div>
        </div>
    </div>
</div>
<ToastMsg @ref="toast" />
<ProcedurePriceModal @ref="priceModal" CallbackAfterSubmit="OnApplicationSubmit" />
<ConfirmDialog CallbackCancel="ConfirmDialogCallback" @ref="ConfirmDialog"></ConfirmDialog>
