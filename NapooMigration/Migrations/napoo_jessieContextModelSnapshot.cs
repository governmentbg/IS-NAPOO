// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NapooMigration.Models;

#nullable disable

namespace NapooMigration.Migrations
{
    [DbContext(typeof(napoo_jessieContext))]
    partial class napoo_jessieContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.HasSequence("arch_tb_course_groups_40_id_seq")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("arch_tb_course_groups_duplicates_id_seq")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("ref_course_type_fr_curr_int_code_course_fr_curr_id_seq")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("ref_course_type_fr_curr_int_code_course_type_id_seq")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_accs_adminlogid")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_accs_groupnames")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_accs_sessionid")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_arch_clients_courses_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_arch_courses_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_arch_courses_providers_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_arch_experts_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_arch_providers_department_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_arch_providers_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_arch_trainers_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_assign_type_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_candidate_providers_state_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_candidate_type_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_ccontract_type_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_cfinished_type_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_cipo_management_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_comm_member_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_commission_institution_type_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_correction_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_course_ed_form_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_course_fr_curr_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_course_group_required_documents_type_id")
                .HasMin(1L)
                .HasMax(2048L);

            modelBuilder.HasSequence("seq_code_course_measure_type_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_course_status_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_course_type_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_cpo_management_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_curric_hours_type_id")
                .HasMin(1L)
                .HasMax(900L);

            modelBuilder.HasSequence("seq_code_document_status")
                .HasMin(1L)
                .HasMax(900L);

            modelBuilder.HasSequence("seq_code_document_status_locks_id")
                .HasMin(1L)
                .HasMax(900L);

            modelBuilder.HasSequence("seq_code_document_type_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_documents_management_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_education_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_egn_type_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_ekatte_full_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_ekatte_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_employment_status_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_expert_position_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_expert_type_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_gender_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_licence_status_details_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_licence_status_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_municipality_details_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_municipality_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_nationality_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_nkpd_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_obl_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_operation_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_premises_correspondence_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_premises_status_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_premises_type_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_premises_usage_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_procedures_documents_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_provider_ownership_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_provider_registration_id")
                .HasMin(1L)
                .HasMax(922337L);

            modelBuilder.HasSequence("seq_code_provider_status_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_qual_level_id")
                .HasMin(1L)
                .HasMax(900L);

            modelBuilder.HasSequence("seq_code_qualification_type_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_request_doc_status_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_request_doc_type_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_speciality_curriculum_update_reason_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_speciality_vqs_id")
                .HasMin(1L)
                .HasMax(100L);

            modelBuilder.HasSequence("seq_code_tcontract_type_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_tqualification_type_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_training_type_id")
                .HasMin(1L)
                .HasMax(900L);

            modelBuilder.HasSequence("seq_code_validity_check_target")
                .HasMin(1L)
                .HasMax(512L);

            modelBuilder.HasSequence("seq_code_vet_area_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_vet_group_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_vet_list_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_vet_profession_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_vet_speciality_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_village_type_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_visit_result_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_code_wgdoi_function_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_groups_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_ref_arch_expert_commissions_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_ref_arch_experts_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_ref_arch_procedure_expert_commissions_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_ref_arch_procedure_experts_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_ref_arch_procedure_procedures_documents_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_ref_arch_procedure_provider_premises_specialities_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_ref_arch_procedures_documents_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_ref_candidates_experts_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_ref_candidates_procedures_documents_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_ref_cg_curric_files_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_ref_clients_courses_documents_status")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_ref_clients_courses_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_ref_clients_lab_offices_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_ref_course_document_type_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_ref_course_group_premises_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_ref_courses_providers_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_ref_document_type_cfinished_type_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_ref_experts_commissions_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_ref_experts_doi_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_ref_experts_types_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_ref_experts_vet_area_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_ref_fr_curr_ed_form_id")
                .HasMin(1L)
                .HasMax(900L);

            modelBuilder.HasSequence("seq_ref_fr_curr_educ_level_id")
                .HasMin(1L)
                .HasMax(9000L);

            modelBuilder.HasSequence("seq_ref_fr_curr_qual_level_id")
                .HasMin(1L)
                .HasMax(9000L);

            modelBuilder.HasSequence("seq_ref_main_expert_commissions_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_ref_main_experts_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_ref_procedures_documents_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_ref_provider_premises_specialities_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_ref_request_doc_status_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_ref_request_doc_type_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_ref_role_acl_actions_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_ref_role_groups_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_ref_role_users_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_ref_trainers_courses_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_ref_vet_specialities_nkpds_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_ref_visits_experts_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_ref_visits_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_sys_acl_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_sys_mail_log_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_sys_operation_log_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_sys_sign_log_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_acl_actions_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_acl_defaults_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_annual_info_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_arch_procedure_provider_premises_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_arch_procedure_provider_premises_rooms_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_arch_procedure_provider_specialities_curriculum_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_arch_procedure_provider_specialities_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_arch_procedure_providers_cipo_management_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_arch_procedure_providers_cpo_management_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_arch_procedure_providers_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_arch_procedure_trainer_documents_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_arch_procedure_trainer_profiles_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_arch_procedure_trainer_qualifications_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_arch_procedure_trainers_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_arch_providers_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_candidate_providers_cipo_management_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_candidate_providers_cpo_management_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_candidate_providers_documents_management_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_candidate_providers_state_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_clients_courses_documents_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_clients_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_clients_required_documents_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_course_groups_40_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_course_groups_duplicates_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_course_groups_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_course40_competences_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_courses_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_curric_modules_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_doi_commissions_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_doi_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_e_signers_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_expert_commissions_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_expert_profiles_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_experts_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_generated_documents_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_import_xml_id")
                .StartsAt(10L)
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_lab_offices_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_napoo_request_doc_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_payments_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_procedure_documents_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_procedure_prices_id")
                .HasMin(1L)
                .HasMax(1000L);

            modelBuilder.HasSequence("seq_tb_procedure_progress_documents_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_procedure_progress_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_provider_activities_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_provider_departments_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_provider_premises_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_provider_premises_rooms_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_provider_specialities_curriculum_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_provider_specialities_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_provider_uploaded_docs_id")
                .StartsAt(74L)
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_providers_cipo_management_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_providers_cpo_management_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_providers_docs_dashboard_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_providers_docs_offers_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_providers_documents_management_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_providers_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_providers_licence_change_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_providers_request_doc_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_request_docs_management_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_request_docs_sn_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_roles_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_sign_content_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_started_procedure_progress_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_started_procedures_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_survey_answer_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_survey_question_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_trainer_documents_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_trainer_profiles_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_trainer_qualifications_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_tb_trainers_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence("seq_users_id")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.Entity("NapooMigration.Models.AccsAccesslog", b =>
                {
                    b.Property<long>("Sessionid")
                        .HasColumnType("bigint")
                        .HasColumnName("sessionid");

                    b.Property<long?>("Ggid")
                        .HasColumnType("bigint")
                        .HasColumnName("ggid");

                    b.Property<string>("Ip")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ip");

                    b.Property<long?>("Lgid")
                        .HasColumnType("bigint")
                        .HasColumnName("lgid");

                    b.Property<long?>("Timeend")
                        .HasColumnType("bigint")
                        .HasColumnName("timeend");

                    b.Property<long?>("Timestart")
                        .HasColumnType("bigint")
                        .HasColumnName("timestart");

                    b.Property<long?>("Timeused")
                        .HasColumnType("bigint")
                        .HasColumnName("timeused");

                    b.Property<long?>("Userid")
                        .HasColumnType("bigint")
                        .HasColumnName("userid");

                    b.HasKey("Sessionid")
                        .HasName("accs_accesslog_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Sessionid"), false);

                    b.ToTable("accs_accesslog", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.AccsAdminlog", b =>
                {
                    b.Property<long>("AlId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("al_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AlId"), 1L, 1);

                    b.Property<long?>("Action")
                        .HasColumnType("bigint")
                        .HasColumnName("action");

                    b.Property<string>("Adata")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("adata");

                    b.Property<long?>("Sessionid")
                        .HasColumnType("bigint")
                        .HasColumnName("sessionid");

                    b.Property<long?>("T")
                        .HasColumnType("bigint")
                        .HasColumnName("t");

                    b.Property<long?>("TUserid")
                        .HasColumnType("bigint")
                        .HasColumnName("t_userid");

                    b.HasKey("AlId")
                        .HasName("accs_adminlog_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("AlId"), false);

                    b.ToTable("accs_adminlog", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.AccsBlockedip", b =>
                {
                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ip");

                    b.Property<long?>("Lt")
                        .HasColumnType("bigint")
                        .HasColumnName("lt");

                    b.Property<long?>("Nt")
                        .HasColumnType("bigint")
                        .HasColumnName("nt");

                    b.Property<long?>("Sf")
                        .HasColumnType("bigint")
                        .HasColumnName("sf");

                    b.Property<long?>("Tf")
                        .HasColumnType("bigint")
                        .HasColumnName("tf");

                    b.Property<long?>("Ts")
                        .HasColumnType("bigint")
                        .HasColumnName("ts");

                    b.Property<string>("Un")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("un");

                    b.ToTable("accs_blockedip", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.AccsFailure", b =>
                {
                    b.Property<long?>("Errorcode")
                        .HasColumnType("bigint")
                        .HasColumnName("errorcode");

                    b.Property<string>("Ip")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ip");

                    b.Property<long?>("T")
                        .HasColumnType("bigint")
                        .HasColumnName("t");

                    b.Property<string>("Uname")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("uname");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.ToTable("accs_failures", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.AccsMessage", b =>
                {
                    b.Property<long>("Mask")
                        .HasColumnType("bigint")
                        .HasColumnName("mask");

                    b.Property<string>("Msg")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("msg");

                    b.HasKey("Mask")
                        .HasName("accs_messages_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Mask"), false);

                    b.ToTable("accs_messages", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.AccsWebuserdatum", b =>
                {
                    b.Property<string>("Sessiondata")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("sessiondata");

                    b.Property<string>("Adat")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("adat");

                    b.Property<long?>("Firstlogin")
                        .HasColumnType("bigint")
                        .HasColumnName("firstlogin");

                    b.Property<long?>("Lastlogin")
                        .HasColumnType("bigint")
                        .HasColumnName("lastlogin");

                    b.Property<long?>("Nsec")
                        .HasColumnType("bigint")
                        .HasColumnName("nsec");

                    b.Property<string>("Udat")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("udat");

                    b.HasKey("Sessiondata")
                        .HasName("accs_webuserdata_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Sessiondata"), false);

                    b.ToTable("accs_webuserdata", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.AccsWebusergroup", b =>
                {
                    b.Property<int?>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("group_id");

                    b.Property<string>("GroupName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("group_name");

                    b.Property<int?>("Permissions")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("permissions")
                        .HasDefaultValueSql("((0))");

                    b.ToTable("accs_webusergroups", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.ArchRefClientsCourse", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("IntYear")
                        .HasColumnType("bigint")
                        .HasColumnName("int_year");

                    b.Property<DateTime?>("DtClientBirthDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_client_birth_date");

                    b.Property<DateTime?>("DtCourseFinished")
                        .HasColumnType("date")
                        .HasColumnName("dt_course_finished");

                    b.Property<long?>("IntAssignTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_assign_type_id");

                    b.Property<long?>("IntCfinishedTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_cfinished_type_id");

                    b.Property<int?>("IntClientGender")
                        .HasColumnType("int")
                        .HasColumnName("int_client_gender");

                    b.Property<long?>("IntClientId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_client_id");

                    b.Property<long?>("IntCourseGroupId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_group_id");

                    b.Property<long?>("IntEducationId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_education_id");

                    b.Property<int?>("IntEgnTypeId")
                        .HasColumnType("int")
                        .HasColumnName("int_egn_type_id");

                    b.Property<long?>("IntNationalityId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_nationality_id");

                    b.Property<long?>("IntQualLevel")
                        .HasColumnType("bigint")
                        .HasColumnName("int_qual_level");

                    b.Property<long?>("IntQualVetArea")
                        .HasColumnType("bigint")
                        .HasColumnName("int_qual_vet_area");

                    b.Property<long?>("IntVetAreaId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_area_id");

                    b.Property<long?>("IntVetSpecialityId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_speciality_id");

                    b.Property<string>("VcEgn")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_egn");

                    b.Property<string>("VcFamilyName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_family_name");

                    b.Property<string>("VcFirstName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_first_name");

                    b.Property<string>("VcSecondName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_second_name");

                    b.HasKey("Id", "IntYear")
                        .HasName("arch_ref_clients_courses_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id", "IntYear"), false);

                    b.HasIndex(new[] { "IntCourseGroupId" }, "arch_int_course_group_id_int_year");

                    b.HasIndex(new[] { "Id", "IntYear" }, "id_int_year");

                    b.HasIndex(new[] { "IntClientId", "IntYear" }, "int_client_id_int_year_idx");

                    b.ToTable("arch_ref_clients_courses", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.ArchRefProviderPremisesSpeciality", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("IntYear")
                        .HasColumnType("bigint")
                        .HasColumnName("int_year");

                    b.Property<long?>("IntProviderPremiseId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_premise_id");

                    b.Property<long?>("IntProviderPremiseSpecialityCorrespondence")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_premise_speciality_correspondence");

                    b.Property<long?>("IntProviderPremiseSpecialityUsage")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_premise_speciality_usage");

                    b.Property<int?>("IntProviderSpecialityId")
                        .HasColumnType("int")
                        .HasColumnName("int_provider_speciality_id");

                    b.HasKey("Id", "IntYear")
                        .HasName("arch_ref_provider_premises_specialities_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id", "IntYear"), false);

                    b.ToTable("arch_ref_provider_premises_specialities", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.ArchTbClient", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("IntYear")
                        .HasColumnType("bigint")
                        .HasColumnName("int_year");

                    b.Property<DateTime?>("DtClientBirthDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_client_birth_date");

                    b.Property<int?>("IntClientGender")
                        .HasColumnType("int")
                        .HasColumnName("int_client_gender");

                    b.Property<long?>("IntEducationId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_education_id");

                    b.Property<long?>("IntEgnTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_egn_type_id");

                    b.Property<long?>("IntNationalityId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_nationality_id");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<long?>("IntVetAreaId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_area_id");

                    b.Property<string>("VcClientFamilyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_client_family_name");

                    b.Property<string>("VcClientFirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_client_first_name");

                    b.Property<string>("VcClientSecondName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_client_second_name");

                    b.Property<string>("VcEgn")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_egn");

                    b.HasKey("Id", "IntYear")
                        .HasName("arch_clients_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id", "IntYear"), false);

                    b.HasIndex(new[] { "IntProviderId", "VcEgn", "IntYear" }, "arch_clients_int_provider_egn_key")
                        .IsUnique()
                        .HasFilter("([int_provider_id] IS NOT NULL AND [vc_egn] IS NOT NULL AND [int_year] IS NOT NULL)");

                    b.HasIndex(new[] { "Id", "IntYear" }, "id_int_year_idx");

                    b.ToTable("arch_tb_clients", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.ArchTbClientsCoursesDocument", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("IntYear")
                        .HasColumnType("bigint")
                        .HasColumnName("int_year");

                    b.Property<string>("Document1File")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("document_1_file");

                    b.Property<string>("Document2File")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("document_2_file");

                    b.Property<DateTime?>("DtDocumentDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_document_date");

                    b.Property<long?>("IntClientsCoursesId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_clients_courses_id");

                    b.Property<int?>("IntCourseFinishedYear")
                        .HasColumnType("int")
                        .HasColumnName("int_course_finished_year");

                    b.Property<long?>("IntDocumentStatus")
                        .HasColumnType("bigint")
                        .HasColumnName("int_document_status");

                    b.Property<long?>("IntDocumentTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_document_type_id");

                    b.Property<decimal?>("NumPracticeResult")
                        .HasColumnType("numeric(3,2)")
                        .HasColumnName("num_practice_result");

                    b.Property<decimal?>("NumTheoryResult")
                        .HasColumnType("numeric(3,2)")
                        .HasColumnName("num_theory_result");

                    b.Property<string>("VcDocumentPrnNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_document_prn_no");

                    b.Property<string>("VcDocumentPrnSer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_document_prn_ser");

                    b.Property<string>("VcDocumentProt")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_document_prot");

                    b.Property<string>("VcDocumentRegNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_document_reg_no");

                    b.Property<string>("VcQualificatiojLevel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_qualificatioj_level");

                    b.Property<string>("VcQualificationName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_qualification_name");

                    b.HasKey("Id", "IntYear")
                        .HasName("arch_clients_courses_documents_id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id", "IntYear"), false);

                    b.HasIndex(new[] { "IntClientsCoursesId", "IntYear" }, "int_client_courses_id_int_year_idx");

                    b.ToTable("arch_tb_clients_courses_documents", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.ArchTbCourse", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("IntYear")
                        .HasColumnType("bigint")
                        .HasColumnName("int_year");

                    b.Property<int?>("IntCourseEducRequirement")
                        .HasColumnType("int")
                        .HasColumnName("int_course_educ_requirement");

                    b.Property<long?>("IntCourseFrCurrId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_fr_curr_id");

                    b.Property<long?>("IntCourseNo")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_no");

                    b.Property<long?>("IntCourseTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_type_id");

                    b.Property<int?>("IntMandatoryHours")
                        .HasColumnType("int")
                        .HasColumnName("int_mandatory_hours");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<int?>("IntSelectableHours")
                        .HasColumnType("int")
                        .HasColumnName("int_selectable_hours");

                    b.Property<long?>("IntVetSpecialityId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_speciality_id");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("VcCourseAddNotes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_course_add_notes");

                    b.Property<string>("VcCourseName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_course_name");

                    b.HasKey("Id", "IntYear")
                        .HasName("arch_courses_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id", "IntYear"), false);

                    b.HasIndex(new[] { "IntYear" }, "i_arch_tb_courses_int_year");

                    b.ToTable("arch_tb_courses", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.ArchTbCourseGroup", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("IntYear")
                        .HasColumnType("bigint")
                        .HasColumnName("int_year");

                    b.Property<DateTime?>("DtCourseSubscribeDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_course_subscribe_date");

                    b.Property<DateTime?>("DtEndDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_end_date");

                    b.Property<DateTime?>("DtExamPracticeDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_exam_practice_date");

                    b.Property<DateTime?>("DtExamTheoryDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_exam_theory_date");

                    b.Property<DateTime?>("DtStartDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_start_date");

                    b.Property<long?>("IntAssignTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_assign_type_id");

                    b.Property<int?>("IntCourseDuration")
                        .HasColumnType("int")
                        .HasColumnName("int_course_duration");

                    b.Property<long?>("IntCourseEdFormId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_ed_form_id");

                    b.Property<long?>("IntCourseFrCurrId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_fr_curr_id");

                    b.Property<long?>("IntCourseId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_id");

                    b.Property<long?>("IntCourseMeasureTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_measure_type_id");

                    b.Property<long?>("IntCourseStatusId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_status_id");

                    b.Property<long?>("IntCourseTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_type_id");

                    b.Property<long?>("IntEkatteId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_ekatte_id");

                    b.Property<int?>("IntMandatoryHours")
                        .HasColumnType("int")
                        .HasColumnName("int_mandatory_hours");

                    b.Property<int?>("IntPDisabilityCount")
                        .HasColumnType("int")
                        .HasColumnName("int_p_disability_count");

                    b.Property<long?>("IntProviderPremise")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_premise");

                    b.Property<int?>("IntSelectableHours")
                        .HasColumnType("int")
                        .HasColumnName("int_selectable_hours");

                    b.Property<decimal?>("NumCourseCost")
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("num_course_cost");

                    b.Property<string>("VcAdditionalNotes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_additional_notes");

                    b.Property<string>("VcCourseAssignType")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_course_assign_type");

                    b.Property<string>("VcCourseGroupName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_course_group_name");

                    b.Property<string>("VcCourseNotes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_course_notes");

                    b.Property<string>("VcExamCommMembers")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_exam_comm_members");

                    b.HasKey("Id", "IntYear")
                        .HasName("arch_course_groups_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id", "IntYear"), false);

                    b.HasIndex(new[] { "Id", "IntYear" }, "arch_tb_course_groups_id_int_year_idx");

                    b.HasIndex(new[] { "IntCourseId" }, "int_course_id_idx");

                    b.ToTable("arch_tb_course_groups", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.ArchTbCourseGroups40", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("IntYear")
                        .HasColumnType("bigint")
                        .HasColumnName("int_year");

                    b.Property<DateTime?>("DtEndDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_end_date");

                    b.Property<DateTime?>("DtExamPracticeDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_exam_practice_date");

                    b.Property<DateTime?>("DtExamTheoryDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_exam_theory_date");

                    b.Property<DateTime?>("DtStartDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_start_date");

                    b.Property<int?>("IntAssignTypeId")
                        .HasColumnType("int")
                        .HasColumnName("int_assign_type_id");

                    b.Property<long?>("IntClientId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_client_id");

                    b.Property<int?>("IntCourseDuration")
                        .HasColumnType("int")
                        .HasColumnName("int_course_duration");

                    b.Property<long?>("IntCourseEdFormId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_ed_form_id");

                    b.Property<long?>("IntCourseFrCurrId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_fr_curr_id");

                    b.Property<long?>("IntCourseTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_type_id");

                    b.Property<long?>("IntEkatteId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_ekatte_id");

                    b.Property<int?>("IntMandatoryHours")
                        .HasColumnType("int")
                        .HasColumnName("int_mandatory_hours");

                    b.Property<long?>("IntProviderPremise")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_premise");

                    b.Property<int?>("IntSelectableHours")
                        .HasColumnType("int")
                        .HasColumnName("int_selectable_hours");

                    b.Property<long?>("IntVetSpecialityId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_speciality_id");

                    b.Property<decimal?>("NumCourseCost")
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("num_course_cost");

                    b.Property<string>("VcAdditionalNotes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_additional_notes");

                    b.Property<string>("VcExamCommMembers")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_exam_comm_members");

                    b.HasKey("Id", "IntYear")
                        .HasName("arch_tb_course_groups_40_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id", "IntYear"), false);

                    b.ToTable("arch_tb_course_groups_40", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.ArchTbCourseGroupsDuplicate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("IntYear")
                        .HasColumnType("bigint")
                        .HasColumnName("int_year");

                    b.Property<DateTime?>("DtEndDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_end_date");

                    b.Property<DateTime?>("DtOriginalDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_original_date");

                    b.Property<DateTime?>("DtStartDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_start_date");

                    b.Property<long?>("IntClientId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_client_id");

                    b.Property<long>("IntCodeDocumentTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_code_document_type_id");

                    b.Property<int?>("IntCourseFinishedYear")
                        .HasColumnType("int")
                        .HasColumnName("int_course_finished_year");

                    b.Property<long?>("IntOriginalDocumentId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_original_document_id");

                    b.Property<long?>("IntOriginalRefClientId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_original_ref_client_id");

                    b.Property<long?>("IntVetSpecialityId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_speciality_id");

                    b.Property<string>("VcOriginalPrnNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_original_prn_no");

                    b.Property<string>("VcOriginalRegNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_original_reg_no");

                    b.HasKey("Id", "IntYear")
                        .HasName("arch_tb_course_groups_duplicates_pk");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id", "IntYear"), false);

                    b.ToTable("arch_tb_course_groups_duplicates", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.ArchTbProvider", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("IntYear")
                        .HasColumnType("bigint")
                        .HasColumnName("int_year");

                    b.Property<bool?>("BoolIsBrra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bool_is_brra")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("DtLicenceData")
                        .HasColumnType("date")
                        .HasColumnName("dt_licence_data");

                    b.Property<long?>("IntEkatteId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_ekatte_id");

                    b.Property<long?>("IntLicenceNumber")
                        .HasColumnType("bigint")
                        .HasColumnName("int_licence_number");

                    b.Property<long?>("IntLicenceStatusId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_licence_status_id");

                    b.Property<long?>("IntLocalGroupId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_local_group_id");

                    b.Property<string>("IntProviderBulstat")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("int_provider_bulstat");

                    b.Property<long?>("IntProviderContactPersEkatteId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_contact_pers_ekatte_id");

                    b.Property<long?>("IntProviderOwnershipId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_ownership_id");

                    b.Property<long?>("IntProviderRegistrationId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_registration_id");

                    b.Property<long?>("IntProviderStatusId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_status_id");

                    b.Property<string>("VcProviderAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_address");

                    b.Property<string>("VcProviderContactPers")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_contact_pers");

                    b.Property<string>("VcProviderContactPersAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_contact_pers_address");

                    b.Property<string>("VcProviderContactPersEmail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_contact_pers_email");

                    b.Property<string>("VcProviderContactPersFax")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_contact_pers_fax");

                    b.Property<string>("VcProviderContactPersPhone1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_contact_pers_phone1");

                    b.Property<string>("VcProviderContactPersPhone2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_contact_pers_phone2");

                    b.Property<string>("VcProviderContactPersZipcode")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("vc_provider_contact_pers_zipcode");

                    b.Property<string>("VcProviderEmail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_email");

                    b.Property<string>("VcProviderFax")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_fax");

                    b.Property<string>("VcProviderManager")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_manager");

                    b.Property<string>("VcProviderName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_name");

                    b.Property<string>("VcProviderOwner")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_owner");

                    b.Property<string>("VcProviderPhone1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_phone1");

                    b.Property<string>("VcProviderPhone2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_phone2");

                    b.Property<string>("VcProviderProfile")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_provider_profile");

                    b.Property<string>("VcProviderWeb")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_web");

                    b.Property<string>("VcZipCode")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("vc_zip_code");

                    b.HasKey("Id", "IntYear")
                        .HasName("arch_tb_providers_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id", "IntYear"), false);

                    b.HasIndex(new[] { "IntProviderBulstat", "IntYear" }, "arch_tb_providers_int_provider_bulstat_key")
                        .IsUnique()
                        .HasFilter("([int_provider_bulstat] IS NOT NULL AND [int_year] IS NOT NULL)");

                    b.ToTable("arch_tb_providers", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.ArchTbProviderPremise", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("IntYear")
                        .HasColumnType("bigint")
                        .HasColumnName("int_year");

                    b.Property<bool?>("BoolIsVisited")
                        .HasColumnType("bit")
                        .HasColumnName("bool_is_visited");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<long?>("IntProviderPremiseEkatte")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_premise_ekatte");

                    b.Property<int?>("IntProviderPremiseNo")
                        .HasColumnType("int")
                        .HasColumnName("int_provider_premise_no");

                    b.Property<long?>("IntProviderPremiseStatus")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_premise_status");

                    b.Property<string>("TxtProviderPremiseAddress")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_provider_premise_address");

                    b.Property<string>("TxtProviderPremiseName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_provider_premise_name");

                    b.Property<string>("TxtProviderPremiseNotes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_provider_premise_notes");

                    b.HasKey("Id", "IntYear")
                        .HasName("arch_tb_provider_premises_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id", "IntYear"), false);

                    b.ToTable("arch_tb_provider_premises", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.ArchTbProviderSpecialitiesCurriculum", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("IntYear")
                        .HasColumnType("bigint")
                        .HasColumnName("int_year");

                    b.Property<bool?>("BoolIsUpdated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bool_is_updated")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("DtUpdateDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_update_date");

                    b.Property<long?>("IntProviderSpecialityId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_speciality_id");

                    b.Property<long?>("IntSpecialityCurriculumUpdateReasonId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_speciality_curriculum_update_reason_id");

                    b.Property<string>("VcFileName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_file_name");

                    b.HasKey("Id", "IntYear")
                        .HasName("arch_tb_provider_specialities_curriculum_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id", "IntYear"), false);

                    b.ToTable("arch_tb_provider_specialities_curriculum", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.ArchTbProviderSpeciality", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("IntYear")
                        .HasColumnType("bigint")
                        .HasColumnName("int_year");

                    b.Property<bool?>("BoolIsAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bool_is_added")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("BoolIsValid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bool_is_valid")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("DtLicenceData")
                        .HasColumnType("date")
                        .HasColumnName("dt_licence_data");

                    b.Property<string>("IntLicenceProtNo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("int_licence_prot_no");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<long?>("IntVetSpecialityId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_speciality_id");

                    b.Property<string>("TxtSpecialityNotes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_speciality_notes");

                    b.HasKey("Id", "IntYear")
                        .HasName("arch_tb_provider_specialities_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id", "IntYear"), false);

                    b.ToTable("arch_tb_provider_specialities", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.ArchTbTrainer", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("IntYear")
                        .HasColumnType("bigint")
                        .HasColumnName("int_year");

                    b.Property<bool?>("BoolIsAndragog")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bool_is_andragog")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("DtTcontractDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_tcontract_date");

                    b.Property<int?>("IntBirthYear")
                        .HasColumnType("int")
                        .HasColumnName("int_birth_year");

                    b.Property<long?>("IntEducationId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_education_id");

                    b.Property<long?>("IntEgnTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_egn_type_id");

                    b.Property<long?>("IntGenderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_gender_id");

                    b.Property<long?>("IntNationalityId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_nationality_id");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<long?>("IntTcontractTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_tcontract_type_id");

                    b.Property<string>("TxtEducationAcademicNotes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_education_academic_notes");

                    b.Property<string>("TxtEducationCertificateNotes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_education_certificate_notes");

                    b.Property<string>("TxtEducationSpecialityNotes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_education_speciality_notes");

                    b.Property<string>("VcEgn")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_egn");

                    b.Property<string>("VcEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_email");

                    b.Property<string>("VcTrainerFamilyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_trainer_family_name");

                    b.Property<string>("VcTrainerFirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_trainer_first_name");

                    b.Property<string>("VcTrainerSecondName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_trainer_second_name");

                    b.HasKey("Id", "IntYear")
                        .HasName("arch_tb_trainers_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id", "IntYear"), false);

                    b.HasIndex(new[] { "IntProviderId", "VcEgn", "IntYear" }, "arch_tb_trainers_int_provider_egn_key")
                        .IsUnique()
                        .HasFilter("([int_provider_id] IS NOT NULL AND [vc_egn] IS NOT NULL AND [int_year] IS NOT NULL)");

                    b.ToTable("arch_tb_trainers", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.ArchTbTrainerQualification", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("IntYear")
                        .HasColumnType("bigint")
                        .HasColumnName("int_year");

                    b.Property<DateTime?>("DtStartDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_start_date");

                    b.Property<long?>("IntProfessionId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_profession_id");

                    b.Property<int?>("IntQualificationDuration")
                        .HasColumnType("int")
                        .HasColumnName("int_qualification_duration");

                    b.Property<long?>("IntQualificationTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_qualification_type_id");

                    b.Property<long?>("IntTqualificationTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_tqualification_type_id");

                    b.Property<long?>("IntTrainerId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_trainer_id");

                    b.Property<string>("TxtQualificationName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_qualification_name");

                    b.HasKey("Id", "IntYear")
                        .HasName("arch_tb_trainer_qualifications_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id", "IntYear"), false);

                    b.ToTable("arch_tb_trainer_qualifications", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeAssignType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntOrderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_order_id");

                    b.Property<string>("VcAssignTypeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_assign_type_name");

                    b.HasKey("Id")
                        .HasName("code_assign_type_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "VcAssignTypeName" }, "ndx_code_assign_type");

                    b.ToTable("code_assign_type", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeCandidateProvidersState", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("VcCandidateProvidersStateName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_candidate_providers_state_name");

                    b.HasKey("Id")
                        .HasName("code_candidate_providers_state_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_candidate_providers_state", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeCandidateType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("VcCandidateTypeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_candidate_type_name");

                    b.HasKey("Id")
                        .HasName("code_candidate_type_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_candidate_type", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeCcontractType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("VcCcontractTypeName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_ccontract_type_name");

                    b.HasKey("Id")
                        .HasName("code_ccontract_type_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "VcCcontractTypeName" }, "ndx_code_ccontract_type");

                    b.ToTable("code_ccontract_type", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeCfinishedType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool?>("BoolFinished")
                        .HasColumnType("bit")
                        .HasColumnName("bool_finished");

                    b.Property<string>("VcCfinishedTypeName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_cfinished_type_name");

                    b.HasKey("Id")
                        .HasName("code_cfinished_type_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "VcCfinishedTypeName" }, "ndx_code_cfinished_type");

                    b.ToTable("code_cfinished_type", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeCipoManagement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntDocumentsManagementId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_documents_management_id");

                    b.Property<int?>("IntUiControlType")
                        .HasColumnType("int")
                        .HasColumnName("int_ui_control_type");

                    b.Property<string>("VcCodeCipoManagementIdentAdd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_code_cipo_management_ident_add");

                    b.Property<string>("VcCodeCipoManagementIdentNew")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_code_cipo_management_ident_new");

                    b.Property<string>("VcCodeCipoManagementName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_code_cipo_management_name");

                    b.Property<string>("VcExtraInfo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("vc_extra_info");

                    b.Property<string>("VcListTable")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_list_table");

                    b.Property<string>("VcPleaseText")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("vc_please_text");

                    b.Property<long?>("Version")
                        .HasColumnType("bigint")
                        .HasColumnName("version");

                    b.HasKey("Id")
                        .HasName("code_cipo_management_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_cipo_management", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeCommissionInstitutionType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("VcCommissionInstitutionTypeName")
                        .HasMaxLength(110)
                        .HasColumnType("nvarchar(110)")
                        .HasColumnName("vc_commission_institution_type_name");

                    b.Property<string>("VcShortName")
                        .HasMaxLength(110)
                        .HasColumnType("nvarchar(110)")
                        .HasColumnName("vc_short_name");

                    b.HasKey("Id")
                        .HasName("code_commission_institution_type_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_commission_institution_type", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeCommMember", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("VcCommMemberName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_comm_member_name");

                    b.HasKey("Id")
                        .HasName("code_comm_member_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_comm_member", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeCorrection", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("VcCorrectionName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_correction_name");

                    b.HasKey("Id")
                        .HasName("code_correction_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_correction", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeCourseEdForm", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool?>("BoolIsValid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bool_is_valid")
                        .HasDefaultValueSql("((1))");

                    b.Property<long?>("IntOrder")
                        .HasColumnType("bigint")
                        .HasColumnName("int_order");

                    b.Property<string>("VcCourseEdFormName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_course_ed_form_name");

                    b.HasKey("Id")
                        .HasName("code_course_ed_form_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "VcCourseEdFormName" }, "ndx_code_course_ed_form");

                    b.ToTable("code_course_ed_form", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeCourseFrCurr", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool?>("BoolValid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bool_valid")
                        .HasDefaultValueSql("((1))");

                    b.Property<long?>("IntCourseType")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_type");

                    b.Property<long?>("IntCourseValidationType")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_validation_type");

                    b.Property<long?>("IntDurationMonths")
                        .HasColumnType("bigint")
                        .HasColumnName("int_duration_months");

                    b.Property<long?>("IntMandatoryHours")
                        .HasColumnType("bigint")
                        .HasColumnName("int_mandatory_hours");

                    b.Property<long?>("IntMinPercCommon")
                        .HasColumnType("bigint")
                        .HasColumnName("int_min_perc_common");

                    b.Property<long?>("IntMinPercPractice")
                        .HasColumnType("bigint")
                        .HasColumnName("int_min_perc_practice");

                    b.Property<int?>("IntOrder")
                        .HasColumnType("int")
                        .HasColumnName("int_order");

                    b.Property<long?>("IntSelectableHours")
                        .HasColumnType("bigint")
                        .HasColumnName("int_selectable_hours");

                    b.Property<long?>("IntTotalHours")
                        .HasColumnType("bigint")
                        .HasColumnName("int_total_hours");

                    b.Property<int?>("IntVqs")
                        .HasColumnType("int")
                        .HasColumnName("int_vqs");

                    b.Property<string>("VcCourseFrCurrName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_course_fr_curr_name");

                    b.Property<string>("VcDescInEdu")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("vc_desc_in_edu");

                    b.Property<string>("VcDescInQual")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("vc_desc_in_qual");

                    b.Property<string>("VcDescPerc")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("vc_desc_perc");

                    b.Property<string>("VcDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("vc_description");

                    b.Property<string>("VcEdForms")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("vc_ed_forms");

                    b.Property<string>("VcShortDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_short_desc");

                    b.HasKey("Id")
                        .HasName("code_course_fr_curr_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "VcCourseFrCurrName" }, "ndx_code_course_fr_curr");

                    b.ToTable("code_course_fr_curr", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeCourseGroupRequiredDocumentsType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool?>("BoolForClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bool_for_client")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("BoolMandatory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bool_mandatory")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("CheckboxOrder")
                        .HasColumnType("int")
                        .HasColumnName("checkbox_order");

                    b.Property<long?>("IntCourseType")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_type");

                    b.Property<bool?>("IsValid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("is_valid")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("VcCheckboxName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("vc_checkbox_name");

                    b.Property<string>("VcDocumentType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_document_type");

                    b.HasKey("Id")
                        .HasName("code_course_group_required_documents_type_pk");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_course_group_required_documents_type", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeCourseMeasureType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("VcCourseMeasureTypeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_course_measure_type_name");

                    b.HasKey("Id")
                        .HasName("code_course_measure_type_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "VcCourseMeasureTypeName" }, "ndx_code_course_measure_type");

                    b.ToTable("code_course_measure_type", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeCourseStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("VcCourseStatusName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_course_status_name");

                    b.HasKey("Id")
                        .HasName("code_course_status_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "VcCourseStatusName" }, "ndx_code_course_status");

                    b.ToTable("code_course_status", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeCourseType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool?>("BoolGroup")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bool_group")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("BoolHasFrCurr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bool_has_fr_curr")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("BoolHasSpeciality")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bool_has_speciality")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("BoolRdpkCheck")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bool_rdpk_check")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("BoolValid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bool_valid")
                        .HasDefaultValueSql("((1))");

                    b.Property<long?>("IntCfinishedTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_cfinished_type_id");

                    b.Property<string>("VcCourseTypeName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_course_type_name");

                    b.Property<string>("VcCourseTypeNameEn")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_course_type_name_en");

                    b.Property<string>("VcCourseTypeShort")
                        .HasMaxLength(155)
                        .HasColumnType("nvarchar(155)")
                        .HasColumnName("vc_course_type_short");

                    b.HasKey("Id")
                        .HasName("code_course_type_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "VcCourseTypeName" }, "ndx_code_course_type");

                    b.ToTable("code_course_type", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeCpoManagement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntDocumentsManagementId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_documents_management_id");

                    b.Property<int?>("IntUiControlType")
                        .HasColumnType("int")
                        .HasColumnName("int_ui_control_type");

                    b.Property<string>("VcCodeCpoManagementIdentAdd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_code_cpo_management_ident_add");

                    b.Property<string>("VcCodeCpoManagementIdentNew")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_code_cpo_management_ident_new");

                    b.Property<string>("VcCodeCpoManagementIdentP4")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_code_cpo_management_ident_p4");

                    b.Property<string>("VcCodeCpoManagementName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_code_cpo_management_name");

                    b.Property<string>("VcExtraInfo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("vc_extra_info");

                    b.Property<string>("VcListTable")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_list_table");

                    b.Property<string>("VcPleaseText")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_please_text");

                    b.Property<long?>("Version")
                        .HasColumnType("bigint")
                        .HasColumnName("version");

                    b.HasKey("Id")
                        .HasName("code_cpo_management_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_cpo_management", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeCurricHoursType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntCodeTrainingTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_code_training_type_id");

                    b.Property<bool?>("IsValid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("is_valid")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("VcCurricHoursType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_curric_hours_type");

                    b.Property<string>("VcSectionCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("vc_section_code");

                    b.HasKey("Id")
                        .HasName("code_curric_hours_type_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_curric_hours_type", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeDocumentsManagement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool?>("BoolIsBrra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bool_is_brra")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("BoolIsConditional")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bool_is_conditional")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("BoolIsMandatory")
                        .HasColumnType("bit")
                        .HasColumnName("bool_is_mandatory");

                    b.Property<bool?>("BoolIsNotBrra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bool_is_not_brra")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("BoolIsPrnOnly")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bool_is_prn_only")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("BoolIsValid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bool_is_valid")
                        .HasDefaultValueSql("((1))");

                    b.Property<long?>("IntCandidateTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_candidate_type_id");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<bool?>("Seenbyexpert")
                        .HasColumnType("bit")
                        .HasColumnName("seenbyexpert");

                    b.Property<string>("VcCondition")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_condition");

                    b.Property<string>("VcDocumentsManagementName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_documents_management_name");

                    b.HasKey("Id")
                        .HasName("code_documents_management_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_documents_management", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeDocumentStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool?>("BoolLockAddClients")
                        .HasColumnType("bit")
                        .HasColumnName("bool_lock_add_clients");

                    b.Property<bool?>("BoolLockAddDocument")
                        .HasColumnType("bit")
                        .HasColumnName("bool_lock_add_document");

                    b.Property<bool?>("BoolLockAddProtokols")
                        .HasColumnType("bit")
                        .HasColumnName("bool_lock_add_protokols");

                    b.Property<bool?>("BoolLockCg")
                        .HasColumnType("bit")
                        .HasColumnName("bool_lock_cg");

                    b.Property<bool?>("BoolLockClient")
                        .HasColumnType("bit")
                        .HasColumnName("bool_lock_client");

                    b.Property<bool?>("BoolLockClientDocs")
                        .HasColumnType("bit")
                        .HasColumnName("bool_lock_client_docs");

                    b.Property<bool?>("BoolLockProtokols")
                        .HasColumnType("bit")
                        .HasColumnName("bool_lock_protokols");

                    b.Property<bool?>("BoolLockRollback")
                        .HasColumnType("bit")
                        .HasColumnName("bool_lock_rollback");

                    b.Property<bool?>("BoolWithNote")
                        .HasColumnType("bit")
                        .HasColumnName("bool_with_note");

                    b.Property<bool?>("IsValid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("is_valid")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("VcButtonName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("vc_button_name");

                    b.Property<string>("VcStatusName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_status_name");

                    b.HasKey("Id")
                        .HasName("code_docuement_status_pk");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_document_status", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeDocumentStatusLock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("VcStatusLockName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_status_lock_name");

                    b.HasKey("Id")
                        .HasName("code_document_status_locks_pk");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_document_status_locks", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeDocumentType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool?>("BoolHasFabNumber")
                        .HasColumnType("bit")
                        .HasColumnName("bool_has_fab_number");

                    b.Property<bool?>("BoolHasFile")
                        .HasColumnType("bit")
                        .HasColumnName("bool_has_file");

                    b.Property<bool?>("BoolHasMarks")
                        .HasColumnType("bit")
                        .HasColumnName("bool_has_marks");

                    b.Property<bool?>("BoolHasQual")
                        .HasColumnType("bit")
                        .HasColumnName("bool_has_qual");

                    b.Property<bool?>("BoolMoreThanOne")
                        .HasColumnType("bit")
                        .HasColumnName("bool_more_than_one");

                    b.Property<long?>("IntParentId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_parent_id");

                    b.Property<string>("VcDocumentTypeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_document_type_name");

                    b.Property<string>("VcDocumentTypeNameEn")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_document_type_name_en");

                    b.HasKey("Id")
                        .HasName("code_document_type_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_document_type", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeDocumentValidityCheck", b =>
                {
                    b.Property<bool?>("BoolDuplicate")
                        .HasColumnType("bit")
                        .HasColumnName("bool_duplicate");

                    b.Property<bool?>("BoolIfRows0")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bool_if_rows0")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("BoolMandatory")
                        .HasColumnType("bit")
                        .HasColumnName("bool_mandatory");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("IntCodeValidityCheckTarget")
                        .HasColumnType("int")
                        .HasColumnName("int_code_validity_check_target");

                    b.Property<long?>("IntCourseType")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_type");

                    b.Property<long?>("IntDocumentTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_document_type_id");

                    b.Property<bool?>("IsValid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("is_valid")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("VcCondition")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("vc_condition");

                    b.Property<string>("VcDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("vc_description");

                    b.Property<string>("VcFunctionName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("vc_function_name");

                    b.Property<string>("VcInFile")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("vc_in_file");

                    b.HasIndex(new[] { "Id" }, "code_document_validity_checks_uk")
                        .IsUnique()
                        .HasFilter("([id] IS NOT NULL)");

                    b.ToTable("code_document_validity_checks", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeEducation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int?>("IntMonId")
                        .HasColumnType("int")
                        .HasColumnName("int_mon_id");

                    b.Property<string>("VcEducationName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_education_name");

                    b.HasKey("Id")
                        .HasName("code_education_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "VcEducationName" }, "ndx_code_education");

                    b.ToTable("code_education", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeEgnType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("VcEgnType")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_egn_type");

                    b.HasKey("Id")
                        .HasName("code_egn_type_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_egn_type", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeEkatte", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntMunicipalityId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_municipality_id");

                    b.Property<long?>("IntOblId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_obl_id");

                    b.Property<int?>("IntPostCode")
                        .HasColumnType("int")
                        .HasColumnName("int_post_code");

                    b.Property<long?>("IntVillageTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_village_type_id");

                    b.Property<string>("VcCat")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("vc_cat");

                    b.Property<string>("VcHeight")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("vc_height");

                    b.Property<string>("VcKati")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("vc_kati");

                    b.Property<string>("VcName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_name");

                    b.Property<string>("VcPhoneCode")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("vc_phone_code");

                    b.Property<string>("VcTextCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("vc_text_code");

                    b.HasKey("Id")
                        .HasName("code_ekatte_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "VcName" }, "ndx_code_ekatte");

                    b.ToTable("code_ekatte", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeEkatteFull", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntMunicipalityId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_municipality_id");

                    b.Property<long?>("IntOblId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_obl_id");

                    b.Property<int?>("IntPostCode")
                        .HasColumnType("int")
                        .HasColumnName("int_post_code");

                    b.Property<long?>("IntVillageTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_village_type_id");

                    b.Property<string>("VcCat")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("vc_cat");

                    b.Property<string>("VcHeight")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("vc_height");

                    b.Property<string>("VcKati")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("vc_kati");

                    b.Property<string>("VcName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_name");

                    b.Property<string>("VcPhoneCode")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("vc_phone_code");

                    b.Property<string>("VcTextCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("vc_text_code");

                    b.HasKey("Id")
                        .HasName("code_ekatte_full_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_ekatte_full", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeEmploymentStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("VcEmploymentStatusName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_employment_status_name");

                    b.HasKey("Id")
                        .HasName("code_employment_status_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "VcEmploymentStatusName" }, "ndx_code_employment_status");

                    b.ToTable("code_employment_status", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeExpertType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("VcExpertTypeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_expert_type_name");

                    b.HasKey("Id")
                        .HasName("code_expert_type_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_expert_type", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeExtRegister", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("VcRegisterName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("vc_register_name");

                    b.HasKey("Id")
                        .HasName("code_ext_register_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_ext_register", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeGender", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("VcGender")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_gender");

                    b.HasKey("Id")
                        .HasName("code_gender_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "VcGender" }, "ndx_code_gender");

                    b.ToTable("code_gender", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeLicenceStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("VcLicStatusShortName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("vc_lic_status_short_name");

                    b.Property<string>("VcLicStatusShortNameEn")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("vc_lic_status_short_name_en");

                    b.Property<string>("VcLicenceStatusName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_licence_status_name");

                    b.Property<string>("VcLicenceStatusNameEn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_licence_status_name_en");

                    b.HasKey("Id")
                        .HasName("code_licence_status_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "VcLicenceStatusName" }, "ndx_code_licence_status");

                    b.ToTable("code_licence_status", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeLicenceStatusDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("VcLicenceStatusDetailsName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_licence_status_details_name");

                    b.Property<string>("VcLicenceStatusDetailsNameEn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_licence_status_details_name_en");

                    b.HasKey("Id")
                        .HasName("code_licence_status_details_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_licence_status_details", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeMunicipality", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntOblId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_obl_id");

                    b.Property<string>("VcMunicipalityCodeName")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("vc_municipality_code_name");

                    b.Property<string>("VcMunicipalityName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_municipality_name");

                    b.HasKey("Id")
                        .HasName("code_municipality_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "VcMunicipalityName" }, "ndx_code_municipality");

                    b.ToTable("code_municipality", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeMunicipalityDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntMunicipalityId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_municipality_id");

                    b.Property<long?>("IntOblId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_obl_id");

                    b.Property<string>("VcMunicipalityDetailsName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_municipality_details_name");

                    b.HasKey("Id")
                        .HasName("code_municipality_details_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "VcMunicipalityDetailsName" }, "ndx_code_municipality_details");

                    b.ToTable("code_municipality_details", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeNationality", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool?>("BoolIsEuMember")
                        .HasColumnType("bit")
                        .HasColumnName("bool_is_eu_member");

                    b.Property<string>("VcCountryName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_country_name");

                    b.HasKey("Id")
                        .HasName("code_nationality_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_nationality", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeNkpd", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("IntNkpdId1")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("int_nkpd_id1");

                    b.Property<string>("IntNkpdId2")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("int_nkpd_id2");

                    b.Property<string>("VcNkpdName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_nkpd_name");

                    b.HasKey("Id")
                        .HasName("code_nkpd_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "IntNkpdId1", "IntNkpdId2" }, "unique_int_nkpd_id")
                        .IsUnique()
                        .HasFilter("([int_nkpd_id1] IS NOT NULL AND [int_nkpd_id2] IS NOT NULL)");

                    b.ToTable("code_nkpd", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeObl", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("VcOblCodeName")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("vc_obl_code_name");

                    b.Property<string>("VcOblName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_obl_name");

                    b.HasKey("Id")
                        .HasName("code_obl_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "VcOblName" }, "ndx_code_obl");

                    b.ToTable("code_obl", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeOperation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int?>("IntOrder")
                        .HasColumnType("int")
                        .HasColumnName("int_order");

                    b.Property<string>("VcName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_name");

                    b.HasKey("Id")
                        .HasName("code_operation_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "VcName" }, "unique_vc_name")
                        .IsUnique()
                        .HasFilter("([vc_name] IS NOT NULL)");

                    b.ToTable("code_operation", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodePremisesCorrespondence", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("VcPremisesCorrespondenceName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_premises_correspondence_name");

                    b.HasKey("Id")
                        .HasName("code_premises_correspondence_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_premises_correspondence", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodePremisesStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("VcPremisesStatusName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_premises_status_name");

                    b.HasKey("Id")
                        .HasName("code_premises_status_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_premises_status", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodePremisesType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("VcPremisesTypeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_premises_type_name");

                    b.HasKey("Id")
                        .HasName("code_premises_type_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_premises_type", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodePremisesUsage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("VcPremisesUsageName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_premises_usage_name");

                    b.HasKey("Id")
                        .HasName("code_premises_usage_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_premises_usage", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeProcedure", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit")
                        .HasColumnName("is_valid");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("code_procedures_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_procedures", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeProcedureDecision", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("VcProcedureDecision")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_procedure_decision");

                    b.Property<string>("VcProcedureDecisionEn")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_procedure_decision_en");

                    b.HasKey("Id")
                        .HasName("code_procedure_decision_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_procedure_decision", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeProceduresDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntCandidateTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_candidate_type_id");

                    b.Property<int?>("IntDocumentId")
                        .HasColumnType("int")
                        .HasColumnName("int_document_id");

                    b.Property<int?>("IntOrderId")
                        .HasColumnType("int")
                        .HasColumnName("int_order_id");

                    b.Property<int?>("IntRowId")
                        .HasColumnType("int")
                        .HasColumnName("int_row_id");

                    b.Property<string>("VcProceduresDocumentsName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_procedures_documents_name");

                    b.HasKey("Id")
                        .HasName("code_procedures_documents_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_procedures_documents", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeProcedureStage", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit")
                        .HasColumnName("is_valid");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("code_procedure_stages_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_procedure_stages", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeProcedureStep", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit")
                        .HasColumnName("is_valid");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("code_procedure_steps_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_procedure_steps", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeProtokolType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<bool?>("BoolValid")
                        .HasColumnType("bit")
                        .HasColumnName("bool_valid");

                    b.Property<string>("VcCodeName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_code_name");

                    b.Property<string>("VcName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_name");

                    b.HasKey("Id")
                        .HasName("code_protokol_type_pk");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_protokol_type", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeProviderOwnership", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("VcProviderOwnershipName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_provider_ownership_name");

                    b.HasKey("Id")
                        .HasName("code_provider_ownership_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_provider_ownership", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeProviderRegistration", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("VcProviderRegistrationTypeName")
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)")
                        .HasColumnName("vc_provider_registration_type_name");

                    b.HasKey("Id")
                        .HasName("code_provider_registration_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_provider_registration", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeProviderStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool?>("IsBrra")
                        .HasColumnType("bit")
                        .HasColumnName("is_brra");

                    b.Property<bool?>("IsCpo")
                        .HasColumnType("bit")
                        .HasColumnName("is_cpo");

                    b.Property<string>("VcProviderStatusName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_provider_status_name");

                    b.HasKey("Id")
                        .HasName("code_provider_status_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "VcProviderStatusName" }, "ndx_code_provider_status");

                    b.ToTable("code_provider_status", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeQualificationType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("VcQualificationTypeName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_qualification_type_name");

                    b.HasKey("Id")
                        .HasName("code_qualification_type_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_qualification_type", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeQualLevel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool?>("BoolSameArea")
                        .HasColumnType("bit")
                        .HasColumnName("bool_same_area");

                    b.Property<bool?>("BoolSameProf")
                        .HasColumnType("bit")
                        .HasColumnName("bool_same_prof");

                    b.Property<bool?>("BoolSpkPart")
                        .HasColumnType("bit")
                        .HasColumnName("bool_spk_part");

                    b.Property<int?>("IntGradeSpk")
                        .HasColumnType("int")
                        .HasColumnName("int_grade_spk");

                    b.Property<bool?>("IsValid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("is_valid")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("VcQualLevelName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_qual_level_name");

                    b.HasKey("Id")
                        .HasName("code_qual_level_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_qual_level", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeReceiveDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("VcReceiveDocumentsName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_receive_documents_name");

                    b.HasKey("Id")
                        .HasName("code_receive_documents_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_receive_documents", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeReceiveType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("VcReceiveTypeName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_receive_type_name");

                    b.HasKey("Id")
                        .HasName("code_receive_type_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_receive_type", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeRequestDocsOperation", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("VcRequestDocsOperationName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("vc_request_docs_operation_name");

                    b.HasKey("Id")
                        .HasName("code_request_docs_operation_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_request_docs_operation", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeRequestDocsSeries", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long?>("IntDocType")
                        .HasColumnType("bigint")
                        .HasColumnName("int_doc_type");

                    b.Property<int?>("IntDocYear")
                        .HasColumnType("int")
                        .HasColumnName("int_doc_year");

                    b.Property<string>("VcRequestDocTypeOfficialNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_request_doc_type_official_number");

                    b.Property<string>("VcSeriesName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("vc_series_name");

                    b.HasKey("Id")
                        .HasName("code_request_docs_series_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_request_docs_series", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeRequestDocStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("VcRequestDocStatusName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_request_doc_status_name");

                    b.HasKey("Id")
                        .HasName("code_request_doc_status_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_request_doc_status", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeRequestDocType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool?>("BoolHasSerialNumber")
                        .HasColumnType("bit")
                        .HasColumnName("bool_has_serial_number");

                    b.Property<bool?>("BoolIsValid")
                        .HasColumnType("bit")
                        .HasColumnName("bool_is_valid");

                    b.Property<long?>("IntCodeDocumentTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_code_document_type_id");

                    b.Property<int?>("IntCurrentPeriod")
                        .HasColumnType("int")
                        .HasColumnName("int_current_period");

                    b.Property<float?>("IntDocPrice")
                        .HasColumnType("real")
                        .HasColumnName("int_doc_price");

                    b.Property<int?>("IntOrderId")
                        .HasColumnType("int")
                        .HasColumnName("int_order_id");

                    b.Property<bool>("IsDestroyable")
                        .HasColumnType("bit")
                        .HasColumnName("is_destroyable");

                    b.Property<string>("VcRequestDocTypeName")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("vc_request_doc_type_name");

                    b.Property<string>("VcRequestDocTypeOfficialNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_request_doc_type_official_number");

                    b.HasKey("Id")
                        .HasName("code_request_doc_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_request_doc_type", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeSpecialityCurriculumUpdateReason", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("VcName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_name");

                    b.HasKey("Id")
                        .HasName("code_speciality_curriculum_update_reason_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_speciality_curriculum_update_reason", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeSpecialityVq", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("VcVqsName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_vqs_name");

                    b.Property<string>("VcVqsShortName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_vqs_short_name");

                    b.HasKey("Id")
                        .HasName("code_speciality_vqs_pk");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_speciality_vqs", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeStageDocument", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<bool?>("CanBeMoreThanOne")
                        .HasColumnType("bit")
                        .HasColumnName("can_be_more_than_one");

                    b.Property<int?>("EDelivery")
                        .HasColumnType("int")
                        .HasColumnName("e_delivery");

                    b.Property<bool?>("HasSignedCopy")
                        .HasColumnType("bit")
                        .HasColumnName("has_signed_copy");

                    b.Property<long?>("Iorder")
                        .HasColumnType("bigint")
                        .HasColumnName("iorder");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit")
                        .HasColumnName("is_valid");

                    b.Property<string>("MnemCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("mnem_code");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<int?>("Parent")
                        .HasColumnType("int")
                        .HasColumnName("parent");

                    b.Property<long?>("RefProcedureStepStageId")
                        .HasColumnType("bigint")
                        .HasColumnName("ref_procedure_step_stage_id");

                    b.Property<long?>("TypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("type_id");

                    b.Property<bool?>("Uploadbyexpert")
                        .HasColumnType("bit")
                        .HasColumnName("uploadbyexpert");

                    b.HasKey("Id")
                        .HasName("code_stage_documents_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_stage_documents", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeStageDocumentType", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("code_stage_document_types_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_stage_document_types", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeTcontractType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("VcTcontractTypeName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_tcontract_type_name");

                    b.HasKey("Id")
                        .HasName("code_tcontract_type_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "VcTcontractTypeName" }, "ndx_code_tcontract_type");

                    b.ToTable("code_tcontract_type", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeTqualificationType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("VcTqualificationTypeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_tqualification_type_name");

                    b.HasKey("Id")
                        .HasName("code_tqualification_type_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_tqualification_type", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeTrainingType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool?>("BoolGroupMtb")
                        .HasColumnType("bit")
                        .HasColumnName("bool_group_mtb");

                    b.Property<bool?>("BoolGroupTrainer")
                        .HasColumnType("bit")
                        .HasColumnName("bool_group_trainer");

                    b.Property<bool?>("IsValid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("is_valid")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("VcSection")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_section");

                    b.Property<string>("VcTrainingTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_training_type_name");

                    b.HasKey("Id")
                        .HasName("code_training_type_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_training_type", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeUiControlType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("VcFuriaName")
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)")
                        .HasColumnName("vc_furia_name");

                    b.Property<string>("VcPleaseText")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("vc_please_text");

                    b.HasKey("Id")
                        .HasName("code_ui_control_type_pk");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_ui_control_type", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeUploadDocStatus", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("VcDocStatusName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_doc_status_name");

                    b.HasKey("Id")
                        .HasName("code_upload_doc_status_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_upload_doc_status", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeUploadDocType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<bool?>("BoolForCpo")
                        .HasColumnType("bit")
                        .HasColumnName("bool_for_cpo");

                    b.Property<bool?>("BoolValid")
                        .HasColumnType("bit")
                        .HasColumnName("bool_valid");

                    b.Property<bool>("BoolYearDependent")
                        .HasColumnType("bit")
                        .HasColumnName("bool_year_dependent");

                    b.Property<string>("VcDocTypeName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_doc_type_name");

                    b.Property<string>("VcDocTypeNameShort")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_doc_type_name_short");

                    b.HasKey("Id")
                        .HasName("code_upload_doc_type_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_upload_doc_type", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeValidityCheckTarget", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("VcName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("vc_name");

                    b.HasKey("Id")
                        .HasName("code_validity_check_target_pk");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_validity_check_target", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeVetArea", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool?>("BoolIsValid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bool_is_valid")
                        .HasDefaultValueSql("((1))");

                    b.Property<long?>("IntVetAreaCorrection")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_area_correction");

                    b.Property<long?>("IntVetAreaCorrectionParent")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_area_correction_parent");

                    b.Property<long?>("IntVetAreaNumber")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_area_number");

                    b.Property<long?>("IntVetGroupId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_group_id");

                    b.Property<long?>("IntVetListId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_list_id");

                    b.Property<string>("VcVetAreaCorrectionNotes")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_vet_area_correction_notes");

                    b.Property<string>("VcVetAreaName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_vet_area_name");

                    b.Property<string>("VcVetAreaNameEn")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_vet_area_name_en");

                    b.HasKey("Id")
                        .HasName("code_vet_area_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "IntVetAreaNumber" }, "ndx_code_vet_area");

                    b.ToTable("code_vet_area", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeVetGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool?>("BoolIsValid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bool_is_valid")
                        .HasDefaultValueSql("((1))");

                    b.Property<long?>("IntVetGroupCorrection")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_group_correction");

                    b.Property<long?>("IntVetGroupCorrectionParent")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_group_correction_parent");

                    b.Property<long?>("IntVetGroupNumber")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_group_number");

                    b.Property<long?>("IntVetListId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_list_id");

                    b.Property<string>("VcVetGroupCorrectionNotes")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_vet_group_correction_notes");

                    b.Property<string>("VcVetGroupName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_vet_group_name");

                    b.Property<string>("VcVetGroupNameEn")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_vet_group_name_en");

                    b.HasKey("Id")
                        .HasName("code_vet_group_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "VcVetGroupName" }, "ndx_code_vet_group");

                    b.ToTable("code_vet_group", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeVetList", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool?>("BoolIsValid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bool_is_valid")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("VcVetListName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_vet_list_name");

                    b.HasKey("Id")
                        .HasName("code_vet_list_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "VcVetListName" }, "ndx_code_vet_list");

                    b.ToTable("code_vet_list", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeVetProfession", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool?>("BoolIsValid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bool_is_valid")
                        .HasDefaultValueSql("((1))");

                    b.Property<long?>("IntVetAreaId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_area_id");

                    b.Property<long?>("IntVetGroupId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_group_id");

                    b.Property<long?>("IntVetListId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_list_id");

                    b.Property<long?>("IntVetProfessionCorrection")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_profession_correction");

                    b.Property<long?>("IntVetProfessionCorrectionParent")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_profession_correction_parent");

                    b.Property<long?>("IntVetProfessionNumber")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_profession_number");

                    b.Property<string>("VcVetProfessionCorrectionNotes")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_vet_profession_correction_notes");

                    b.Property<string>("VcVetProfessionName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("vc_vet_profession_name");

                    b.Property<string>("VcVetProfessionNameEn")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_vet_profession_name_en");

                    b.HasKey("Id")
                        .HasName("code_vet_profession_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "VcVetProfessionName" }, "ndx_code_vet_profession");

                    b.ToTable("code_vet_profession", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeVetSpeciality", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool?>("BoolIsValid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bool_is_valid")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("DtEndDateEvent")
                        .HasColumnType("date")
                        .HasColumnName("dt_end_date_event");

                    b.Property<DateTime?>("DtStartDateEvent")
                        .HasColumnType("date")
                        .HasColumnName("dt_start_date_event");

                    b.Property<long?>("IntSpecialityVqs")
                        .HasColumnType("bigint")
                        .HasColumnName("int_speciality_vqs");

                    b.Property<long?>("IntVetAreaId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_area_id");

                    b.Property<long?>("IntVetGroupId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_group_id");

                    b.Property<long?>("IntVetListId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_list_id");

                    b.Property<long?>("IntVetProfessionId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_profession_id");

                    b.Property<long?>("IntVetSpecialityCorrection")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_speciality_correction");

                    b.Property<long?>("IntVetSpecialityCorrectionParent")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_speciality_correction_parent");

                    b.Property<long?>("IntVetSpecialityNumber")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_speciality_number");

                    b.Property<string>("VcVetSpecialityCorrectionNotes")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_vet_speciality_correction_notes");

                    b.Property<string>("VcVetSpecialityName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_vet_speciality_name");

                    b.Property<string>("VcVetSpecialityNameEn")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_vet_speciality_name_en");

                    b.HasKey("Id")
                        .HasName("code_vet_speciality_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "VcVetSpecialityName" }, "ndx_code_vet_speciality");

                    b.ToTable("code_vet_speciality", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeVillageType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("VcVillageTypeName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("vc_village_type_name");

                    b.Property<string>("VcVillageTypeShortName")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("vc_village_type_short_name");

                    b.HasKey("Id")
                        .HasName("code_village_type_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "VcVillageTypeName" }, "ndx_code_village_type");

                    b.ToTable("code_village_type", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeVisitResult", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("VcVisitResultName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_visit_result_name");

                    b.HasKey("Id")
                        .HasName("code_visit_result_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "VcVisitResultName" }, "ndx_code_visit_result");

                    b.ToTable("code_visit_result", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.CodeWgdoiFunction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("VcWgdoiFunctionName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_wgdoi_function_name");

                    b.HasKey("Id")
                        .HasName("code_wgdoi_function_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("code_wgdoi_function", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.IscsIisclientdatum", b =>
                {
                    b.Property<int?>("IisCdata")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("iis_cdata")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("IisData")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("iis_data")
                        .HasDefaultValueSql("('0')");

                    b.Property<string>("IisLastRequest")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)")
                        .HasColumnName("iis_last_request")
                        .HasDefaultValueSql("('0')");

                    b.Property<string>("IisServerKey")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("iis_server_key")
                        .HasDefaultValueSql("('0')");

                    b.Property<string>("IisServerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("iis_server_name");

                    b.Property<string>("IisServerUrl")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("iis_server_url");

                    b.ToTable("iscs_iisclientdata", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.IscsIisserverdatum", b =>
                {
                    b.Property<string>("IisClient")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("iis_client");

                    b.Property<string>("IisClient0")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("iis_client0");

                    b.Property<string>("IisData")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("iis_data")
                        .HasDefaultValueSql("('0')");

                    b.Property<string>("IisLastCdata")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("iis_last_cdata")
                        .HasDefaultValueSql("('0')");

                    b.Property<string>("IisLastCrequest")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)")
                        .HasColumnName("iis_last_crequest")
                        .HasDefaultValueSql("('0')");

                    b.Property<string>("IisLastRequest")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)")
                        .HasColumnName("iis_last_request")
                        .HasDefaultValueSql("('0')");

                    b.ToTable("iscs_iisserverdata", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.MvRegisterClient", b =>
                {
                    b.Property<long?>("DocumentId")
                        .HasColumnType("bigint")
                        .HasColumnName("document_id");

                    b.Property<long?>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long?>("IntClientsCoursesId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_clients_courses_id");

                    b.Property<int?>("IntCourseFinishedYear")
                        .HasColumnType("int")
                        .HasColumnName("int_course_finished_year");

                    b.Property<long?>("IntCourseTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_type_id");

                    b.Property<long?>("IntEkkateId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_ekkate_id");

                    b.Property<long?>("IntLicenceNumber")
                        .HasColumnType("bigint")
                        .HasColumnName("int_licence_number");

                    b.Property<long?>("IntMunicipalityId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_municipality_id");

                    b.Property<long?>("IntOblId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_obl_id");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<long?>("IntSpecialityVqs")
                        .HasColumnType("bigint")
                        .HasColumnName("int_speciality_vqs");

                    b.Property<long?>("IntVetAreaNumber")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_area_number");

                    b.Property<long?>("IntVetProfessionNumber")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_profession_number");

                    b.Property<long?>("IntVetSpecialityNumber")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_speciality_number");

                    b.Property<string>("VcClientName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_client_name");

                    b.Property<string>("VcCourseTypeName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_course_type_name");

                    b.Property<string>("VcEgn")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_egn");

                    b.Property<string>("VcEgnType")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_egn_type");

                    b.Property<string>("VcEkkateName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_ekkate_name");

                    b.Property<string>("VcMunicipalityName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_municipality_name");

                    b.Property<string>("VcOblName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_obl_name");

                    b.Property<string>("VcProviderName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_provider_name");

                    b.Property<string>("VcSpecialityVqs")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_speciality_vqs");

                    b.Property<string>("VcVetAreaName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_vet_area_name");

                    b.Property<string>("VcVetProfessionName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_vet_profession_name");

                    b.Property<string>("VcVetSpecialityName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_vet_speciality_name");

                    b.ToTable("mv_register_clients", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.RefArchExpert", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntArchProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_arch_provider_id");

                    b.Property<long?>("IntExpertId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_expert_id");

                    b.HasKey("Id")
                        .HasName("ref_arch_experts_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "IntArchProviderId", "IntExpertId" }, "ref_arch_experts_provider_expert_key")
                        .IsUnique()
                        .HasFilter("([int_arch_provider_id] IS NOT NULL AND [int_expert_id] IS NOT NULL)");

                    b.ToTable("ref_arch_experts", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.RefArchExpertCommission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntArchProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_arch_provider_id");

                    b.Property<long?>("IntExpertCommissionId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_expert_commission_id");

                    b.HasKey("Id")
                        .HasName("ref_arch_expert_commissions_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "IntArchProviderId", "IntExpertCommissionId" }, "ref_arch_expert_commissions_provider_commission_key")
                        .IsUnique()
                        .HasFilter("([int_arch_provider_id] IS NOT NULL AND [int_expert_commission_id] IS NOT NULL)");

                    b.ToTable("ref_arch_expert_commissions", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.RefArchProcedureExpert", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("IntStartedProcedureId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_started_procedure_id");

                    b.Property<long?>("IntExpertId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_expert_id");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<long?>("IntVetArea")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_area");

                    b.HasKey("Id", "IntStartedProcedureId")
                        .HasName("ref_arch_procedure_experts_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id", "IntStartedProcedureId"), false);

                    b.ToTable("ref_arch_procedure_experts", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.RefArchProcedureExpertCommission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("IntStartedProcedureId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_started_procedure_id");

                    b.Property<long?>("IntExpertCommissionId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_expert_commission_id");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.HasKey("Id", "IntStartedProcedureId")
                        .HasName("ref_arch_procedure_expert_commissions_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id", "IntStartedProcedureId"), false);

                    b.HasIndex(new[] { "IntStartedProcedureId", "IntProviderId", "IntExpertCommissionId" }, "ref_arch_procedure_expert_commissions_provider_commission_key")
                        .IsUnique()
                        .HasFilter("([int_started_procedure_id] IS NOT NULL AND [int_provider_id] IS NOT NULL AND [int_expert_commission_id] IS NOT NULL)");

                    b.ToTable("ref_arch_procedure_expert_commissions", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.RefArchProcedureProceduresDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("IntStartedProcedureId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_started_procedure_id");

                    b.Property<long?>("IntExpertId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_expert_id");

                    b.Property<long?>("IntProceduresDocumentsId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_procedures_documents_id");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<string>("TxtProceduresDocumentsFile")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_procedures_documents_file");

                    b.Property<string>("TxtProceduresDocumentsNotes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_procedures_documents_notes");

                    b.HasKey("Id", "IntStartedProcedureId")
                        .HasName("ref_arch_procedure_procedures_documents_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id", "IntStartedProcedureId"), false);

                    b.ToTable("ref_arch_procedure_procedures_documents", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.RefArchProcedureProviderPremisesSpeciality", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("IntStartedProcedureId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_started_procedure_id");

                    b.Property<long?>("IntProviderPremiseId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_premise_id");

                    b.Property<long?>("IntProviderPremiseSpecialityCorrespondence")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_premise_speciality_correspondence");

                    b.Property<long?>("IntProviderPremiseSpecialityUsage")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_premise_speciality_usage");

                    b.Property<int?>("IntProviderSpecialityId")
                        .HasColumnType("int")
                        .HasColumnName("int_provider_speciality_id");

                    b.HasKey("Id", "IntStartedProcedureId")
                        .HasName("ref_arch_procedure_provider_premises_specialities_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id", "IntStartedProcedureId"), false);

                    b.HasIndex(new[] { "IntProviderPremiseId", "IntProviderSpecialityId" }, "ref_arch_procedure_prov_premises_specialities_int_provider_prem")
                        .IsUnique()
                        .HasFilter("([int_provider_premise_id] IS NOT NULL AND [int_provider_speciality_id] IS NOT NULL)");

                    b.ToTable("ref_arch_procedure_provider_premises_specialities", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.RefArchProceduresDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntArchProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_arch_provider_id");

                    b.Property<long?>("IntExpertId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_expert_id");

                    b.Property<long?>("IntProceduresDocumentsId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_procedures_documents_id");

                    b.Property<string>("TxtProceduresDocumentsFile")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_procedures_documents_file");

                    b.Property<string>("TxtProceduresDocumentsNotes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_procedures_documents_notes");

                    b.HasKey("Id")
                        .HasName("ref_arch_procedures_documents_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("ref_arch_procedures_documents", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.RefCandidateProviderPremisesSpeciality", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntProviderPremiseId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_premise_id");

                    b.Property<long?>("IntProviderPremiseSpecialityCorrespondence")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_premise_speciality_correspondence");

                    b.Property<long?>("IntProviderPremiseSpecialityUsage")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_premise_speciality_usage");

                    b.Property<int?>("IntProviderSpecialityId")
                        .HasColumnType("int")
                        .HasColumnName("int_provider_speciality_id");

                    b.HasKey("Id")
                        .HasName("ref_candidate_provider_premises_specialities_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "IntProviderPremiseId", "IntProviderSpecialityId" }, "ref_cand_prov_premises_specialities_int_provider_premise_id_key")
                        .IsUnique()
                        .HasFilter("([int_provider_premise_id] IS NOT NULL AND [int_provider_speciality_id] IS NOT NULL)");

                    b.ToTable("ref_candidate_provider_premises_specialities", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.RefCandidatesExpert", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntExpertId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_expert_id");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<long?>("IntVetArea")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_area");

                    b.HasKey("Id")
                        .HasName("ref_candidates_experts_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("ref_candidates_experts", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.RefCandidatesExpertCommission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntExpertCommissionId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_expert_commission_id");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.HasKey("Id")
                        .HasName("ref_candidates_expert_commissions_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "IntProviderId", "IntExpertCommissionId" }, "ref_candidates_expert_commissions_provider_commission_key")
                        .IsUnique()
                        .HasFilter("([int_provider_id] IS NOT NULL AND [int_expert_commission_id] IS NOT NULL)");

                    b.ToTable("ref_candidates_expert_commissions", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.RefCandidatesProceduresDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntExpertId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_expert_id");

                    b.Property<long?>("IntProceduresDocumentsId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_procedures_documents_id");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<string>("TxtProceduresDocumentsFile")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_procedures_documents_file");

                    b.Property<string>("TxtProceduresDocumentsNotes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_procedures_documents_notes");

                    b.HasKey("Id")
                        .HasName("ref_candidates_procedures_documents_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("ref_candidates_procedures_documents", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.RefCgCurricFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntCourseGroupId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_group_id");

                    b.Property<long>("IntCourseId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_id");

                    b.Property<long>("IntProviderSpecialitiesCurriculumId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_specialities_curriculum_id");

                    b.Property<bool?>("IsValid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("is_valid")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id")
                        .HasName("ref_cg_curric_files_pk");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("ref_cg_curric_files", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.RefClientsCourse", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("DtClientBirthDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_client_birth_date");

                    b.Property<DateTime?>("DtCourseFinished")
                        .HasColumnType("date")
                        .HasColumnName("dt_course_finished");

                    b.Property<long?>("IntAssignTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_assign_type_id");

                    b.Property<long?>("IntCfinishedTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_cfinished_type_id");

                    b.Property<int?>("IntClientGender")
                        .HasColumnType("int")
                        .HasColumnName("int_client_gender");

                    b.Property<long?>("IntClientId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_client_id");

                    b.Property<long?>("IntCourseGroupId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_group_id");

                    b.Property<long?>("IntEducationId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_education_id");

                    b.Property<int?>("IntEgnTypeId")
                        .HasColumnType("int")
                        .HasColumnName("int_egn_type_id");

                    b.Property<long?>("IntNationalityId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_nationality_id");

                    b.Property<long?>("IntQualLevel")
                        .HasColumnType("bigint")
                        .HasColumnName("int_qual_level");

                    b.Property<long?>("IntQualVetArea")
                        .HasColumnType("bigint")
                        .HasColumnName("int_qual_vet_area");

                    b.Property<long?>("IntVetAreaId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_area_id");

                    b.Property<long?>("IntVetSpecialityId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_speciality_id");

                    b.Property<string>("VcEgn")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_egn");

                    b.Property<string>("VcFamilyName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_family_name");

                    b.Property<string>("VcFirstName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_first_name");

                    b.Property<string>("VcSecondName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_second_name");

                    b.HasKey("Id")
                        .HasName("ref_clients_courses_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("ref_clients_courses", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.RefClientsCoursesDocumentsStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("Dt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("dt")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long>("IntClientCoursesDocumentsId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_client_courses_documents_id");

                    b.Property<long?>("IntClientId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_client_id");

                    b.Property<long?>("IntCourseGroup40Id")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_group40_id");

                    b.Property<long?>("IntCourseGroupId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_group_id");

                    b.Property<long>("IntDocumentStatus")
                        .HasColumnType("bigint")
                        .HasColumnName("int_document_status");

                    b.Property<long>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<long?>("IntSignContentId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_sign_content_id");

                    b.Property<long>("IntUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_user_id");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit")
                        .HasColumnName("is_valid");

                    b.Property<string>("VcNote")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_note");

                    b.HasKey("Id")
                        .HasName("ref_clients_courses_documents_status_pk");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("ref_clients_courses_documents_status", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.RefCourseDocumentType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntCodeCourseType")
                        .HasColumnType("bigint")
                        .HasColumnName("int_code_course_type");

                    b.Property<long?>("IntCodeDocumentType")
                        .HasColumnType("bigint")
                        .HasColumnName("int_code_document_type");

                    b.HasKey("Id")
                        .HasName("ref_course_document_type_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("ref_course_document_type", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.RefCourseGroupPremise", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("IntCourseGroupId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_group_id");

                    b.Property<long>("IntProviderPremiseId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_premise_id");

                    b.Property<long?>("IntTrainingTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_training_type_id");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit")
                        .HasColumnName("is_valid");

                    b.HasKey("Id")
                        .HasName("ref_course_group_premises_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("ref_course_group_premises", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.RefCourseTypeFrCurr", b =>
                {
                    b.Property<long>("IntCodeCourseTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("int_code_course_type_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IntCodeCourseTypeId"), 1L, 1);

                    b.Property<long>("IntCodeCourseFrCurrId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_code_course_fr_curr_id");

                    b.Property<bool?>("BoolValid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bool_valid")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("IntCodeCourseTypeId", "IntCodeCourseFrCurrId")
                        .HasName("ref_course_type_fr_curr_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("IntCodeCourseTypeId", "IntCodeCourseFrCurrId"), false);

                    b.ToTable("ref_course_type_fr_curr", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.RefDoctypeReqdoctype", b =>
                {
                    b.Property<long?>("IntDocTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_doc_type_id");

                    b.Property<long?>("IntRequestDocTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_request_doc_type_id");

                    b.HasIndex(new[] { "IntRequestDocTypeId", "IntDocTypeId" }, "ref_doctype_reqdoctype_uk")
                        .IsUnique()
                        .HasFilter("([int_request_doc_type_id] IS NOT NULL AND [int_doc_type_id] IS NOT NULL)");

                    b.ToTable("ref_doctype_reqdoctype", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.RefDocumentStatusLock", b =>
                {
                    b.Property<long>("IntDocumentStatusId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_document_status_id");

                    b.Property<int>("IntCodeDocumentStatusLocksId")
                        .HasColumnType("int")
                        .HasColumnName("int_code_document_status_locks_id");

                    b.Property<int>("IntCodeValidityCheckTargetId")
                        .HasColumnType("int")
                        .HasColumnName("int_code_validity_check_target_id");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit")
                        .HasColumnName("is_valid");

                    b.HasKey("IntDocumentStatusId", "IntCodeDocumentStatusLocksId", "IntCodeValidityCheckTargetId")
                        .HasName("ref_document_status_locks_pk");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("IntDocumentStatusId", "IntCodeDocumentStatusLocksId", "IntCodeValidityCheckTargetId"), false);

                    b.ToTable("ref_document_status_locks", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.RefExpertsCommission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool?>("BoolIsChairman")
                        .HasColumnType("bit")
                        .HasColumnName("bool_is_chairman");

                    b.Property<DateTime?>("DtExpertProtokolDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_expert_protokol_date");

                    b.Property<long?>("IntCommissionInstitutionType")
                        .HasColumnType("bigint")
                        .HasColumnName("int_commission_institution_type");

                    b.Property<long?>("IntExpCommId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_exp_comm_id");

                    b.Property<long?>("IntExpertId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_expert_id");

                    b.Property<string>("VcExpertInstitution")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_expert_institution");

                    b.Property<string>("VcExpertOccupation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_expert_occupation");

                    b.Property<string>("VcExpertProtokol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_expert_protokol");

                    b.HasKey("Id")
                        .HasName("ref_experts_commissions_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "IntExpertId", "IntExpCommId" }, "ref_experts_commissions_int_expert_id_key")
                        .IsUnique()
                        .HasFilter("([int_expert_id] IS NOT NULL AND [int_exp_comm_id] IS NOT NULL)");

                    b.ToTable("ref_experts_commissions", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.RefExpertsDoi", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntDoiCommId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_doi_comm_id");

                    b.Property<long?>("IntExpertId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_expert_id");

                    b.Property<long?>("IntWgdoiFunctionId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_wgdoi_function_id");

                    b.HasKey("Id")
                        .HasName("ref_experts_doi_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "IntExpertId", "IntDoiCommId" }, "ref_experts_doi_int_expert_id_key")
                        .IsUnique()
                        .HasFilter("([int_expert_id] IS NOT NULL AND [int_doi_comm_id] IS NOT NULL)");

                    b.ToTable("ref_experts_doi", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.RefExpertsType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntExpertId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_expert_id");

                    b.Property<long?>("IntExpertTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_expert_type_id");

                    b.Property<string>("VcPosition")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_position");

                    b.HasKey("Id")
                        .HasName("ref_experts_types_id_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "IntExpertId", "IntExpertTypeId" }, "ref_experts_types_int_expert_id_key")
                        .IsUnique()
                        .HasFilter("([int_expert_id] IS NOT NULL AND [int_expert_type_id] IS NOT NULL)");

                    b.ToTable("ref_experts_types", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.RefExpertsVetArea", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntExpertId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_expert_id");

                    b.Property<long?>("IntVetAreaId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_area_id");

                    b.HasKey("Id")
                        .HasName("ref_experts_vet_area_id_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "IntExpertId", "IntVetAreaId" }, "ref_experts_vet_area_int_expert_id_key")
                        .IsUnique()
                        .HasFilter("([int_expert_id] IS NOT NULL AND [int_vet_area_id] IS NOT NULL)");

                    b.ToTable("ref_experts_vet_area", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.RefFrCurrEdForm", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("IntCodeCourseEdForm")
                        .HasColumnType("bigint")
                        .HasColumnName("int_code_course_ed_form");

                    b.Property<long>("IntCodeCourseFrCurrId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_code_course_fr_curr_id");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit")
                        .HasColumnName("is_valid");

                    b.HasKey("Id")
                        .HasName("ref_fr_curr_ed_form_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("ref_fr_curr_ed_form", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.RefFrCurrEducLevel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("IntCodeCourseFrCurrId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_code_course_fr_curr_id");

                    b.Property<long>("IntCodeEducation")
                        .HasColumnType("bigint")
                        .HasColumnName("int_code_education");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit")
                        .HasColumnName("is_valid");

                    b.HasKey("Id")
                        .HasName("ref_fr_curr_educ_level_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("ref_fr_curr_educ_level", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.RefFrCurrQualLevel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("IntCodeCourseFrCurrId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_code_course_fr_curr_id");

                    b.Property<long>("IntCodeQualLevel")
                        .HasColumnType("bigint")
                        .HasColumnName("int_code_qual_level");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit")
                        .HasColumnName("is_valid");

                    b.HasKey("Id")
                        .HasName("ref_fr_curr_qual_level_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("ref_fr_curr_qual_level", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.RefMainExpert", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntExpertId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_expert_id");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<long?>("IntVetArea")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_area");

                    b.HasKey("Id")
                        .HasName("ref_main_experts_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("ref_main_experts", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.RefMainExpertCommission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntExpertCommissionId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_expert_commission_id");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.HasKey("Id")
                        .HasName("ref_main_expert_commissions_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "IntProviderId", "IntExpertCommissionId" }, "ref_main_expert_commissions_provider_commission_key")
                        .IsUnique()
                        .HasFilter("([int_provider_id] IS NOT NULL AND [int_expert_commission_id] IS NOT NULL)");

                    b.ToTable("ref_main_expert_commissions", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.RefProceduresDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntExpertId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_expert_id");

                    b.Property<long?>("IntProceduresDocumentsId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_procedures_documents_id");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<string>("TxtProceduresDocumentsFile")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_procedures_documents_file");

                    b.Property<string>("TxtProceduresDocumentsNotes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_procedures_documents_notes");

                    b.HasKey("Id")
                        .HasName("ref_procedures_documents_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("ref_procedures_documents", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.RefProcedureStep", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long?>("Iorder")
                        .HasColumnType("bigint")
                        .HasColumnName("iorder");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit")
                        .HasColumnName("is_valid");

                    b.Property<string>("Label")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("label");

                    b.Property<string>("LabelEn")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("label_en");

                    b.Property<string>("LabelReg")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("label_reg");

                    b.Property<string>("LabelRegEn")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("label_reg_en");

                    b.Property<long?>("ProcedureId")
                        .HasColumnType("bigint")
                        .HasColumnName("procedure_id");

                    b.Property<long?>("StepId")
                        .HasColumnType("bigint")
                        .HasColumnName("step_id");

                    b.HasKey("Id")
                        .HasName("ref_procedure_steps_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("ref_procedure_steps", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.RefProcedureStepStage", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long?>("Iorder")
                        .HasColumnType("bigint")
                        .HasColumnName("iorder");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit")
                        .HasColumnName("is_valid");

                    b.Property<string>("Label")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("label");

                    b.Property<long?>("ProcedureId")
                        .HasColumnType("bigint")
                        .HasColumnName("procedure_id");

                    b.Property<long?>("StageId")
                        .HasColumnType("bigint")
                        .HasColumnName("stage_id");

                    b.Property<long?>("StepId")
                        .HasColumnType("bigint")
                        .HasColumnName("step_id");

                    b.HasKey("Id")
                        .HasName("ref_procedure_step_stages_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("ref_procedure_step_stages", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.RefProviderPremisesSpeciality", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntProviderPremiseId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_premise_id");

                    b.Property<long?>("IntProviderPremiseSpecialityCorrespondence")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_premise_speciality_correspondence");

                    b.Property<long?>("IntProviderPremiseSpecialityUsage")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_premise_speciality_usage");

                    b.Property<int?>("IntProviderSpecialityId")
                        .HasColumnType("int")
                        .HasColumnName("int_provider_speciality_id");

                    b.HasKey("Id")
                        .HasName("ref_provider_premises_specialities_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "IntProviderPremiseId", "IntProviderSpecialityId" }, "ref_provider_premises_specialities_int_provider_premise_id_key")
                        .IsUnique()
                        .HasFilter("([int_provider_premise_id] IS NOT NULL AND [int_provider_speciality_id] IS NOT NULL)");

                    b.ToTable("ref_provider_premises_specialities", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.RefRequestDocStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int?>("IntProviderId")
                        .HasColumnType("int")
                        .HasColumnName("int_provider_id");

                    b.Property<int?>("IntRequestDocStatusId")
                        .HasColumnType("int")
                        .HasColumnName("int_request_doc_status_id");

                    b.Property<int?>("IntRequestId")
                        .HasColumnType("int")
                        .HasColumnName("int_request_id");

                    b.Property<DateTime?>("Ts")
                        .HasColumnType("datetime2")
                        .HasColumnName("ts");

                    b.HasKey("Id")
                        .HasName("ref_request_doc_status_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("ref_request_doc_status", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.RefRequestDocType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int?>("IntDocCount")
                        .HasColumnType("int")
                        .HasColumnName("int_doc_count");

                    b.Property<int?>("IntNapooRequestId")
                        .HasColumnType("int")
                        .HasColumnName("int_napoo_request_id");

                    b.Property<int?>("IntProviderId")
                        .HasColumnType("int")
                        .HasColumnName("int_provider_id");

                    b.Property<int?>("IntRequestDocTypeId")
                        .HasColumnType("int")
                        .HasColumnName("int_request_doc_type_id");

                    b.Property<int?>("IntRequestId")
                        .HasColumnType("int")
                        .HasColumnName("int_request_id");

                    b.HasKey("Id")
                        .HasName("ref_request_doc_type_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "IntRequestDocTypeId", "IntRequestId" }, "ref_request_doc_type_int_request_doc_type_id_int_request_i_key")
                        .IsUnique()
                        .HasFilter("([int_request_doc_type_id] IS NOT NULL AND [int_request_id] IS NOT NULL)");

                    b.ToTable("ref_request_doc_type", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.RefRoleAclAction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntAclActionId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_acl_action_id");

                    b.Property<long?>("IntRoleId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_role_id");

                    b.HasKey("Id")
                        .HasName("ref_role_acl_actions_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("ref_role_acl_actions", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.RefRoleGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntGroupId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_group_id");

                    b.Property<long?>("IntRoleId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_role_id");

                    b.HasKey("Id")
                        .HasName("ref_role_groups_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("ref_role_groups", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.RefRoleUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntRoleId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_role_id");

                    b.Property<long?>("IntUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_user_id");

                    b.HasKey("Id")
                        .HasName("ref_role_users_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("ref_role_users", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.RefTrainersCourse", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntCourseGroupId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_group_id");

                    b.Property<long?>("IntTrainerId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_trainer_id");

                    b.Property<long?>("IntTrainingTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_training_type_id");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit")
                        .HasColumnName("is_valid");

                    b.HasKey("Id")
                        .HasName("ref_trainers_courses_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("ref_trainers_courses", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.RefVetSpecialitiesNkpd", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntNkpdId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_nkpd_id");

                    b.Property<long?>("IntVetSpecialityId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_speciality_id");

                    b.HasKey("Id")
                        .HasName("ref_vet_specialities_nkpds_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "IntVetSpecialityId", "IntNkpdId" }, "unique_int_nkpd_speciality")
                        .IsUnique()
                        .HasFilter("([int_vet_speciality_id] IS NOT NULL AND [int_nkpd_id] IS NOT NULL)");

                    b.ToTable("ref_vet_specialities_nkpds", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.RefVisit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("DtVisitDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_visit_date");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<long?>("IntVisitNo")
                        .HasColumnType("bigint")
                        .HasColumnName("int_visit_no");

                    b.Property<long?>("IntVisitResultId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_visit_result_id");

                    b.Property<string>("VcVisitNotes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_visit_notes");

                    b.Property<DateTime?>("VcVisitProtDate")
                        .HasColumnType("date")
                        .HasColumnName("vc_visit_prot_date");

                    b.Property<string>("VcVisitProtNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_visit_prot_no");

                    b.Property<string>("VcVisitTheme")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_visit_theme");

                    b.HasKey("Id")
                        .HasName("ref_visits_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("ref_visits", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.RefVisitsExpert", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntExpertId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_expert_id");

                    b.Property<long?>("IntVisitId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_visit_id");

                    b.HasKey("Id")
                        .HasName("ref_visits_experts_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "IntVisitId", "IntExpertId" }, "ref_visits_experts_int_visit_id_key")
                        .IsUnique()
                        .HasFilter("([int_visit_id] IS NOT NULL AND [int_expert_id] IS NOT NULL)");

                    b.ToTable("ref_visits_experts", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.ReportClient", b =>
                {
                    b.Property<long?>("IntAssignTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_assign_type_id");

                    b.Property<int?>("IntBirthYear")
                        .HasColumnType("int")
                        .HasColumnName("int_birth_year");

                    b.Property<long?>("IntCfinishedTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_cfinished_type_id");

                    b.Property<int?>("IntClientGender")
                        .HasColumnType("int")
                        .HasColumnName("int_client_gender");

                    b.Property<int?>("IntClientStatus")
                        .HasColumnType("int")
                        .HasColumnName("int_client_status");

                    b.Property<int?>("IntCourseDuration")
                        .HasColumnType("int")
                        .HasColumnName("int_course_duration");

                    b.Property<long?>("IntCourseEdFormId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_ed_form_id");

                    b.Property<long?>("IntCourseFrCurrId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_fr_curr_id");

                    b.Property<long?>("IntCourseGroupId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_group_id");

                    b.Property<long?>("IntCourseMeasureTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_measure_type_id");

                    b.Property<long?>("IntCourseTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_type_id");

                    b.Property<long?>("IntEgnTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_egn_type_id");

                    b.Property<long?>("IntEkatteId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_ekatte_id");

                    b.Property<long?>("IntMunicipalityId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_municipality_id");

                    b.Property<long?>("IntNationalityId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_nationality_id");

                    b.Property<long?>("IntNutsId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_nuts_id");

                    b.Property<long?>("IntOblId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_obl_id");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<long?>("IntVetAreaId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_area_id");

                    b.Property<long?>("IntVetGroupId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_group_id");

                    b.Property<long?>("IntVetProfessionId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_profession_id");

                    b.Property<long?>("IntVetQualificationLevel")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_qualification_level");

                    b.Property<long?>("IntVetSpecialityId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_speciality_id");

                    b.Property<long?>("IntYear")
                        .HasColumnType("bigint")
                        .HasColumnName("int_year");

                    b.Property<decimal?>("NumCourseCost")
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("num_course_cost");

                    b.Property<string>("VcEgn")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_egn");

                    b.ToTable("report_clients", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.ReportCourse", b =>
                {
                    b.Property<long?>("IntAssignTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_assign_type_id");

                    b.Property<int?>("IntCourseDuration")
                        .HasColumnType("int")
                        .HasColumnName("int_course_duration");

                    b.Property<long?>("IntCourseEdFormId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_ed_form_id");

                    b.Property<long?>("IntCourseFrCurrId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_fr_curr_id");

                    b.Property<long?>("IntCourseGroupId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_group_id");

                    b.Property<long?>("IntCourseMeasureTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_measure_type_id");

                    b.Property<long?>("IntCourseStatusId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_status_id");

                    b.Property<long?>("IntCourseTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_type_id");

                    b.Property<long?>("IntEkatteId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_ekatte_id");

                    b.Property<long?>("IntMunicipalityId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_municipality_id");

                    b.Property<long?>("IntNutsId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_nuts_id");

                    b.Property<long?>("IntOblId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_obl_id");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<long?>("IntVetAreaId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_area_id");

                    b.Property<long?>("IntVetGroupId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_group_id");

                    b.Property<long?>("IntVetProfessionId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_profession_id");

                    b.Property<long?>("IntVetQualificationLevel")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_qualification_level");

                    b.Property<long?>("IntVetSpecialityId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_speciality_id");

                    b.Property<long?>("IntYear")
                        .HasColumnType("bigint")
                        .HasColumnName("int_year");

                    b.Property<decimal?>("NumCourseCost")
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("num_course_cost");

                    b.ToTable("report_courses", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.ReportCurriculum", b =>
                {
                    b.Property<long?>("IntEkatteId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_ekatte_id");

                    b.Property<long?>("IntMunicipalityId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_municipality_id");

                    b.Property<long?>("IntNutsId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_nuts_id");

                    b.Property<long?>("IntOblId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_obl_id");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<long?>("IntProviderOwnershipId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_ownership_id");

                    b.Property<long?>("IntSpecialityCurriculumUpdateReasonId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_speciality_curriculum_update_reason_id");

                    b.Property<long?>("IntSpecialityId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_speciality_id");

                    b.Property<long?>("IntVetAreaId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_area_id");

                    b.Property<long?>("IntVetGroupId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_group_id");

                    b.Property<long?>("IntVetProfessionId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_profession_id");

                    b.Property<long?>("IntVetQualificationLevel")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_qualification_level");

                    b.Property<long?>("IntYear")
                        .HasColumnType("bigint")
                        .HasColumnName("int_year");

                    b.ToTable("report_curricula", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.ReportPremise", b =>
                {
                    b.Property<long?>("IntEkatteId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_ekatte_id");

                    b.Property<long?>("IntMunicipalityId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_municipality_id");

                    b.Property<long?>("IntNutsId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_nuts_id");

                    b.Property<long?>("IntOblId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_obl_id");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<long?>("IntProviderOwnershipId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_ownership_id");

                    b.Property<int?>("IntProviderPremiseNo")
                        .HasColumnType("int")
                        .HasColumnName("int_provider_premise_no");

                    b.Property<long?>("IntProviderPremiseSpecialityCorrespondence")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_premise_speciality_correspondence");

                    b.Property<long?>("IntProviderPremiseStatus")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_premise_status");

                    b.Property<int?>("IntSpecialityId")
                        .HasColumnType("int")
                        .HasColumnName("int_speciality_id");

                    b.Property<long?>("IntYear")
                        .HasColumnType("bigint")
                        .HasColumnName("int_year");

                    b.Property<string>("VcProviderOwner")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_owner");

                    b.ToTable("report_premises", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.ReportProvider", b =>
                {
                    b.Property<long?>("IntEkatteId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_ekatte_id");

                    b.Property<long?>("IntLicenceNumber")
                        .HasColumnType("bigint")
                        .HasColumnName("int_licence_number");

                    b.Property<long?>("IntMunicipalityId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_municipality_id");

                    b.Property<long?>("IntNumClientsA")
                        .HasColumnType("bigint")
                        .HasColumnName("int_num_clients_a");

                    b.Property<long?>("IntNumClientsB")
                        .HasColumnType("bigint")
                        .HasColumnName("int_num_clients_b");

                    b.Property<long?>("IntNumClientsC")
                        .HasColumnType("bigint")
                        .HasColumnName("int_num_clients_c");

                    b.Property<long?>("IntNumCoursesA")
                        .HasColumnType("bigint")
                        .HasColumnName("int_num_courses_a");

                    b.Property<long?>("IntNumCoursesB")
                        .HasColumnType("bigint")
                        .HasColumnName("int_num_courses_b");

                    b.Property<long?>("IntNutsId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_nuts_id");

                    b.Property<long?>("IntOblId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_obl_id");

                    b.Property<string>("IntProviderBulstat")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("int_provider_bulstat");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<long?>("IntProviderOwnershipId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_ownership_id");

                    b.Property<long?>("IntYear")
                        .HasColumnType("bigint")
                        .HasColumnName("int_year");

                    b.Property<string>("VcProviderOwner")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_owner");

                    b.ToTable("report_providers", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.ReportTrainersQualification", b =>
                {
                    b.Property<int?>("IntBirthYear")
                        .HasColumnType("int")
                        .HasColumnName("int_birth_year");

                    b.Property<long?>("IntEgnTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_egn_type_id");

                    b.Property<long?>("IntEkatteId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_ekatte_id");

                    b.Property<long?>("IntGenderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_gender_id");

                    b.Property<long?>("IntMunicipalityId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_municipality_id");

                    b.Property<long?>("IntNationalityId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_nationality_id");

                    b.Property<long?>("IntNutsId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_nuts_id");

                    b.Property<long?>("IntOblId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_obl_id");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<long?>("IntProviderOwnershipId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_ownership_id");

                    b.Property<int?>("IntQualificationDuration")
                        .HasColumnType("int")
                        .HasColumnName("int_qualification_duration");

                    b.Property<long?>("IntQualificationTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_qualification_type_id");

                    b.Property<long?>("IntTcontractTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_tcontract_type_id");

                    b.Property<long?>("IntTqualificationTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_tqualification_type_id");

                    b.Property<long?>("IntVetAreaId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_area_id");

                    b.Property<long?>("IntVetGroupId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_group_id");

                    b.Property<long?>("IntVetProfessionId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_profession_id");

                    b.Property<long?>("IntYear")
                        .HasColumnType("bigint")
                        .HasColumnName("int_year");

                    b.Property<string>("VcEgn")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_egn");

                    b.ToTable("report_trainers_qualification", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.Ret", b =>
                {
                    b.Property<bool?>("Column")
                        .HasColumnType("bit")
                        .HasColumnName("?column?");

                    b.ToTable("ret", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.SysAcl", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("VcAcl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_acl");

                    b.Property<string>("VcItemName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_item_name");

                    b.Property<string>("VcObjectManager")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_object_manager");

                    b.HasKey("Id")
                        .HasName("sys_acl_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("sys_acl", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.SysLock", b =>
                {
                    b.Property<string>("LockId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("lock_id");

                    b.Property<string>("SessionId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("session_id");

                    b.Property<DateTime?>("Ts")
                        .HasColumnType("datetime2")
                        .HasColumnName("ts");

                    b.HasIndex(new[] { "LockId" }, "i_sys_locks_lock_id");

                    b.HasIndex(new[] { "SessionId" }, "i_sys_locks_session_id");

                    b.HasIndex(new[] { "Ts" }, "i_sys_locks_ts");

                    b.ToTable("sys_locks", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.SysMailLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("DtMailDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_mail_date");

                    b.Property<int?>("IntMailType")
                        .HasColumnType("int")
                        .HasColumnName("int_mail_type");

                    b.Property<int?>("IntProviderId")
                        .HasColumnType("int")
                        .HasColumnName("int_provider_id");

                    b.Property<int?>("IntUserId")
                        .HasColumnType("int")
                        .HasColumnName("int_user_id");

                    b.Property<string>("VcMailText")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_mail_text");

                    b.HasKey("Id")
                        .HasName("sys_mail_log_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("sys_mail_log", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.SysOperationLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("DtDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_date_time");

                    b.Property<long?>("IntOperationId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_operation_id");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<long?>("IntUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_user_id");

                    b.Property<string>("VcAdditionalInfo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_additional_info");

                    b.HasKey("Id")
                        .HasName("sys_operation_log_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("sys_operation_log", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.SysSignLog", b =>
                {
                    b.Property<DateTime>("DtEvent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_event")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntClientId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_client_id");

                    b.Property<long?>("IntCourseGroup")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_group");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<long?>("IntUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_user_id");

                    b.Property<string>("VcCert")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_cert");

                    b.Property<string>("VcCertEmail")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("vc_cert_email");

                    b.Property<string>("VcCertValidFrom")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_cert_valid_from");

                    b.Property<string>("VcCertValidTo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_cert_valid_to");

                    b.Property<string>("VcError")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("vc_error");

                    b.Property<string>("VcIdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_id_number");

                    b.ToTable("sys_sign_log", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.Systransliterate", b =>
                {
                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Vcletterbg")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("vcletterbg");

                    b.Property<string>("Vcletterlat")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("vcletterlat");

                    b.ToTable("systransliterate", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbAclAction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("VcActionName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_action_name");

                    b.HasKey("Id")
                        .HasName("tb_acl_actions_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_acl_actions", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbAnnualInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("DtTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_timestamp")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<int?>("IntStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("int_status")
                        .HasDefaultValueSql("((0))");

                    b.Property<long>("IntYear")
                        .HasColumnType("bigint")
                        .HasColumnName("int_year");

                    b.Property<string>("VcEmail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_email");

                    b.Property<string>("VcName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_name");

                    b.Property<string>("VcPhone")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_phone");

                    b.Property<string>("VcPosition")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_position");

                    b.HasKey("Id")
                        .HasName("tb_annual_info_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "IntYear", "IntProviderId" }, "tb_annual_info_int_year_int_provider_id_key")
                        .IsUnique()
                        .HasFilter("([int_year] IS NOT NULL AND [int_provider_id] IS NOT NULL)");

                    b.ToTable("tb_annual_info", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbArchProcedureProvider", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("IntStartedProcedureId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_started_procedure_id");

                    b.Property<bool?>("BoolIsBrra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bool_is_brra")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("DtFilingSystemDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_filing_system_date");

                    b.Property<DateTime?>("DtLicenceData")
                        .HasColumnType("date")
                        .HasColumnName("dt_licence_data");

                    b.Property<long?>("IntCodeCpoManagementVersion")
                        .HasColumnType("bigint")
                        .HasColumnName("int_code_cpo_management_version");

                    b.Property<long?>("IntEkatteId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_ekatte_id");

                    b.Property<long?>("IntLicenceNumber")
                        .HasColumnType("bigint")
                        .HasColumnName("int_licence_number");

                    b.Property<int?>("IntLicenceProtNo")
                        .HasColumnType("int")
                        .HasColumnName("int_licence_prot_no");

                    b.Property<long?>("IntLocalGroupId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_local_group_id");

                    b.Property<long?>("IntOperationId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_operation_id");

                    b.Property<long?>("IntProcedureTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_procedure_type_id");

                    b.Property<string>("IntProviderBulstat")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("int_provider_bulstat");

                    b.Property<long?>("IntProviderContactPersEkatteId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_contact_pers_ekatte_id");

                    b.Property<long?>("IntProviderOwnershipId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_ownership_id");

                    b.Property<long?>("IntProviderRegistrationId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_registration_id");

                    b.Property<long?>("IntProviderStatusId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_status_id");

                    b.Property<long?>("IntReceiveTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_receive_type_id");

                    b.Property<long?>("IntStartedProcedureProgress")
                        .HasColumnType("bigint")
                        .HasColumnName("int_started_procedure_progress");

                    b.Property<bool?>("IsReturned")
                        .HasColumnType("bit")
                        .HasColumnName("is_returned");

                    b.Property<long?>("ProcedureId")
                        .HasColumnType("bigint")
                        .HasColumnName("procedure_id");

                    b.Property<long?>("StageId")
                        .HasColumnType("bigint")
                        .HasColumnName("stage_id");

                    b.Property<long?>("StepId")
                        .HasColumnType("bigint")
                        .HasColumnName("step_id");

                    b.Property<DateTime?>("Ts")
                        .HasColumnType("datetime2")
                        .HasColumnName("ts");

                    b.Property<string>("VcFilingSystemNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_filing_system_number");

                    b.Property<string>("VcProviderAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_address");

                    b.Property<string>("VcProviderContactPers")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_contact_pers");

                    b.Property<string>("VcProviderContactPersAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_contact_pers_address");

                    b.Property<string>("VcProviderContactPersEmail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_contact_pers_email");

                    b.Property<string>("VcProviderContactPersFax")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_contact_pers_fax");

                    b.Property<string>("VcProviderContactPersPhone1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_contact_pers_phone1");

                    b.Property<string>("VcProviderContactPersPhone2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_contact_pers_phone2");

                    b.Property<string>("VcProviderContactPersZipcode")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("vc_provider_contact_pers_zipcode");

                    b.Property<string>("VcProviderEmail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_email");

                    b.Property<string>("VcProviderFax")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_fax");

                    b.Property<string>("VcProviderManager")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_manager");

                    b.Property<string>("VcProviderName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_name");

                    b.Property<string>("VcProviderOwner")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_owner");

                    b.Property<string>("VcProviderPhone1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_phone1");

                    b.Property<string>("VcProviderPhone2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_phone2");

                    b.Property<string>("VcProviderProfile")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_provider_profile");

                    b.Property<string>("VcProviderWeb")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_web");

                    b.Property<string>("VcZipCode")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("vc_zip_code");

                    b.HasKey("Id", "IntStartedProcedureId")
                        .HasName("tb_arch_procedure_providers_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id", "IntStartedProcedureId"), false);

                    b.ToTable("tb_arch_procedure_providers", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbArchProcedureProviderPremise", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("IntStartedProcedureId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_started_procedure_id");

                    b.Property<bool?>("BoolIsVisited")
                        .HasColumnType("bit")
                        .HasColumnName("bool_is_visited");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<long?>("IntProviderPremiseEkatte")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_premise_ekatte");

                    b.Property<int?>("IntProviderPremiseNo")
                        .HasColumnType("int")
                        .HasColumnName("int_provider_premise_no");

                    b.Property<long?>("IntProviderPremiseStatus")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_premise_status");

                    b.Property<string>("TxtProviderPremiseAddress")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_provider_premise_address");

                    b.Property<string>("TxtProviderPremiseName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_provider_premise_name");

                    b.Property<string>("TxtProviderPremiseNotes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_provider_premise_notes");

                    b.HasKey("Id", "IntStartedProcedureId")
                        .HasName("tb_arch_procedure_provider_premises_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id", "IntStartedProcedureId"), false);

                    b.ToTable("tb_arch_procedure_provider_premises", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbArchProcedureProviderPremisesRoom", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("IntStartedProcedureId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_started_procedure_id");

                    b.Property<long?>("IntPremiseId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_premise_id");

                    b.Property<int?>("IntProviderPremiseRoomArea")
                        .HasColumnType("int")
                        .HasColumnName("int_provider_premise_room_area");

                    b.Property<int?>("IntProviderPremiseRoomNo")
                        .HasColumnType("int")
                        .HasColumnName("int_provider_premise_room_no");

                    b.Property<long?>("IntProviderPremiseRoomType")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_premise_room_type");

                    b.Property<long?>("IntProviderPremiseRoomUsage")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_premise_room_usage");

                    b.Property<int?>("IntProviderPremiseRoomWorkplaces")
                        .HasColumnType("int")
                        .HasColumnName("int_provider_premise_room_workplaces");

                    b.Property<string>("TxtProviderPremiseRoomEquipment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_provider_premise_room_equipment");

                    b.Property<string>("TxtProviderPremiseRoomName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_provider_premise_room_name");

                    b.HasKey("Id", "IntStartedProcedureId")
                        .HasName("tb_arch_procedure_provider_premises_rooms_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id", "IntStartedProcedureId"), false);

                    b.ToTable("tb_arch_procedure_provider_premises_rooms", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbArchProcedureProvidersCipoManagement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("IntStartedProcedureId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_started_procedure_id");

                    b.Property<long?>("IntCipoManagementId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_cipo_management_id");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<string>("TxtCipoManagementNotes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_cipo_management_notes");

                    b.HasKey("Id", "IntStartedProcedureId")
                        .HasName("tb_arch_procedure_providers_cipo_management_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id", "IntStartedProcedureId"), false);

                    b.ToTable("tb_arch_procedure_providers_cipo_management", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbArchProcedureProvidersCpoManagement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("IntStartedProcedureId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_started_procedure_id");

                    b.Property<long?>("IntCpoManagementId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_cpo_management_id");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<string>("TxtCpoManagementNotes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_cpo_management_notes");

                    b.HasKey("Id", "IntStartedProcedureId")
                        .HasName("tb_arch_procedure_providers_cpo_management_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id", "IntStartedProcedureId"), false);

                    b.ToTable("tb_arch_procedure_providers_cpo_management", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbArchProcedureProvidersDocumentsManagement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("IntStartedProcedureId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_started_procedure_id");

                    b.Property<long?>("IntDocumentsManagementId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_documents_management_id");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<DateTime?>("TsDocument")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("ts_document")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("TxtDocumentsManagementFile")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_documents_management_file");

                    b.Property<string>("TxtDocumentsManagementTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_documents_management_title");

                    b.HasKey("Id", "IntStartedProcedureId")
                        .HasName("tb_arch_procedure_providers_documents_management_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id", "IntStartedProcedureId"), false);

                    b.ToTable("tb_arch_procedure_providers_documents_management", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbArchProcedureProviderSpecialitiesCurriculum", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("IntStartedProcedureId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_started_procedure_id");

                    b.Property<bool?>("BoolIsUpdated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bool_is_updated")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("DtUpdateDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_update_date");

                    b.Property<long?>("IntProcedureProviderSpecialityId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_procedure_provider_speciality_id");

                    b.Property<long?>("IntSpecialityCurriculumUpdateReasonId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_speciality_curriculum_update_reason_id");

                    b.Property<string>("OidFile")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("oid_file");

                    b.Property<string>("VcFileName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_file_name");

                    b.HasKey("Id", "IntStartedProcedureId")
                        .HasName("tb_arch_procedure_provider_specialities_curriculum_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id", "IntStartedProcedureId"), false);

                    b.ToTable("tb_arch_procedure_provider_specialities_curriculum", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbArchProcedureProvidersSpeciality", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("IntStartedProcedureId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_started_procedure_id");

                    b.Property<bool?>("BoolIsAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bool_is_added")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("BoolIsApproved")
                        .HasColumnType("bit")
                        .HasColumnName("bool_is_approved");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<long?>("IntVetSpecialityId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_speciality_id");

                    b.Property<string>("TxtSpecialityFile")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_speciality_file");

                    b.Property<string>("TxtSpecialityNotes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_speciality_notes");

                    b.HasKey("Id", "IntStartedProcedureId")
                        .HasName("tb_arch_procedure_providers_specialities_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id", "IntStartedProcedureId"), false);

                    b.ToTable("tb_arch_procedure_providers_specialities", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbArchProcedureTrainer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("IntStartedProcedureId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_started_procedure_id");

                    b.Property<bool?>("BoolIsAndragog")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bool_is_andragog")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("DtTcontractDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_tcontract_date");

                    b.Property<int?>("IntBirthYear")
                        .HasColumnType("int")
                        .HasColumnName("int_birth_year");

                    b.Property<long?>("IntEducationId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_education_id");

                    b.Property<long?>("IntEgnTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_egn_type_id");

                    b.Property<long?>("IntGenderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_gender_id");

                    b.Property<long?>("IntNationalityId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_nationality_id");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<long?>("IntTcontractTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_tcontract_type_id");

                    b.Property<string>("TxtEducationAcademicNotes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_education_academic_notes");

                    b.Property<string>("TxtEducationCertificateNotes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_education_certificate_notes");

                    b.Property<string>("TxtEducationSpecialityNotes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_education_speciality_notes");

                    b.Property<string>("VcEgn")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_egn");

                    b.Property<string>("VcEmail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_email");

                    b.Property<string>("VcTrainerFamilyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_trainer_family_name");

                    b.Property<string>("VcTrainerFirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_trainer_first_name");

                    b.Property<string>("VcTrainerSecondName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_trainer_second_name");

                    b.HasKey("Id", "IntStartedProcedureId")
                        .HasName("tb_arch_procedure_trainers_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id", "IntStartedProcedureId"), false);

                    b.HasIndex(new[] { "IntProviderId", "VcEgn", "IntStartedProcedureId" }, "tb_arch_procedure_trainers_int_provider_egn_key")
                        .IsUnique()
                        .HasFilter("([int_provider_id] IS NOT NULL AND [vc_egn] IS NOT NULL AND [int_started_procedure_id] IS NOT NULL)");

                    b.ToTable("tb_arch_procedure_trainers", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbArchProcedureTrainerDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("IntStartedProcedureId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_started_procedure_id");

                    b.Property<long?>("IntTrainerId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_trainer_id");

                    b.Property<string>("TxtDocumentsManagementFile")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_documents_management_file");

                    b.Property<string>("TxtDocumentsManagementTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_documents_management_title");

                    b.HasKey("Id", "IntStartedProcedureId")
                        .HasName("tb_arch_procedure_trainer_documents_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id", "IntStartedProcedureId"), false);

                    b.ToTable("tb_arch_procedure_trainer_documents", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbArchProcedureTrainerProfile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("IntStartedProcedureId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_started_procedure_id");

                    b.Property<bool?>("BoolVetAreaPractice")
                        .HasColumnType("bit")
                        .HasColumnName("bool_vet_area_practice");

                    b.Property<bool?>("BoolVetAreaQualified")
                        .HasColumnType("bit")
                        .HasColumnName("bool_vet_area_qualified");

                    b.Property<bool?>("BoolVetAreaTheory")
                        .HasColumnType("bit")
                        .HasColumnName("bool_vet_area_theory");

                    b.Property<long?>("IntTrainerId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_trainer_id");

                    b.Property<long?>("IntVetAreaId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_area_id");

                    b.Property<long?>("IntVetSpecialityId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_speciality_id");

                    b.HasKey("Id", "IntStartedProcedureId")
                        .HasName("tb_arch_procedure_trainer_profiles_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id", "IntStartedProcedureId"), false);

                    b.HasIndex(new[] { "IntTrainerId", "IntVetAreaId", "IntVetSpecialityId" }, "tb_arch_procedure_trainer_id_int_vet_speciality_id_key")
                        .IsUnique()
                        .HasFilter("([int_trainer_id] IS NOT NULL AND [int_vet_area_id] IS NOT NULL AND [int_vet_speciality_id] IS NOT NULL)");

                    b.ToTable("tb_arch_procedure_trainer_profiles", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbArchProcedureTrainerQualification", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("IntStartedProcedureId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_started_procedure_id");

                    b.Property<DateTime?>("DtStartDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_start_date");

                    b.Property<long?>("IntProfessionId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_profession_id");

                    b.Property<int?>("IntQualificationDuration")
                        .HasColumnType("int")
                        .HasColumnName("int_qualification_duration");

                    b.Property<long?>("IntQualificationTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_qualification_type_id");

                    b.Property<long?>("IntTqualificationTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_tqualification_type_id");

                    b.Property<long?>("IntTrainerId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_trainer_id");

                    b.Property<string>("TxtQualificationName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_qualification_name");

                    b.HasKey("Id", "IntStartedProcedureId")
                        .HasName("tb_arch_procedure_trainer_qualifications_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id", "IntStartedProcedureId"), false);

                    b.ToTable("tb_arch_procedure_trainer_qualifications", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbArchProvider", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("DtDecisionDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_decision_date");

                    b.Property<long?>("IntCandidateTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_candidate_type_id");

                    b.Property<long?>("IntEkatteId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_ekatte_id");

                    b.Property<long?>("IntLicenceNumber")
                        .HasColumnType("bigint")
                        .HasColumnName("int_licence_number");

                    b.Property<long?>("IntLocalGroupId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_local_group_id");

                    b.Property<long?>("IntOperationId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_operation_id");

                    b.Property<string>("IntProviderBulstat")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("int_provider_bulstat");

                    b.Property<long?>("IntProviderContactPersEkatteId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_contact_pers_ekatte_id");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<long?>("IntProviderNo")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_no");

                    b.Property<long?>("IntProviderOwnershipId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_ownership_id");

                    b.Property<long?>("IntProviderStatusId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_status_id");

                    b.Property<string>("VcProviderAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_address");

                    b.Property<string>("VcProviderContactPers")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_contact_pers");

                    b.Property<string>("VcProviderContactPersAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_contact_pers_address");

                    b.Property<string>("VcProviderContactPersEmail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_contact_pers_email");

                    b.Property<string>("VcProviderContactPersFax")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_contact_pers_fax");

                    b.Property<string>("VcProviderContactPersPhone1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_contact_pers_phone1");

                    b.Property<string>("VcProviderContactPersPhone2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_contact_pers_phone2");

                    b.Property<string>("VcProviderContactPersZipcode")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("vc_provider_contact_pers_zipcode");

                    b.Property<string>("VcProviderEmail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_email");

                    b.Property<string>("VcProviderFax")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_fax");

                    b.Property<string>("VcProviderManager")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_manager");

                    b.Property<string>("VcProviderOwner")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_owner");

                    b.Property<string>("VcProviderPhone1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_phone1");

                    b.Property<string>("VcProviderPhone2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_phone2");

                    b.Property<string>("VcProviderWeb")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_web");

                    b.Property<string>("VcZipCode")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("vc_zip_code");

                    b.HasKey("Id")
                        .HasName("tb_arch_providers_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "IntProviderBulstat" }, "tb_arch_providers_int_provider_bulstat_key")
                        .IsUnique()
                        .HasFilter("([int_provider_bulstat] IS NOT NULL)");

                    b.HasIndex(new[] { "IntProviderNo", "DtDecisionDate" }, "tb_arch_providers_int_provider_no_key")
                        .IsUnique()
                        .HasFilter("([int_provider_no] IS NOT NULL AND [dt_decision_date] IS NOT NULL)");

                    b.ToTable("tb_arch_providers", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbCandidateProvider", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool?>("BoolIsBrra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bool_is_brra")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("DtFilingSystemDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_filing_system_date");

                    b.Property<DateTime?>("DtLicenceData")
                        .HasColumnType("date")
                        .HasColumnName("dt_licence_data");

                    b.Property<long?>("IntCandidateTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_candidate_type_id");

                    b.Property<long?>("IntCodeCpoManagementVersion")
                        .HasColumnType("bigint")
                        .HasColumnName("int_code_cpo_management_version");

                    b.Property<long?>("IntEkatteId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_ekatte_id");

                    b.Property<long?>("IntLicenceNumber")
                        .HasColumnType("bigint")
                        .HasColumnName("int_licence_number");

                    b.Property<int?>("IntLicenceProtNo")
                        .HasColumnType("int")
                        .HasColumnName("int_licence_prot_no");

                    b.Property<long?>("IntLocalGroupId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_local_group_id");

                    b.Property<long?>("IntOperationId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_operation_id");

                    b.Property<string>("IntProviderBulstat")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("int_provider_bulstat");

                    b.Property<long?>("IntProviderContactPersEkatteId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_contact_pers_ekatte_id");

                    b.Property<long?>("IntProviderOwnershipId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_ownership_id");

                    b.Property<long?>("IntProviderRegistrationId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_registration_id");

                    b.Property<long?>("IntProviderStatusId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_status_id");

                    b.Property<long?>("IntReceiveTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_receive_type_id");

                    b.Property<long?>("IntStartedProcedureProgress")
                        .HasColumnType("bigint")
                        .HasColumnName("int_started_procedure_progress");

                    b.Property<long?>("IntStartedProcedures")
                        .HasColumnType("bigint")
                        .HasColumnName("int_started_procedures");

                    b.Property<bool?>("IsReturned")
                        .HasColumnType("bit")
                        .HasColumnName("is_returned");

                    b.Property<long?>("ProcedureId")
                        .HasColumnType("bigint")
                        .HasColumnName("procedure_id");

                    b.Property<long?>("StageId")
                        .HasColumnType("bigint")
                        .HasColumnName("stage_id");

                    b.Property<long?>("StepId")
                        .HasColumnType("bigint")
                        .HasColumnName("step_id");

                    b.Property<string>("VcFilingSystemNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_filing_system_number");

                    b.Property<string>("VcProviderAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_address");

                    b.Property<string>("VcProviderContactPers")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_contact_pers");

                    b.Property<string>("VcProviderContactPersAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_contact_pers_address");

                    b.Property<string>("VcProviderContactPersEmail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_contact_pers_email");

                    b.Property<string>("VcProviderContactPersFax")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_contact_pers_fax");

                    b.Property<string>("VcProviderContactPersPhone1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_contact_pers_phone1");

                    b.Property<string>("VcProviderContactPersPhone2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_contact_pers_phone2");

                    b.Property<string>("VcProviderContactPersZipcode")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("vc_provider_contact_pers_zipcode");

                    b.Property<string>("VcProviderEmail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_email");

                    b.Property<string>("VcProviderFax")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_fax");

                    b.Property<string>("VcProviderManager")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_manager");

                    b.Property<string>("VcProviderName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_name");

                    b.Property<string>("VcProviderOwner")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_owner");

                    b.Property<string>("VcProviderPhone1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_phone1");

                    b.Property<string>("VcProviderPhone2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_phone2");

                    b.Property<string>("VcProviderProfile")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_provider_profile");

                    b.Property<string>("VcProviderWeb")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_web");

                    b.Property<string>("VcZipCode")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("vc_zip_code");

                    b.HasKey("Id")
                        .HasName("tb_candidate_providers_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_candidate_providers", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbCandidateProviderPremise", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool?>("BoolIsVisited")
                        .HasColumnType("bit")
                        .HasColumnName("bool_is_visited");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<long?>("IntProviderPremiseEkatte")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_premise_ekatte");

                    b.Property<int?>("IntProviderPremiseNo")
                        .HasColumnType("int")
                        .HasColumnName("int_provider_premise_no");

                    b.Property<long?>("IntProviderPremiseStatus")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_premise_status");

                    b.Property<string>("TxtProviderPremiseAddress")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_provider_premise_address");

                    b.Property<string>("TxtProviderPremiseName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_provider_premise_name");

                    b.Property<string>("TxtProviderPremiseNotes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_provider_premise_notes");

                    b.HasKey("Id")
                        .HasName("tb_candidate_provider_premises_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_candidate_provider_premises", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbCandidateProviderPremisesRoom", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntPremiseId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_premise_id");

                    b.Property<int?>("IntProviderPremiseRoomArea")
                        .HasColumnType("int")
                        .HasColumnName("int_provider_premise_room_area");

                    b.Property<int?>("IntProviderPremiseRoomNo")
                        .HasColumnType("int")
                        .HasColumnName("int_provider_premise_room_no");

                    b.Property<long?>("IntProviderPremiseRoomType")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_premise_room_type");

                    b.Property<long?>("IntProviderPremiseRoomUsage")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_premise_room_usage");

                    b.Property<int?>("IntProviderPremiseRoomWorkplaces")
                        .HasColumnType("int")
                        .HasColumnName("int_provider_premise_room_workplaces");

                    b.Property<string>("TxtProviderPremiseRoomEquipment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_provider_premise_room_equipment");

                    b.Property<string>("TxtProviderPremiseRoomName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_provider_premise_room_name");

                    b.HasKey("Id")
                        .HasName("tb_candidate_provider_premises_rooms_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_candidate_provider_premises_rooms", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbCandidateProvidersCipoManagement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntCipoManagementId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_cipo_management_id");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<string>("TxtCipoManagementNotes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_cipo_management_notes");

                    b.HasKey("Id")
                        .HasName("tb_candidate_providers_cipo_management_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_candidate_providers_cipo_management", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbCandidateProvidersCpoManagement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntCpoManagementId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_cpo_management_id");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<string>("TxtCpoManagementNotes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_cpo_management_notes");

                    b.HasKey("Id")
                        .HasName("tb_candidate_providers_cpo_management_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_candidate_providers_cpo_management", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbCandidateProvidersDocumentsManagement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntDocumentsManagementId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_documents_management_id");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<DateTime?>("TsDocument")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("ts_document")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("TxtDocumentsManagementFile")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_documents_management_file");

                    b.Property<string>("TxtDocumentsManagementTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_documents_management_title");

                    b.HasKey("Id")
                        .HasName("tb_candidate_providers_documents_management_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_candidate_providers_documents_management", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbCandidateProviderSpecialitiesCurriculum", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool?>("BoolIsUpdated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bool_is_updated")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("DtUpdateDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_update_date");

                    b.Property<long?>("IntCandidateProviderSpecialityId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_candidate_provider_speciality_id");

                    b.Property<long?>("IntSpecialityCurriculumUpdateReasonId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_speciality_curriculum_update_reason_id");

                    b.Property<string>("OidFile")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("oid_file");

                    b.Property<string>("VcFileName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_file_name");

                    b.HasKey("Id")
                        .HasName("tb_candidate_provider_specialities_curriculum_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_candidate_provider_specialities_curriculum", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbCandidateProvidersSpeciality", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool?>("BoolIsAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bool_is_added")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("BoolIsApproved")
                        .HasColumnType("bit")
                        .HasColumnName("bool_is_approved");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<long?>("IntVetSpecReplaced")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_spec_replaced");

                    b.Property<long?>("IntVetSpecialityId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_speciality_id");

                    b.Property<string>("TxtSpecialityFile")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_speciality_file");

                    b.Property<string>("TxtSpecialityNotes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_speciality_notes");

                    b.HasKey("Id")
                        .HasName("tb_candidate_providers_specialities_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_candidate_providers_specialities", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbCandidateProvidersState", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("DtCandidateProvidersStateChange")
                        .HasColumnType("date")
                        .HasColumnName("dt_candidate_providers_state_change");

                    b.Property<long?>("IntCandidateProvidersStateId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_candidate_providers_state_id");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<long?>("IntUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_user_id");

                    b.HasKey("Id")
                        .HasName("tb_candidate_providers_state_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_candidate_providers_state", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbCandidateTrainer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool?>("BoolIsAndragog")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bool_is_andragog")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("DtTcontractDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_tcontract_date");

                    b.Property<int?>("IntBirthYear")
                        .HasColumnType("int")
                        .HasColumnName("int_birth_year");

                    b.Property<long?>("IntEducationId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_education_id");

                    b.Property<long?>("IntEgnTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_egn_type_id");

                    b.Property<long?>("IntGenderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_gender_id");

                    b.Property<long?>("IntNationalityId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_nationality_id");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<long?>("IntTcontractTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_tcontract_type_id");

                    b.Property<string>("TxtEducationAcademicNotes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_education_academic_notes");

                    b.Property<string>("TxtEducationCertificateNotes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_education_certificate_notes");

                    b.Property<string>("TxtEducationSpecialityNotes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_education_speciality_notes");

                    b.Property<string>("VcEgn")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_egn");

                    b.Property<string>("VcEmail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_email");

                    b.Property<string>("VcTrainerFamilyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_trainer_family_name");

                    b.Property<string>("VcTrainerFirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_trainer_first_name");

                    b.Property<string>("VcTrainerSecondName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_trainer_second_name");

                    b.HasKey("Id")
                        .HasName("tb_candidate_trainers_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "IntProviderId", "VcEgn" }, "tb_candidate_trainers_int_provider_egn_key")
                        .IsUnique()
                        .HasFilter("([int_provider_id] IS NOT NULL AND [vc_egn] IS NOT NULL)");

                    b.ToTable("tb_candidate_trainers", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbCandidateTrainerDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntTrainerId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_trainer_id");

                    b.Property<string>("TxtDocumentsManagementFile")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_documents_management_file");

                    b.Property<string>("TxtDocumentsManagementTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_documents_management_title");

                    b.HasKey("Id")
                        .HasName("tb_candidate_trainer_documents_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_candidate_trainer_documents", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbCandidateTrainerProfile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool?>("BoolVetAreaPractice")
                        .HasColumnType("bit")
                        .HasColumnName("bool_vet_area_practice");

                    b.Property<bool?>("BoolVetAreaQualified")
                        .HasColumnType("bit")
                        .HasColumnName("bool_vet_area_qualified");

                    b.Property<bool?>("BoolVetAreaTheory")
                        .HasColumnType("bit")
                        .HasColumnName("bool_vet_area_theory");

                    b.Property<long?>("IntTrainerId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_trainer_id");

                    b.Property<long?>("IntVetAreaId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_area_id");

                    b.Property<long?>("IntVetSpecialityId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_speciality_id");

                    b.HasKey("Id")
                        .HasName("tb_candidate_trainer_profiles_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "IntTrainerId", "IntVetAreaId", "IntVetSpecialityId" }, "tb_candidate_trainer_id_int_vet_speciality_id_key")
                        .IsUnique()
                        .HasFilter("([int_trainer_id] IS NOT NULL AND [int_vet_area_id] IS NOT NULL AND [int_vet_speciality_id] IS NOT NULL)");

                    b.ToTable("tb_candidate_trainer_profiles", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbCandidateTrainerQualification", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("DtStartDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_start_date");

                    b.Property<long?>("IntProfessionId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_profession_id");

                    b.Property<int?>("IntQualificationDuration")
                        .HasColumnType("int")
                        .HasColumnName("int_qualification_duration");

                    b.Property<long?>("IntQualificationTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_qualification_type_id");

                    b.Property<long?>("IntTqualificationTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_tqualification_type_id");

                    b.Property<long?>("IntTrainerId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_trainer_id");

                    b.Property<string>("TxtQualificationName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_qualification_name");

                    b.HasKey("Id")
                        .HasName("tb_candidate_trainer_qualifications_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_candidate_trainer_qualifications", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbClient", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("DtClientBirthDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_client_birth_date");

                    b.Property<int?>("IntClientGender")
                        .HasColumnType("int")
                        .HasColumnName("int_client_gender");

                    b.Property<long?>("IntEducationId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_education_id");

                    b.Property<long?>("IntEgnTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_egn_type_id");

                    b.Property<long?>("IntNationalityId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_nationality_id");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<long?>("IntVetAreaId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_area_id");

                    b.Property<string>("VcClientFamilyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_client_family_name");

                    b.Property<string>("VcClientFirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_client_first_name");

                    b.Property<string>("VcClientSecondName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_client_second_name");

                    b.Property<string>("VcEgn")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_egn");

                    b.HasKey("Id")
                        .HasName("tb_clients_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "IntProviderId", "VcEgn" }, "tb_clients_int_provider_egn_key")
                        .IsUnique()
                        .HasFilter("([int_provider_id] IS NOT NULL AND [vc_egn] IS NOT NULL)");

                    b.ToTable("tb_clients", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbClientsCoursesDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Document1File")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("document_1_file");

                    b.Property<string>("Document2File")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("document_2_file");

                    b.Property<DateTime?>("DtDocumentDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_document_date");

                    b.Property<long?>("IntClientsCoursesId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_clients_courses_id");

                    b.Property<int?>("IntCourseFinishedYear")
                        .HasColumnType("int")
                        .HasColumnName("int_course_finished_year");

                    b.Property<long?>("IntDocumentStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("int_document_status")
                        .HasDefaultValueSql("((0))");

                    b.Property<long?>("IntDocumentTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_document_type_id");

                    b.Property<decimal?>("NumPracticeResult")
                        .HasColumnType("numeric(3,2)")
                        .HasColumnName("num_practice_result");

                    b.Property<decimal?>("NumTheoryResult")
                        .HasColumnType("numeric(3,2)")
                        .HasColumnName("num_theory_result");

                    b.Property<string>("VcDocumentPrnNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_document_prn_no");

                    b.Property<string>("VcDocumentPrnSer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_document_prn_ser");

                    b.Property<string>("VcDocumentProt")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_document_prot");

                    b.Property<string>("VcDocumentRegNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_document_reg_no");

                    b.Property<string>("VcQualificatiojLevel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_qualificatioj_level");

                    b.Property<string>("VcQualificationName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_qualification_name");

                    b.HasKey("Id")
                        .HasName("tb_clients_courses_documents_id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_clients_courses_documents", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbClientsRequiredDocument", b =>
                {
                    b.Property<bool?>("BoolBeforeDate")
                        .HasColumnType("bit")
                        .HasColumnName("bool_before_date");

                    b.Property<DateTime?>("DtDocumentDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_document_date");

                    b.Property<DateTime?>("DtDocumentOfficialDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_document_official_date");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntClientId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_client_id");

                    b.Property<long?>("IntCodeCourseGroupRequiredDocumentsTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_code_course_group_required_documents_type_id");

                    b.Property<long?>("IntCodeEducationId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_code_education_id");

                    b.Property<int?>("IntCodeExtRegisterId")
                        .HasColumnType("int")
                        .HasColumnName("int_code_ext_register_id");

                    b.Property<long?>("IntCodeQualLevelId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_code_qual_level_id");

                    b.Property<long?>("IntCourseGroupId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_group_id");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit")
                        .HasColumnName("is_valid");

                    b.Property<string>("OidFile")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("oid_file");

                    b.Property<string>("VcDesciption")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_desciption");

                    b.Property<string>("VcDocumentPrnNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_document_prn_no");

                    b.Property<string>("VcDocumentRegNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_document_reg_no");

                    b.ToTable("tb_clients_required_documents", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbCourse", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int?>("IntCourseEducRequirement")
                        .HasColumnType("int")
                        .HasColumnName("int_course_educ_requirement");

                    b.Property<long?>("IntCourseFrCurrId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_fr_curr_id");

                    b.Property<long?>("IntCourseNo")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_no");

                    b.Property<long?>("IntCourseTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_type_id");

                    b.Property<int?>("IntMandatoryHours")
                        .HasColumnType("int")
                        .HasColumnName("int_mandatory_hours");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<int?>("IntSelectableHours")
                        .HasColumnType("int")
                        .HasColumnName("int_selectable_hours");

                    b.Property<long?>("IntVetSpecialityId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_speciality_id");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("VcCourseAddNotes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_course_add_notes");

                    b.Property<string>("VcCourseName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_course_name");

                    b.HasKey("Id")
                        .HasName("tb_courses_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "IntProviderId", "IntVetSpecialityId" }, "tb_courses_i1");

                    b.ToTable("tb_courses", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbCourse40Competence", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("IntClientId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_client_id");

                    b.Property<bool?>("IsValid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("is_valid")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("VcCompetence")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("vc_competence");

                    b.HasKey("Id")
                        .HasName("tb_course40_competences_pk");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_course40_competences", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbCourseGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool?>("BoolIsArchived")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bool_is_archived")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("DtCourseSubscribeDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_course_subscribe_date");

                    b.Property<DateTime?>("DtEndDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_end_date");

                    b.Property<DateTime?>("DtExamPracticeDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_exam_practice_date");

                    b.Property<DateTime?>("DtExamTheoryDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_exam_theory_date");

                    b.Property<DateTime?>("DtStartDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_start_date");

                    b.Property<long?>("IntAssignTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_assign_type_id");

                    b.Property<int?>("IntCourseDuration")
                        .HasColumnType("int")
                        .HasColumnName("int_course_duration");

                    b.Property<long?>("IntCourseEdFormId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_ed_form_id");

                    b.Property<long?>("IntCourseFrCurrId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_fr_curr_id");

                    b.Property<long?>("IntCourseId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_id");

                    b.Property<long?>("IntCourseMeasureTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_measure_type_id");

                    b.Property<long?>("IntCourseStatusId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_status_id");

                    b.Property<long?>("IntCourseTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_type_id");

                    b.Property<long?>("IntEkatteId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_ekatte_id");

                    b.Property<int?>("IntMandatoryHours")
                        .HasColumnType("int")
                        .HasColumnName("int_mandatory_hours");

                    b.Property<int?>("IntPDisabilityCount")
                        .HasColumnType("int")
                        .HasColumnName("int_p_disability_count");

                    b.Property<long?>("IntProviderPremise")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_premise");

                    b.Property<int?>("IntSelectableHours")
                        .HasColumnType("int")
                        .HasColumnName("int_selectable_hours");

                    b.Property<decimal?>("NumCourseCost")
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("num_course_cost");

                    b.Property<string>("VcAdditionalNotes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_additional_notes");

                    b.Property<string>("VcCourseAssignType")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_course_assign_type");

                    b.Property<string>("VcCourseGroupName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_course_group_name");

                    b.Property<string>("VcCourseNotes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_course_notes");

                    b.Property<string>("VcExamCommMembers")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_exam_comm_members");

                    b.HasKey("Id")
                        .HasName("tb_course_groups_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "DtEndDate" }, "i_tb_course_groups_end_date");

                    b.HasIndex(new[] { "DtStartDate" }, "i_tb_course_groups_start_date");

                    b.HasIndex(new[] { "IntCourseId" }, "tb_course_groups_i1");

                    b.ToTable("tb_course_groups", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbCourseGroups40", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("DtEndDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_end_date");

                    b.Property<DateTime?>("DtExamPracticeDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_exam_practice_date");

                    b.Property<DateTime?>("DtExamTheoryDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_exam_theory_date");

                    b.Property<DateTime?>("DtStartDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_start_date");

                    b.Property<long?>("IntAssignTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_assign_type_id");

                    b.Property<long?>("IntClientId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_client_id");

                    b.Property<int?>("IntCourseDuration")
                        .HasColumnType("int")
                        .HasColumnName("int_course_duration");

                    b.Property<long?>("IntCourseEdFormId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_ed_form_id");

                    b.Property<long?>("IntCourseFrCurrId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_fr_curr_id");

                    b.Property<long?>("IntCourseTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_type_id");

                    b.Property<long?>("IntEkatteId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_ekatte_id");

                    b.Property<int?>("IntMandatoryHours")
                        .HasColumnType("int")
                        .HasColumnName("int_mandatory_hours");

                    b.Property<long?>("IntProviderPremise")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_premise");

                    b.Property<int?>("IntSelectableHours")
                        .HasColumnType("int")
                        .HasColumnName("int_selectable_hours");

                    b.Property<long?>("IntVetSpecialityId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_speciality_id");

                    b.Property<decimal?>("NumCourseCost")
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("num_course_cost");

                    b.Property<string>("VcAdditionalNotes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_additional_notes");

                    b.Property<string>("VcExamCommMembers")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_exam_comm_members");

                    b.HasKey("Id")
                        .HasName("tb_course_groups_40_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_course_groups_40", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbCourseGroupsDuplicate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("DtEndDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_end_date");

                    b.Property<DateTime?>("DtOriginalDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_original_date");

                    b.Property<DateTime?>("DtStartDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_start_date");

                    b.Property<long?>("IntClientId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_client_id");

                    b.Property<long>("IntCodeDocumentTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_code_document_type_id");

                    b.Property<int?>("IntCourseFinishedYear")
                        .HasColumnType("int")
                        .HasColumnName("int_course_finished_year");

                    b.Property<long?>("IntOriginalDocumentId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_original_document_id");

                    b.Property<long?>("IntOriginalRefClientId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_original_ref_client_id");

                    b.Property<long?>("IntVetSpecialityId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_speciality_id");

                    b.Property<string>("VcOriginalPrnNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_original_prn_no");

                    b.Property<string>("VcOriginalRegNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_original_reg_no");

                    b.HasKey("Id")
                        .HasName("tb_course_groups_duplicates_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_course_groups_duplicates", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbCurricModule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntCourseGroupId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_group_id");

                    b.Property<long>("IntCourseId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_id");

                    b.Property<long>("IntCurricHoursType")
                        .HasColumnType("bigint")
                        .HasColumnName("int_curric_hours_type");

                    b.Property<int?>("IntCurricOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("int_curric_order")
                        .HasDefaultValueSql("((10))");

                    b.Property<long>("IntHours")
                        .HasColumnType("bigint")
                        .HasColumnName("int_hours");

                    b.Property<long?>("IntTrainingType")
                        .HasColumnType("bigint")
                        .HasColumnName("int_training_type");

                    b.Property<bool?>("IsValid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("is_valid")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("VcModuleName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("vc_module_name");

                    b.HasKey("Id")
                        .HasName("tb_curric_modules_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_curric_modules", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbDoi", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool?>("BSubmitted")
                        .HasColumnType("bit")
                        .HasColumnName("b_submitted");

                    b.Property<DateTime?>("DtSubmittedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_submitted_date");

                    b.Property<long?>("IntDoiId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_doi_id");

                    b.Property<string>("VcComment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_comment");

                    b.Property<string>("VcDoiCertificateSupplement")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_doi_certificate_supplement");

                    b.Property<string>("VcDoiCommission")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_doi_commission");

                    b.Property<string>("VcDoiEducObjectives")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_doi_educ_objectives");

                    b.Property<string>("VcDoiGeneralDescr")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_doi_general_descr");

                    b.Property<string>("VcDoiJobCareer")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_doi_job_career");

                    b.Property<string>("VcDoiJobProfile")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_doi_job_profile");

                    b.Property<string>("VcDoiLrngOutcomes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_doi_lrng_outcomes");

                    b.Property<string>("VcDoiMtbUpdates")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_doi_mtb_updates");

                    b.Property<string>("VcDoiPdfPath")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_doi_pdf_path");

                    b.Property<string>("VcDoiRegualtion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_doi_regualtion");

                    b.Property<string>("VcSearch")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_search");

                    b.HasKey("Id")
                        .HasName("tb_doi_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "IntDoiId" }, "unique_int_doi_id")
                        .IsUnique()
                        .HasFilter("([int_doi_id] IS NOT NULL)");

                    b.ToTable("tb_doi", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbDoiCommission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("VcDoiCommName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("vc_doi_comm_name");

                    b.HasKey("Id")
                        .HasName("tb_doi_commissions_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_doi_commissions", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbESigner", b =>
                {
                    b.Property<DateTime>("DtFrom")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_from")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DtTo")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_to");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<long?>("IntUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_user_id");

                    b.Property<string>("VcDescription")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("vc_description");

                    b.Property<string>("VcIdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_id_number");

                    b.Property<string>("VcNames")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("vc_names");

                    b.HasIndex(new[] { "IntProviderId", "IntUserId", "VcIdNumber" }, "tb_e_signers_int_provider_id_int_user_id_vc_id_number_key")
                        .IsUnique()
                        .HasFilter("([int_provider_id] IS NOT NULL AND [int_user_id] IS NOT NULL AND [vc_id_number] IS NOT NULL)");

                    b.ToTable("tb_e_signers", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbExpert", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("DtBirthDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_birth_date");

                    b.Property<DateTime?>("DtInceptionDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_inception_date");

                    b.Property<long?>("IntCommMemberId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_comm_member_id");

                    b.Property<long?>("IntEgnTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_egn_type_id");

                    b.Property<long?>("IntExpertEkatteId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_expert_ekatte_id");

                    b.Property<long?>("IntExpertGenderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_expert_gender_id");

                    b.Property<long?>("IntExpertUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_expert_user_id");

                    b.Property<long?>("IntNationalityId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_nationality_id");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("VcEducation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_education");

                    b.Property<string>("VcEgn")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_egn");

                    b.Property<string>("VcExpertAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_expert_address");

                    b.Property<string>("VcExpertEmail1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_expert_email1");

                    b.Property<string>("VcExpertEmail2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_expert_email2");

                    b.Property<string>("VcExpertFamilyName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_expert_family_name");

                    b.Property<string>("VcExpertFax")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_expert_fax");

                    b.Property<string>("VcExpertFirstName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_expert_first_name");

                    b.Property<string>("VcExpertOccupation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_expert_occupation");

                    b.Property<string>("VcExpertPhone1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_expert_phone1");

                    b.Property<string>("VcExpertPhone2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_expert_phone2");

                    b.Property<string>("VcExpertSecondName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_expert_second_name");

                    b.Property<string>("VcExpertZipcode")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("vc_expert_zipcode");

                    b.Property<string>("VcInceptionOrder")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_inception_order");

                    b.Property<string>("VcTitle")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_title");

                    b.HasKey("Id")
                        .HasName("tb_experts_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_experts", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbExpertCommission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("VcExpCommName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("vc_exp_comm_name");

                    b.HasKey("Id")
                        .HasName("tb_expert_commissions_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_expert_commissions", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbGeneratedDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntCodeProceduresDocumentsId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_code_procedures_documents_id");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<string>("OidFile")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("oid_file");

                    b.HasKey("Id")
                        .HasName("tb_generated_documents_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_generated_documents", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int?>("IntGroupType")
                        .HasColumnType("int")
                        .HasColumnName("int_group_type");

                    b.Property<long?>("Pid")
                        .HasColumnType("bigint")
                        .HasColumnName("pid");

                    b.Property<string>("VcGroupName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_group_name");

                    b.Property<string>("VcShortName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_short_name");

                    b.HasKey("Id")
                        .HasName("tb_groups_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_groups", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbImportXml", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("FileDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("file_date");

                    b.Property<string>("FileName")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("file_name");

                    b.Property<long?>("IntCourseGroupId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_group_id");

                    b.Property<long?>("IntCourseId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_id");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.HasKey("Id")
                        .HasName("tb_import_xml_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_import_xml", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbNapooRequestDoc", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool?>("BoolIsSent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bool_is_sent")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("DtRequestDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_request_date");

                    b.Property<int?>("IntRequestYear")
                        .HasColumnType("int")
                        .HasColumnName("int_request_year");

                    b.Property<DateTime?>("Ts")
                        .HasColumnType("datetime2")
                        .HasColumnName("ts");

                    b.HasKey("Id")
                        .HasName("tb_napoo_request_doc_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_napoo_request_doc", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbPayment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("IntProcedurePriceId")
                        .HasColumnType("int")
                        .HasColumnName("int_procedure_price_id");

                    b.Property<long>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<int?>("IntSpecialitiesCount")
                        .HasColumnType("int")
                        .HasColumnName("int_specialities_count");

                    b.Property<long>("IntStartedProceduresId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_started_procedures_id");

                    b.Property<int?>("IntStatus")
                        .HasColumnType("int")
                        .HasColumnName("int_status");

                    b.Property<int>("IntSume")
                        .HasColumnType("int")
                        .HasColumnName("int_sume");

                    b.Property<long?>("IntTransactionId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_transaction_id");

                    b.Property<DateTime>("TsGen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("ts_gen")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("TsPayed")
                        .HasColumnType("datetime2")
                        .HasColumnName("ts_payed");

                    b.Property<string>("VcText")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("vc_text");

                    b.HasKey("Id")
                        .HasName("tb_payments_pk");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_payments", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbProcedureDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("DsDate")
                        .HasColumnType("date")
                        .HasColumnName("ds_date");

                    b.Property<long?>("DsId")
                        .HasColumnType("bigint")
                        .HasColumnName("ds_id");

                    b.Property<DateTime?>("DsOfficialDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ds_official_date");

                    b.Property<string>("DsOfficialId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ds_official_id");

                    b.Property<string>("DsOfficialNo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ds_official_no");

                    b.Property<string>("DsPrep")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ds_prep");

                    b.Property<string>("Extension")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("extension");

                    b.Property<string>("Filename")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("filename");

                    b.Property<long?>("IntExpertId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_expert_id");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit")
                        .HasColumnName("is_valid");

                    b.Property<string>("MimeType")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("mime_type");

                    b.Property<string>("OidFile")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("oid_file");

                    b.Property<long?>("ProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("provider_id");

                    b.Property<long?>("StageDocumentId")
                        .HasColumnType("bigint")
                        .HasColumnName("stage_document_id");

                    b.Property<long?>("StartedProcedureId")
                        .HasColumnType("bigint")
                        .HasColumnName("started_procedure_id");

                    b.Property<DateTime?>("Ts")
                        .HasColumnType("datetime2")
                        .HasColumnName("ts");

                    b.Property<long?>("Uin")
                        .HasColumnType("bigint")
                        .HasColumnName("uin");

                    b.HasKey("Id")
                        .HasName("tb_procedure_documents_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_procedure_documents", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbProcedurePrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool?>("BoolCipo")
                        .HasColumnType("bit")
                        .HasColumnName("bool_cipo");

                    b.Property<bool?>("BoolCountDependant")
                        .HasColumnType("bit")
                        .HasColumnName("bool_count_dependant");

                    b.Property<bool?>("BoolCpo")
                        .HasColumnType("bit")
                        .HasColumnName("bool_cpo");

                    b.Property<DateTime>("DtFrom")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("dt_from")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DtTo")
                        .HasColumnType("date")
                        .HasColumnName("dt_to");

                    b.Property<int?>("IntCountMax")
                        .HasColumnType("int")
                        .HasColumnName("int_count_max");

                    b.Property<int?>("IntCountMin")
                        .HasColumnType("int")
                        .HasColumnName("int_count_min");

                    b.Property<int?>("IntPaymentPeriod")
                        .HasColumnType("int")
                        .HasColumnName("int_payment_period");

                    b.Property<long?>("IntPocedureId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_pocedure_id");

                    b.Property<int?>("IntPrice")
                        .HasColumnType("int")
                        .HasColumnName("int_price");

                    b.Property<long?>("IntProcedureStepsId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_procedure_steps_id");

                    b.Property<string>("VcName")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("vc_name");

                    b.HasKey("Id")
                        .HasName("tb_procedure_prices_pk");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_procedure_prices", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbProcedureProgress", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("DtDecisionDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_decision_date");

                    b.Property<DateTime?>("DtSystemDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_system_date");

                    b.Property<string>("IntDecisionProtocolNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("int_decision_protocol_number");

                    b.Property<long?>("IntProcedureDecisionId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_procedure_decision_id");

                    b.Property<long?>("IntProcedureNumber")
                        .HasColumnType("bigint")
                        .HasColumnName("int_procedure_number");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<string>("VcProviderOwner")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_owner");

                    b.HasKey("Id")
                        .HasName("tb_procedure_progress_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "IntProviderId" }, "tb_procedure_progress_int_provider_id");

                    b.ToTable("tb_procedure_progress", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbProcedureProgressDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntProcedureProgressId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_procedure_progress_id");

                    b.Property<string>("VcDocumentFile")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_document_file");

                    b.Property<string>("VcDocumentName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_document_name");

                    b.HasKey("Id")
                        .HasName("tb_procedure_progress_documents_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_procedure_progress_documents", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbProvider", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool?>("BoolIsBrra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bool_is_brra")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("DtLicenceData")
                        .HasColumnType("date")
                        .HasColumnName("dt_licence_data");

                    b.Property<long?>("IntEkatteId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_ekatte_id");

                    b.Property<long?>("IntLicenceNumber")
                        .HasColumnType("bigint")
                        .HasColumnName("int_licence_number");

                    b.Property<long?>("IntLicenceStatusId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_licence_status_id");

                    b.Property<long?>("IntLocalGroupId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_local_group_id");

                    b.Property<string>("IntProviderBulstat")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("int_provider_bulstat");

                    b.Property<long?>("IntProviderContactPersEkatteId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_contact_pers_ekatte_id");

                    b.Property<long?>("IntProviderOwnershipId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_ownership_id");

                    b.Property<long?>("IntProviderRegistrationId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_registration_id");

                    b.Property<long?>("IntProviderStatusId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_status_id");

                    b.Property<string>("VcProviderAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_address");

                    b.Property<string>("VcProviderContactPers")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_contact_pers");

                    b.Property<string>("VcProviderContactPersAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_contact_pers_address");

                    b.Property<string>("VcProviderContactPersEmail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_contact_pers_email");

                    b.Property<string>("VcProviderContactPersFax")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_contact_pers_fax");

                    b.Property<string>("VcProviderContactPersPhone1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_contact_pers_phone1");

                    b.Property<string>("VcProviderContactPersPhone2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_contact_pers_phone2");

                    b.Property<string>("VcProviderContactPersZipcode")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("vc_provider_contact_pers_zipcode");

                    b.Property<string>("VcProviderEmail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_email");

                    b.Property<string>("VcProviderFax")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_fax");

                    b.Property<string>("VcProviderManager")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_manager");

                    b.Property<string>("VcProviderName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_name");

                    b.Property<string>("VcProviderOwner")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_owner");

                    b.Property<string>("VcProviderPhone1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_phone1");

                    b.Property<string>("VcProviderPhone2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_phone2");

                    b.Property<string>("VcProviderProfile")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_provider_profile");

                    b.Property<string>("VcProviderWeb")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_web");

                    b.Property<string>("VcZipCode")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("vc_zip_code");

                    b.HasKey("Id")
                        .HasName("tb_providers_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_providers", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbProviderActivity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int?>("IntCurrentYear")
                        .HasColumnType("int")
                        .HasColumnName("int_current_year");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<string>("TxtProviderActivities")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_provider_activities");

                    b.HasKey("Id")
                        .HasName("tb_provider_activities_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_provider_activities", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbProviderPremise", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool?>("BoolIsVisited")
                        .HasColumnType("bit")
                        .HasColumnName("bool_is_visited");

                    b.Property<int?>("IntPreaz")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("int_preaz")
                        .HasDefaultValueSql("((0))");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<long?>("IntProviderPremiseEkatte")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_premise_ekatte");

                    b.Property<int?>("IntProviderPremiseNo")
                        .HasColumnType("int")
                        .HasColumnName("int_provider_premise_no");

                    b.Property<long?>("IntProviderPremiseStatus")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_premise_status");

                    b.Property<string>("TxtProviderPremiseAddress")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_provider_premise_address");

                    b.Property<string>("TxtProviderPremiseName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_provider_premise_name");

                    b.Property<string>("TxtProviderPremiseNotes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_provider_premise_notes");

                    b.HasKey("Id")
                        .HasName("tb_provider_premises_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_provider_premises", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbProviderPremisesRoom", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntPremiseId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_premise_id");

                    b.Property<int?>("IntProviderPremiseRoomArea")
                        .HasColumnType("int")
                        .HasColumnName("int_provider_premise_room_area");

                    b.Property<int?>("IntProviderPremiseRoomNo")
                        .HasColumnType("int")
                        .HasColumnName("int_provider_premise_room_no");

                    b.Property<long?>("IntProviderPremiseRoomType")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_premise_room_type");

                    b.Property<long?>("IntProviderPremiseRoomUsage")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_premise_room_usage");

                    b.Property<int?>("IntProviderPremiseRoomWorkplaces")
                        .HasColumnType("int")
                        .HasColumnName("int_provider_premise_room_workplaces");

                    b.Property<string>("TxtProviderPremiseRoomEquipment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_provider_premise_room_equipment");

                    b.Property<string>("TxtProviderPremiseRoomName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_provider_premise_room_name");

                    b.HasKey("Id")
                        .HasName("tb_provider_premises_rooms_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_provider_premises_rooms", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbProvidersCipoManagement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntCipoManagementId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_cipo_management_id");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<string>("TxtCipoManagementNotes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_cipo_management_notes");

                    b.HasKey("Id")
                        .HasName("tb_providers_cipo_management_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_providers_cipo_management", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbProvidersCpoManagement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntCpoManagementId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_cpo_management_id");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<string>("TxtCpoManagementNotes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_cpo_management_notes");

                    b.HasKey("Id")
                        .HasName("tb_providers_cpo_management_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_providers_cpo_management", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbProvidersDocsDashboard", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool?>("BoolHasSerialNumber")
                        .HasColumnType("bit")
                        .HasColumnName("bool_has_serial_number");

                    b.Property<int?>("IntCntAvlb")
                        .HasColumnType("int")
                        .HasColumnName("int_cnt_avlb");

                    b.Property<int?>("IntCntDstr")
                        .HasColumnType("int")
                        .HasColumnName("int_cnt_dstr");

                    b.Property<int?>("IntCntNull")
                        .HasColumnType("int")
                        .HasColumnName("int_cnt_null");

                    b.Property<int?>("IntCntPrnt")
                        .HasColumnType("int")
                        .HasColumnName("int_cnt_prnt");

                    b.Property<int?>("IntCntRecv")
                        .HasColumnType("int")
                        .HasColumnName("int_cnt_recv");

                    b.Property<int?>("IntCntSent")
                        .HasColumnType("int")
                        .HasColumnName("int_cnt_sent");

                    b.Property<long?>("IntDocTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_doc_type_id");

                    b.Property<int?>("IntDocsYear")
                        .HasColumnType("int")
                        .HasColumnName("int_docs_year");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.HasKey("Id")
                        .HasName("tb_providers_docs_dashboard_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "IntProviderId", "IntDocTypeId", "IntDocsYear" }, "tb_providers_docs_dashboard_unique_key")
                        .IsUnique()
                        .HasFilter("([int_provider_id] IS NOT NULL AND [int_doc_type_id] IS NOT NULL AND [int_docs_year] IS NOT NULL)");

                    b.ToTable("tb_providers_docs_dashboard", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbProvidersDocsOffer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool?>("BoolOfferValid")
                        .HasColumnType("bit")
                        .HasColumnName("bool_offer_valid");

                    b.Property<DateTime?>("DtClosed")
                        .HasColumnType("date")
                        .HasColumnName("dt_closed");

                    b.Property<DateTime?>("DtOffered")
                        .HasColumnType("date")
                        .HasColumnName("dt_offered");

                    b.Property<int?>("IntCountOffered")
                        .HasColumnType("int")
                        .HasColumnName("int_count_offered");

                    b.Property<long?>("IntDocTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_doc_type_id");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<int?>("IntSeekOffer")
                        .HasColumnType("int")
                        .HasColumnName("int_seek_offer");

                    b.HasKey("Id")
                        .HasName("tb_providers_docs_offers_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_providers_docs_offers", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbProvidersDocumentsManagement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntDocumentsManagementId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_documents_management_id");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<DateTime?>("TsDocument")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("ts_document")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("TxtDocumentsManagementFile")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_documents_management_file");

                    b.Property<string>("TxtDocumentsManagementTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_documents_management_title");

                    b.HasKey("Id")
                        .HasName("tb_providers_documents_management_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_providers_documents_management", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbProvidersLicenceChange", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("DtChangeDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_change_date");

                    b.Property<DateTime?>("DtInsertDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_insert_date");

                    b.Property<long?>("IntLicenceStatusDetailsId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_licence_status_details_id");

                    b.Property<long?>("IntLicenceStatusId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_licence_status_id");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.Property<string>("VcNotes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_notes");

                    b.Property<string>("VcNumberCommand")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_number_command");

                    b.HasKey("Id")
                        .HasName("tb_licence_change_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "IntProviderId", "DtChangeDate" }, "unique_provider_date")
                        .IsUnique()
                        .HasFilter("([int_provider_id] IS NOT NULL AND [dt_change_date] IS NOT NULL)");

                    b.ToTable("tb_providers_licence_change", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbProviderSpecialitiesCurriculum", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool?>("BoolIsUpdated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bool_is_updated")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("DtUpdateDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_update_date");

                    b.Property<long?>("IntProviderSpecialityId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_speciality_id");

                    b.Property<long?>("IntSpecialityCurriculumUpdateReasonId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_speciality_curriculum_update_reason_id");

                    b.Property<string>("OidFile")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("oid_file");

                    b.Property<string>("VcFileName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_file_name");

                    b.HasKey("Id")
                        .HasName("tb_provider_specialities_curriculum_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_provider_specialities_curriculum", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbProviderSpeciality", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool?>("BoolIsAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bool_is_added")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("BoolIsValid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bool_is_valid")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("DtLicenceData")
                        .HasColumnType("date")
                        .HasColumnName("dt_licence_data");

                    b.Property<string>("IntLicenceProtNo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("int_licence_prot_no");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<long?>("IntVetSpecialityId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_speciality_id");

                    b.Property<string>("TxtSpecialityFile")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_speciality_file");

                    b.Property<string>("TxtSpecialityNotes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_speciality_notes");

                    b.HasKey("Id")
                        .HasName("tb_provider_specialities_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_provider_specialities", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbProvidersRequestDoc", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool?>("BoolIsSent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bool_is_sent")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("DtRequestDoc")
                        .HasColumnType("date")
                        .HasColumnName("dt_request_doc");

                    b.Property<int?>("IntCurrentYear")
                        .HasColumnType("int")
                        .HasColumnName("int_current_year");

                    b.Property<int?>("IntNapooRequestId")
                        .HasColumnType("int")
                        .HasColumnName("int_napoo_request_id");

                    b.Property<int?>("IntProviderId")
                        .HasColumnType("int")
                        .HasColumnName("int_provider_id");

                    b.Property<long?>("OidRequestPdf")
                        .HasColumnType("oid")
                        .HasColumnName("oid_request_pdf");

                    b.Property<DateTime?>("Ts")
                        .HasColumnType("datetime2")
                        .HasColumnName("ts");

                    b.Property<string>("VcAddress")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("vc_address");

                    b.Property<string>("VcName")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("vc_name");

                    b.Property<string>("VcPosition")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("vc_position");

                    b.Property<string>("VcTelephone")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("vc_telephone");

                    b.HasKey("Id")
                        .HasName("tb_providers_request_doc_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_providers_request_doc", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbProviderUploadedDoc", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<byte[]>("BinFile")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("bin_file");

                    b.Property<DateTime?>("DtDocUploadDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_doc_upload_date");

                    b.Property<long?>("IntDocStatusId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_doc_status_id");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<int?>("IntUploadDocTypeId")
                        .HasColumnType("int")
                        .HasColumnName("int_upload_doc_type_id");

                    b.Property<long?>("IntYear")
                        .HasColumnType("bigint")
                        .HasColumnName("int_year");

                    b.Property<string>("TxtDocDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_doc_description");

                    b.Property<string>("TxtFileName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_file_name");

                    b.Property<string>("TxtFileType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_file_type");

                    b.HasKey("Id")
                        .HasName("tb_provider_uploaded_docs_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_provider_uploaded_docs", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbRequestDocsManagement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("DtReceiveDocsDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_receive_docs_date");

                    b.Property<int?>("IntNapooRequestId")
                        .HasColumnType("int")
                        .HasColumnName("int_napoo_request_id");

                    b.Property<long?>("IntPartnerId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_partner_id");

                    b.Property<long>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<int?>("IntReceiveDocsCount")
                        .HasColumnType("int")
                        .HasColumnName("int_receive_docs_count");

                    b.Property<int?>("IntReceiveDocsYear")
                        .HasColumnType("int")
                        .HasColumnName("int_receive_docs_year");

                    b.Property<long?>("IntRequestDocTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_request_doc_type_id");

                    b.Property<int?>("IntRequestDocsOperationId")
                        .HasColumnType("int")
                        .HasColumnName("int_request_docs_operation_id");

                    b.Property<int?>("IntRequestId")
                        .HasColumnType("int")
                        .HasColumnName("int_request_id");

                    b.Property<string>("VcOrigTbClCourDocs")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_orig_tb_cl_cour_docs");

                    b.Property<string>("VcTbProviderUploadedDocsIds")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("vc_tb_provider_uploaded_docs_ids");

                    b.HasKey("Id")
                        .HasName("tb_request_docs_management_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "IntProviderId", "IntPartnerId", "IntRequestId", "IntRequestDocTypeId", "IntReceiveDocsYear", "DtReceiveDocsDate" }, "tb_request_docs_management_unique_key")
                        .IsUnique()
                        .HasFilter("([int_provider_id] IS NOT NULL AND [int_partner_id] IS NOT NULL AND [int_request_id] IS NOT NULL AND [int_request_doc_type_id] IS NOT NULL AND [int_receive_docs_year] IS NOT NULL AND [dt_receive_docs_date] IS NOT NULL)");

                    b.ToTable("tb_request_docs_management", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbRequestDocsSn", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int?>("BoolChkFabn")
                        .HasColumnType("int")
                        .HasColumnName("bool_chk_fabn");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<int?>("IntReceiveDocsYear")
                        .HasColumnType("int")
                        .HasColumnName("int_receive_docs_year");

                    b.Property<long?>("IntRequestDocTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_request_doc_type_id");

                    b.Property<long?>("IntRequestDocsManagementId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_request_docs_management_id");

                    b.Property<int?>("IntRequestDocsOperationId")
                        .HasColumnType("int")
                        .HasColumnName("int_request_docs_operation_id");

                    b.Property<string>("VcRequestDocNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_request_doc_number");

                    b.HasKey("Id")
                        .HasName("tb_request_docs_sn_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "IntProviderId", "IntRequestDocsManagementId", "IntRequestDocTypeId", "IntReceiveDocsYear", "VcRequestDocNumber", "IntRequestDocsOperationId" }, "tb_request_docs_sn_unique_key")
                        .IsUnique()
                        .HasFilter("([int_provider_id] IS NOT NULL AND [int_request_docs_management_id] IS NOT NULL AND [int_request_doc_type_id] IS NOT NULL AND [int_receive_docs_year] IS NOT NULL AND [vc_request_doc_number] IS NOT NULL AND [int_request_docs_operation_id] IS NOT NULL)");

                    b.ToTable("tb_request_docs_sn", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("VcRoleName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_role_name");

                    b.HasKey("Id")
                        .HasName("tb_roles_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_roles", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbSignContent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("Dttimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("dttimestamp")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ExtensionsSubjectAltName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("extensions_subject_alt_name");

                    b.Property<long?>("IntClientId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_client_id");

                    b.Property<long?>("IntCourseGroupId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_course_group_id");

                    b.Property<long>("IntDocumentStatus")
                        .HasColumnType("bigint")
                        .HasColumnName("int_document_status");

                    b.Property<long>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<long>("IntUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_user_id");

                    b.Property<string>("IssuerO")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("issuer_o");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("serial_number");

                    b.Property<string>("SignerBulstat")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("signer_bulstat");

                    b.Property<string>("SignerEgn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("signer_egn");

                    b.Property<string>("SubjectC")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("subject_c");

                    b.Property<string>("SubjectCn")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("subject_cn");

                    b.Property<string>("SubjectE")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("subject_e");

                    b.Property<string>("SubjectEmailAddress")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("subject_email_address");

                    b.Property<string>("SubjectOu")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("subject_ou");

                    b.Property<string>("SubjectSerialNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("subject_serial_number");

                    b.Property<string>("ValidFrom")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("valid_from");

                    b.Property<string>("ValidTo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("valid_to");

                    b.Property<string>("VcContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_content");

                    b.Property<string>("VcSignedContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_signed_content");

                    b.HasKey("Id")
                        .HasName("tb_sign_content_pk");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_sign_content", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbStartedProcedure", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("DtChairmanReportDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_chairman_report_date");

                    b.Property<DateTime?>("DtDeniedLicenseOrderDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_denied_license_order_date");

                    b.Property<DateTime?>("DtExpertReportDeadline")
                        .HasColumnType("date")
                        .HasColumnName("dt_expert_report_deadline");

                    b.Property<DateTime?>("DtIssuedLicenseOrderDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_issued_license_order_date");

                    b.Property<DateTime?>("DtIssuesMailNumber")
                        .HasColumnType("date")
                        .HasColumnName("dt_issues_mail_number");

                    b.Property<DateTime?>("DtLegalBookDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_legal_book_date");

                    b.Property<DateTime?>("DtLicenseDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_license_date");

                    b.Property<DateTime?>("DtLicenseExpertiseMailDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_license_expertise_mail_date");

                    b.Property<DateTime?>("DtLicenseExpertiseOrderDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_license_expertise_order_date");

                    b.Property<DateTime?>("DtMeetingDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_meeting_date");

                    b.Property<DateTime?>("DtMeetingProtocolDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_meeting_protocol_date");

                    b.Property<DateTime?>("DtNapooReportDeadline")
                        .HasColumnType("date")
                        .HasColumnName("dt_napoo_report_deadline");

                    b.Property<DateTime?>("DtNegativeDeadline")
                        .HasColumnType("date")
                        .HasColumnName("dt_negative_deadline");

                    b.Property<DateTime?>("DtNegativeOpinionDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_negative_opinion_date");

                    b.Property<DateTime?>("DtReportReviewDeadline")
                        .HasColumnType("date")
                        .HasColumnName("dt_report_review_deadline");

                    b.Property<DateTime?>("DtSummarizedReportDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_summarized_report_date");

                    b.Property<DateTime?>("DtSummarizedReportDeadline")
                        .HasColumnType("date")
                        .HasColumnName("dt_summarized_report_deadline");

                    b.Property<long?>("IntCandidateTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_candidate_type_id");

                    b.Property<long?>("IntEkatteId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_ekatte_id");

                    b.Property<string>("IntProviderBulstat")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("int_provider_bulstat");

                    b.Property<long?>("IntReceiveDocumentsId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_receive_documents_id");

                    b.Property<long?>("ProcedureId")
                        .HasColumnType("bigint")
                        .HasColumnName("procedure_id");

                    b.Property<long?>("ProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("provider_id");

                    b.Property<DateTime?>("Ts")
                        .HasColumnType("datetime2")
                        .HasColumnName("ts");

                    b.Property<string>("VcChairmanReportNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_chairman_report_number");

                    b.Property<string>("VcDeniedLicenseOrderNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_denied_license_order_number");

                    b.Property<string>("VcDeniedMailNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_denied_mail_number");

                    b.Property<string>("VcIssuedLicenseOrderNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_issued_license_order_number");

                    b.Property<string>("VcIssuesMailNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_issues_mail_number");

                    b.Property<string>("VcLegalBookNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_legal_book_number");

                    b.Property<string>("VcLicenseExpertiseMailNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_license_expertise_mail_number");

                    b.Property<string>("VcLicenseExpertiseOrderNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_license_expertise_order_number");

                    b.Property<string>("VcLicenseNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_license_number");

                    b.Property<string>("VcLicensingMailOutgoingNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_licensing_mail_outgoing_number");

                    b.Property<string>("VcMeetingHour")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_meeting_hour");

                    b.Property<string>("VcMeetingProtocolNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_meeting_protocol_number");

                    b.Property<string>("VcNegativeIssues")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_negative_issues");

                    b.Property<string>("VcNegativeNeededDocuments")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_negative_needed_documents");

                    b.Property<string>("VcNegativeOpinionNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_negative_opinion_number");

                    b.Property<string>("VcNegativeReasons")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_negative_reasons");

                    b.Property<string>("VcProviderEmail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_email");

                    b.Property<string>("VcProviderFax")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_fax");

                    b.Property<string>("VcProviderManager")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_manager");

                    b.Property<string>("VcProviderOwner")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_owner");

                    b.Property<string>("VcProviderPhone1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_phone1");

                    b.Property<string>("VcProviderPhone2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_phone2");

                    b.Property<string>("VcProviderWeb")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_provider_web");

                    b.Property<string>("VcSummarizedReportNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_summarized_report_number");

                    b.HasKey("Id")
                        .HasName("tb_started_procedures_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_started_procedures", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbStartedProcedureProgress", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("StageId")
                        .HasColumnType("bigint")
                        .HasColumnName("stage_id");

                    b.Property<long?>("StartedProcedureId")
                        .HasColumnType("bigint")
                        .HasColumnName("started_procedure_id");

                    b.Property<long?>("StepId")
                        .HasColumnType("bigint")
                        .HasColumnName("step_id");

                    b.Property<DateTime?>("Ts")
                        .HasColumnType("datetime2")
                        .HasColumnName("ts");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("tb_started_procedure_progress_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_started_procedure_progress", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbSurveyAnswer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("DtTimestamp")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_timestamp");

                    b.Property<long?>("IntQuestionId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_question_id");

                    b.Property<long?>("IntUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_user_id");

                    b.Property<string>("VcAnswerValue")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_answer_value");

                    b.HasKey("Id")
                        .HasName("tb_survey_answer_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_survey_answer", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbSurveyQuestion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool?>("BoolQuestionActive")
                        .HasColumnType("bit")
                        .HasColumnName("bool_question_active");

                    b.Property<long?>("IntOrderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_order_id");

                    b.Property<int?>("IntQuestionType")
                        .HasColumnType("int")
                        .HasColumnName("int_question_type");

                    b.Property<string>("VcQuestionText")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_question_text");

                    b.HasKey("Id")
                        .HasName("tb_survey_question_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_survey_question", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbTrainer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool?>("BoolIsAndragog")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bool_is_andragog")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("DtTcontractDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_tcontract_date");

                    b.Property<int?>("IntBirthYear")
                        .HasColumnType("int")
                        .HasColumnName("int_birth_year");

                    b.Property<long?>("IntEducationId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_education_id");

                    b.Property<long?>("IntEgnTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_egn_type_id");

                    b.Property<long?>("IntGenderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_gender_id");

                    b.Property<long?>("IntNationalityId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_nationality_id");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_provider_id");

                    b.Property<long?>("IntTcontractTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_tcontract_type_id");

                    b.Property<string>("TxtEducationAcademicNotes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_education_academic_notes");

                    b.Property<string>("TxtEducationCertificateNotes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_education_certificate_notes");

                    b.Property<string>("TxtEducationSpecialityNotes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_education_speciality_notes");

                    b.Property<string>("VcEgn")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_egn");

                    b.Property<string>("VcEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_email");

                    b.Property<string>("VcTrainerFamilyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_trainer_family_name");

                    b.Property<string>("VcTrainerFirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_trainer_first_name");

                    b.Property<string>("VcTrainerSecondName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vc_trainer_second_name");

                    b.HasKey("Id")
                        .HasName("tb_trainers_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "IntProviderId", "VcEgn" }, "tb_trainers_int_provider_egn_key")
                        .IsUnique()
                        .HasFilter("([int_provider_id] IS NOT NULL AND [vc_egn] IS NOT NULL)");

                    b.ToTable("tb_trainers", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbTrainerDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("IntTrainerId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_trainer_id");

                    b.Property<string>("TxtDocumentsManagementFile")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_documents_management_file");

                    b.Property<string>("TxtDocumentsManagementTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_documents_management_title");

                    b.HasKey("Id")
                        .HasName("tb_trainer_documents_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_trainer_documents", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbTrainerProfile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool?>("BoolVetAreaPractice")
                        .HasColumnType("bit")
                        .HasColumnName("bool_vet_area_practice");

                    b.Property<bool?>("BoolVetAreaQualified")
                        .HasColumnType("bit")
                        .HasColumnName("bool_vet_area_qualified");

                    b.Property<bool?>("BoolVetAreaTheory")
                        .HasColumnType("bit")
                        .HasColumnName("bool_vet_area_theory");

                    b.Property<long?>("IntTrainerId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_trainer_id");

                    b.Property<long?>("IntVetAreaId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_area_id");

                    b.Property<long?>("IntVetSpecialityId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_vet_speciality_id");

                    b.HasKey("Id")
                        .HasName("tb_trainer_profiles_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "IntTrainerId", "IntVetAreaId", "IntVetSpecialityId" }, "tb_trainer_id_int_vet_speciality_id_key")
                        .IsUnique()
                        .HasFilter("([int_trainer_id] IS NOT NULL AND [int_vet_area_id] IS NOT NULL AND [int_vet_speciality_id] IS NOT NULL)");

                    b.ToTable("tb_trainer_profiles", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbTrainerQualification", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("DtStartDate")
                        .HasColumnType("date")
                        .HasColumnName("dt_start_date");

                    b.Property<long?>("IntProfessionId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_profession_id");

                    b.Property<int?>("IntQualificationDuration")
                        .HasColumnType("int")
                        .HasColumnName("int_qualification_duration");

                    b.Property<long?>("IntQualificationTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_qualification_type_id");

                    b.Property<long?>("IntTqualificationTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_tqualification_type_id");

                    b.Property<long?>("IntTrainerId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_trainer_id");

                    b.Property<string>("TxtQualificationName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txt_qualification_name");

                    b.HasKey("Id")
                        .HasName("tb_trainer_qualifications_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_trainer_qualifications", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbUser", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Adat")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("adat");

                    b.Property<long?>("IntGlobalGroupId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_global_group_id");

                    b.Property<long?>("IntLocalGroupId")
                        .HasColumnType("bigint")
                        .HasColumnName("int_local_group_id");

                    b.Property<string>("Udat")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("udat");

                    b.Property<string>("Unhs")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("unhs");

                    b.Property<string>("Upwd")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("upwd");

                    b.Property<string>("VcFullname")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vc_fullname");

                    b.HasKey("Id")
                        .HasName("tb_users_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex(new[] { "Unhs" }, "tb_users_unhs_index")
                        .IsUnique()
                        .HasFilter("([unhs] IS NOT NULL)");

                    b.HasIndex(new[] { "Upwd" }, "tb_users_upwd_index")
                        .IsUnique()
                        .HasFilter("([upwd] IS NOT NULL)");

                    b.ToTable("tb_users", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbUserPress", b =>
                {
                    b.Property<int>("IntId")
                        .HasColumnType("int")
                        .HasColumnName("int_id");

                    b.Property<string>("VcName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_name");

                    b.Property<string>("VcObl")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_obl");

                    b.Property<string>("VcPass")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_pass");

                    b.Property<string>("VcUser")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vc_user");

                    b.HasKey("IntId")
                        .HasName("tb_user_press_pk");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("IntId"), false);

                    b.ToTable("tb_user_press", (string)null);
                });

            modelBuilder.Entity("NapooMigration.Models.TbVersion", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime?>("DtTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_timestamp")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("VcComment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vc_comment");

                    b.HasKey("Id")
                        .HasName("tb_version_pkey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tb_version", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
